{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/format/AttributeType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./contribs/gmf/src/index.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./src/CustomEvent.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/layertree/Controller.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/statemanager/Service.js","webpack:///./src/message/Notification.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/Time.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/Group.js","webpack:///./src/misc/debounce.js","webpack:///./src/statemanager/Location.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/draw/features.js","webpack:///./src/misc/File.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/mobile/navigation/component.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/Menu.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/format/Attribute.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/misc/filters.js","webpack:///./src/download/service.js","webpack:///./src/GeometryType.js","webpack:///./src/interaction/Measure.js","webpack:///./src/interaction/common.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/rule/Rule.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/map/component.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/download/Csv.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./contribs/gmf/src/mobile/measure/module.js","webpack:///./contribs/gmf/src/mobile/navigation/module.js","webpack:///./src/geolocation/mobile.js","webpack:///./contribs/gmf/src/controllers/AbstractMobileController.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/mobile_alt/Controller.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.html","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/permalink/crosshair.svg","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","assert","condition","opt_message","var_args","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","assertInstanceof","type","assertObjectPrototypeIsIntact","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","DATALAYERGROUP_NAME","EXTERNALLAYERGROUP_NAME","COORDINATES_LAYER_NAME","PermalinkParam","BG_LAYER","BG_LAYER_OPACITY","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","undefined","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","olBase","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","olArray","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","getIds","item","array","forEach","child","callback","layer","set","metadata","dimensions","ids","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","opt_params","STYLES","styles","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref","key","createBasicWMSLayer","layers","credential","fail","layerGroupCreationFn","orderedChildren","map","x","reverse","promises","all","collection","filter","olCollection","createBasicGroup","promiseSuccessFn","background_layers","itemType","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","config","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeoMapLayerHelper","service","_inherits","_ngeoDatasourceDataSo","options","_classCallCheck","_possibleConstructorReturn","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","ogcLayer","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","maxRes","minRes","inMinRange","inMaxRange","inRange","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeoFormatAttributeType","share","myActive","activeDimensions","itsActive","_createClass","time","range","lower","upper","end","start","active","timeRangeValue","supportsOGCQueries","_iterator5","_isArray5","_i5","_ref5","ngeoDatasourceDataSource","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","detail","olEventsEvent","toMulti","geometry","multiGeom","olGeomPoint","olGeomMultiPoint","appendPoint","olGeomLineString","olGeomMultiLineString","appendLineString","olGeomPolygon","olGeomMultiPolygon","appendPolygon","isSafari","navigator","userAgent","indexOf","colorZeroPadding","hex","rgbArrayToHex","rgb","g","b","Error","hexR","toString","hexG","hexB","decodeQueryString","queryString","queryData","pairs","substring","split","pair","indexOfEquals","decodeURIComponent","encodeQueryString","queryItem","encodeURIComponent","deleteCondition","event","olEventsCondition","extentToRectangle","extent","getTopLeft","getTopRight","getBottomRight","getBottomLeft","mousedown","document","addEventListener","evt","showMessage","show","msgObjects","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObject","defaultType","msg","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","index","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","addLayer","getLayers","getArray","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","Visitor","traverseDepthFirst","visitor","decision","stop","controller","featureUidToGroupIndex_","groups_","source_","olSourceVector","useSpatialIndex","layer_","olLayerVector","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","features","removeFeature","clear","olObj","getLayer","getFeatureOverlay","styleFunction","olStyleDefaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","olStyleStyle","defaultFunction","toStyleFunction","resolution","$filter","$filter_","gettextCatalog_","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","secondResolution","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","mode","interaction","olInteractionInteraction","getActive","setActive","olLayerBase","getVisible","setVisible","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","decrementLoadCount_","decrement_","on","olEvent","newLayer","element","getSource","olSourceTile","olSourceImage","$applyAsync","load_count","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","id","rootChild","grp","cancel","unshift","addGroupByName","groupName","_this4","gmfThemeThemes","addGroupByLayerName","layerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","removeGroup","found","removeAll","cloneGroupNode_","names","clone","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeoMessageMessage","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeoMessageNotification","ngeoStatemanagerService","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","opt_customSourceOptions","opt_customLayerOptions","FORMAT","LAYERS","olServerType","assign","serverType","crossOrigin","olSourceImageWMS","updateParams","layerOptions","olLayerImage","createBasicWMSLayerFromDataSource","visible","capabilitiesURL","opt_matrixSet","opt_dimensions","opt_customOptions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","olSourceWMTS","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","Infinity","opt_layers","OlLayerGroup","setLayers","getGroupFromMap","getLayerGroup","existingGroup","getFlatLayers","sublayers","hasGroupLayer","sublayer","getFlatLayers_","computedOpacity","opacity","getLayerByName","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","Math","round","olUri","isLayerVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","setZIndexToFirstLevelChildren","ZIndex","innerGroupLayers","innerLayer","setZIndex","updateWMSLayerState","getQuerySourceIds","NOT","OR","collection_","map_","listenerKeys_","handleDataSourcesAdd_","bindMap_","view","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","target","olView","syncDataSourceToResolution_","supportsDynamicInRange","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","updateCurrentTheme","fallbackThemeName","fallbackTheme","$emit","EventType","THEME_NAME_SET","gmfLayertreeTreeManager","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","addListenerKey","initListenerKey_","clearListenerKey","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","timeout_","container","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","parseInt","classNames","el","html","addClass","delay","CacheItem","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","inAMixedGroup","isOneParentNotMixed_","layerGroup","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","ngeoMiscWMSTime","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","dataSourcesCollection_","dataSources","title_","title","destroy","getDataSourceState","VisibilityState","ON","OFF","addDataSource","removeDataSource","remove","toggleVisibilityState","visibleToSet","visibilityState","otherState","INDETERMINATE","factory_","func","wait","invokeApply","timeout","_len","args","_key","context","later","factory","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","search","fragment_","hash","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","locationMock","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","$inject","_olEventsEventTarget","authenticationBaseUrl","gmfUser","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","resp","respData","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","setUser_","ngeoCustomEvent","user","emitEvent","username","role_name","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","short_url","status","postShortUrl_","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","featuresCollection_","wrapX","getExtent","FileGroup_inherits","_ngeoDatasourceGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","injector","unregister_","ngeoDatasourceFile","registerDataSource_","handleDataSourceVisibleChange_","oldValue","unregisterDataSource_","ngeoDatasourceGroup","OGCGroup_inherits","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_createClass","WMSGroup_inherits","_ngeoDatasourceOGCGro","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGC","updateLayer_","concat","unregister","WMSGroup_createClass","ngeoDatasourceOGCGroup","ngeoDataSources","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","formats","imagePngType","includes","infoFormats","ngeoDatasourceWMSGroup","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","isEmpty","fit","rejections","content","readOptions","featureProjection","getProjection","isKml","olFormatKML","extractStyles","readFeatures","isGpx","olFormatGPX","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","ngeoMiscFile","ngeoDatasourceDataSources","proj4","Proj","projections","add","somerc","epsg21781def","epsg21781extent","defs","olProjProj4","olProj","setExtent","stringToCoordinates","str","coords","y","getProjectionList","projectionsCodes","code","proj","projection","toUpperCase","substr","tryProjections","coordinates","viewProjection","opt_projections","olExtent","e","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","run","$templateCache","put","require","templateUrl","gmfLayertreeDatasourceGroupTreeTemplateUrl","Controller_","_class","scope_","getGroupUid","toggle","toggleDataSource","component","bindings","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","pointRecenterZoom_","pointRecenterZoom","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","image","olStyleIcon","src","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","getGeometry","getType","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","stateName","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","center","targetProjection","reprojectedCenter","getMapZoom","zoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","olFeature","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","class","text","removeOverlay","ngeoPopover","addOverlay","f","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","geom","size","getSize","maxZoom","enabled3d","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","getBackgroundLayerOpacity","opacity_","backgroundLayer","getOpacityBgLayer","refreshFirstLevelGroups","groupNodes","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","initialUri","href","authenticationRequired","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","writeFeatures","wfsLayer","numGroups","WFS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","showFeatures","wfsType","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","_ret","responses","wmsFindLayerCapability","_iterator6","_isArray6","_i6","_ref6","wmtsFindLayerCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iterator7","_isArray7","_i7","_ref7","unregisterExternalDSGroup_","_this9$ngeoStateManag","_iterator8","_isArray8","_i8","_ref8","wmsGroupLayerNames","_iterator10","_isArray10","_i10","_ref10","wmsDataSource","_iterator9","_isArray9","_i9","_ref9","wmtsGroupLayerNames","_iterator11","_isArray11","_i11","_ref11","wmtsDataSource","_this10","_iterator12","_isArray12","_i12","_ref12","startsWith","_iterator14","_isArray14","_i14","_ref14","_iterator15","_isArray15","_i15","_ref15","_iterator13","_isArray13","_i13","_ref13","ngeoDrawFeatures","ngeoMiscDebounce","ngeoMiscEventHelper","ngeoStatemanagerModule","OpenLayersLayerProperties","regexp","key1","key2","attrs","component_","ngeoDatePickerTemplateUrl","scope","onDateSelected","bindToController","restrict","link","lang","getCurrentLanguage","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","find","datepicker","edateOptions","dp","css","stopPropagation","directive","ngeoTime","ngeoTime_","isModeRange","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","sDate","eDate","isDate","initialOptions_","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","reason","onprogress","readAsText","load","opt_cancelP","LINE_STRING","POINT","POLYGON","opt_options","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeStyleFill_","opt_propertyName","propertyName","getColor","fillColorRgba","olColor","fillColorHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","font","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","lineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","point","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","polygon","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","parts","part","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","dx","dy","encodedCoordinates","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadDatasets","typeahead","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","$apply","open","close","suggestion","dataset","cursorchange","select","autocomplete","empty","datasetsempty","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","geojsonFormat","olFormatGeoJSON","bloodhoundOptions","remote","prepare","settings","transform","parsedResponse","featureCollection","dataProjection","datumTokenizer","queryTokenizer","Bloodhound","tokenizers","whitespace","remoteOptions","Function","sourceProjection","ngeoProjEPSG21781","parseBbox","bbox","regex","exec","removeHtmlTags","extractName","limit","origins","results","geom_st_box2d","setId","featureId","bhOptions","ngeoSearchSearchDirective","ngeoSearchCreateGeoJSONBloodhound","ngeoSearchCreateLocationSearchBloodhound","navCtrl","slid_","active_","header_","backButton_","back","back_","cls","ClassName_","ACTIVE","SLIDE","GO_BACK","slideOut","currentTarget","parents","SLIDE_OUT","removeClass","slideIn","attr","updateNavigationHeader_","click","toggleClass","BACK","nav","setTimeout","slideBack","pop","backIfActive","backDirective","backOnClickDirective","sortable","resetUpDragDrop","optionsObject","callbackFn","callbackCtx","sortableElement","off","sortableOptions","axis","classes","ui-sortable-helper","ui","oldIndex","newIndex","ret","defaultHandleClassName","handleClassName","elem","ngeoPopoverCtrl","anchorElm","popover","bodyElm","shown","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","gmfSearchFulltextSearch","ngeoMiscAutoProjection","ngeoMiscColorpickerComponent","ngeoSearchModule","ngeoMapFeatureOverlayMgr","ngeoMessagePopoverComponent","gmfSearchTemplateUrl_","gmfSearchTemplateUrl","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","$compile","ngeoAutoProjection","element_","compile_","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","highlight","datasets","displayColorPicker","listeners","$onInit","coordProj","initStyles_","getSearchStyle_","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","obj","datasource","groupValues","groupActions","filterLayername_","action","filterAction_","createDataset_","datasetTitle","groupsKey","labelKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","header","componentScope","compile","bloodhoundEngine","createAndInitBloodhound_","typeaheadDataset","ttAdapter","$new","act","opt_layerName","featureLayerName","mapProjectionCode","getCode","getBloodhoudRemoteOptions_","bloodhound","initialize","rateLimitWait","currentLanguage","xhrFields","suggestions","tt_source","olStyleRegularShape","points","radius2","angle","customStyles","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","layer_name","leaveSearch_","selectFromGMF_","actions","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","fitOptions","directive_","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeoLayertreeTemplateUrl","__webpack_exports__","originalEl","closeEl_","contentEl_","olOverlay","getElement","currentMap","getMap","contentEl","template","one","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfPermalinkPermalink","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","ngeoLayertreeComponent","subTemplateUrl","gmfLayertreeTemplate","openLinksInNewWindow","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfPermalink","gmfSyncLayertreeMap","gmfPermalink_","gmfSyncLayertreeMap_","groupNodeStates_","dataLayerGroup_","ngeoMiscSyncArrays","render","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","layersNames","scale","getScale_","getNumberOfLegendsObject","mpu","getMetersPerUnit","dpi","displayMetadata","metadataURL","gmfx","openIframePopup","afterReorder","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","ds","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","legend","parentNode","menuOptions","opt_overlayOptions","positioning","olOverlayPositioning","TOP_LEFT","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","coordinate","setPosition","documentElement","handleClickOut_","closest","originalEvent","Element","contains","pixel","ngModel","transclude","resizable","closable","$element_","$scope_","modal_","$postLink","dialog","draggable","handle","$render","modal","$viewValue","$setViewValue","$onDestroy","gmfAuthenticationService","ngeoMessageModalComponent","gmfAuthenticationTemplateUrl_","gmfAuthenticationTemplateUrl","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","infoMessage","AuthenticationController_","component_classCallCheck","gmfAuthenticationService_","notification_","changingPassword","userMustChangeItsPassword","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","messageType","gmfAuthenticationComponent","olObservable","mapUids_","mapUid","BACKGROUNDLAYERGROUP_NAME","previous","bgGroup","setAt","removeAt","current","setOpacityBgLayer","baseBgLayer","hasUpdates","updatedDimensions","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","handleDestroy_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","gmfLayersUrl","EnumerateAttribute_classCallCheck","http_","promises_","getAttributeValues","promiseId","handleGetAttributeValues_","items","setGeometryType","geomRegex","geomType","olFormatXML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","alias","nillable","required","ngeoFormatAttribute","setAttributeByXsdType_","enumerations","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","numType","NumberType","FLOAT","INTEGER","getGeometryAttribute","geomAttribute","WFSAttribute_classCallCheck","complexTypeElements","readFromComplexTypeElement_","ngeoFormatXSDAttribute","Scalify","numberFilter","filterFn","$locale","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","olMath","dms","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","duration","output","remainder","removeCDATA","download","fileName","opt_fileType","fileType","blob","Blob","saveAs","CIRCLE","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","RECTANGLE","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","getFormattedArea","area","olSphere","getFormattedCircleArea","circle","PI","getFormattedLength","getCoordinates","c1","c2","getFormattedPoint","dragging","helpMsg","olDom","appendChild","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","cancelEventKey_","handleEscapeKeyDown_","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","escPressed","keyCode","getDefaultDrawStyleFunction","createEditingStyle","getDefaultModifyStyleFunction","olInteractionPointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","ngeoInteractionCommon","downPx","clickPx","squaredDistance","pass","handlePointerMove_","startDrawing_","finishDrawing_","mapBrowserEvent","pointerHandleEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","line","olGeomCircle","olGeomGeometryCollection","setGeometry","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","olFunctions","unitPrefixFormat","numberFormat","ngeoInteractionMeasure","ngeoInteractionDrawAzimut","getGeometries","getFormattedAzimutRadius","olProjProjection","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","azimut","getAzimut","rad","acos","sqrt","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","point_to_px","offsetY","optNumber","attrib","getNumber","getOpacityProperty","getRadiusLine","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","mimeType","export_","opt_mimeType","clones","writeOptions","rotation","ngeoInteractionMeasureAzimut","panMapToFeature","opt_panDuration","panDuration","calculateExtent","intersectsExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","Rule_classCallCheck","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","type_","listenerKeys","getExpression","setExpression","reset","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_ngeoRuleRule","Date_classCallCheck","ngeoRuleRule","Geometry_inherits","Geometry_classCallCheck","Geometry_possibleConstructorReturn","featureProperties","feature_","format_","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","handleGeometryChange_","olGeomGeometry","Geometry_createClass","Select_inherits","Select_classCallCheck","Select_possibleConstructorReturn","choices_","Select_createClass","selectedChoices","stringExpression","Text_inherits","Text_classCallCheck","Text_possibleConstructorReturn","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleGeometry","ngeoRuleSelect","ngeoRuleText","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializedRule","serializeRule","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","olFormatFilter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","writeFilter","xmlSerializer","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","selectedChoice","numericExpression","field","momentEnd","subtract","startValue","ngeoMiscFeatureHelper","olXml","PARSERS_","readElement_","objectStack","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","ngeoRuleHelper","Querent_classCallCheck","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","queryableDataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","layerCapabilities","layerCapability","baseUrl","opt_cache","olFormatWMSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","wfsCount","tolerancePx","tolerance","getFeatureCommonOptions","bboxAsGETParam","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","registerCanceler_","meta","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","FEATURE_COUNT","projCode","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","combined","combinableDataSource","ogcDS","CombinedDataSources","ngeoFilterRuleHelper","Helper_classCallCheck","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","ngeoFormatWFSAttribute","Helper_createClass","ngeoQueryQuerent","gmfEnumerateAttribute","ngeoDataSourcesHelper","datasource_Helper_classCallCheck","gmfEnumerateAttribute_","ngeoDataSourcesHelper_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","choice","datasource_Helper_createClass","ngeoDatasourceHelper","gmfEditingEnumerateAttribute","OGC_inherits","_ngeoDatasourceOGC","OGC_classCallCheck","OGC_possibleConstructorReturn","gmfLayer_","OGC_createClass","WFSAliases_classCallCheck","describe","gmfWFSAliases","Manager_classCallCheck","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","treeCtrlsUnregister_","handleNgeoBackgroundLayerChange_","setDatasourceMap","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","handleTreeManagerRootChildrenChange_","newTreeCtrls","newTreeCtrl","cacheItem","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","queryLayers","wmsLayers","childLayers","childLayer","ogcServerName","isSingleTile","wfsSupport","urlWfs","edge","vertex","dimensionsFilters","identifierAttributeField","timeAttribute","gmfDatasourceOGC","stateWatcherUnregister","handleTreeCtrlStateChange_","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","treeDataSource","_source$updateParams","layersParam","layersList","filterParam","hasFilter","wmsLayerName","dsLayer","currentTimeParam","previousBackgroundLayer","currentBackgroundLayer","gmfDatasourceWFSAliases","gmfDatasourceHelper","gmfDatasourceManager","ngeoPopupTemplateUrl","preventDefault","autoDestroy_","sce_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","ngeoMessagePopupComponent","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","showInPopup","popup","button","ngeoMessagePopup","ngeoMessageDisclaimer","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","save","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","ngeoQueryResult","MapQuerent_classCallCheck","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","bboxAsGETParam_","dataSourceNames_","pending","handleResult_","total","sources","queried","tooManyResults","idStr","querentResultItem","typeSeparatedFeatures","filteredProperties","unset","featuresByType","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","interaction_","registerInteraction","handleActiveChange","getUid","listen","handleDrawEnd","sketch","prop","ngeoMiscBtnComponent","drawFeatureCtrl","olInteractionDraw","geometryFunction","maxPoints","br","verticesCount","ngeoDrawController","contMsg","ngeoInteractionMeasureArea","fromCircle","modifierPressed","SafariModifierPressed","metaKey","ctrlModifierPressed","linestringGeometryFunction","opt_geometry","viewRotation","getRotation","from","to","distance","atan2","delta","layerSource","featuresInExtent","getFeaturesInExtent","lastIntersection","bestIntersection","bestDistance","distanceFromTo","ax","ay","mx","my","unitVector","forEachSegment","point1","point2","computeLineSegmentIntersection","containsXY","lastDistance","line1vertex1","line1vertex2","line2vertex1","line2vertex2","numerator1A","numerator1B","denominator1","ua1","ub1","ngeoInteractionMeasureLength","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","handleDragEvent","handleDragEvent_","vertexFeature_","lastPixel_","modified_","rBush_","olStructsRBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","addFeature_","writeCircleGeometry_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","olCoordinate","setGeometryCoordinates_","olMapBrowserPointerEvent","handled","getInteracting","handlingDownUpSequence","pixelCoordinate","getCoordinateFromPixel","sortByDistance","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","min","vertexSegments","handleDown_","handleDrag_","handleUp_","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","forEachFeatureAtPixel","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyParams","otherFeatures_","olInteractionModify","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","setState_","interactions","handleFeaturesAdd_","handleFeaturesRemove_","getFeatureCollection_","isRectangle","keyPressListenerKey_","coordinate_","centerCoordinate_","centerFeatures_","handleKeyUp_","getCenterCoordinate_","centerFeature","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","a1","rotate","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","getTargetElement","cursor","getGeometryCenterPoint_","toolContext","activePropertyName","registerTool","tool","opt_defaultActivate","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoDrawComponent","ngeoMiscDatepickerComponent","ngeoMiscToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","ngeoToolActivateMgr","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","ngeoToolActivateMgr_","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ngeoMiscToolActivate","drawnFeatures","menu_","selectedFeatures","modify_","ngeoInteractionModify","rotate_","ngeoInteractionRotate","translate_","ngeoInteractionTranslate","initializeInteractions_","modifyToolActivate","rotateToolActivate","translateToolActivate","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggleChoiceSelection","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","toolMgr","ruleFeature","cloneFeature","mapDiv","getViewport","handleMapContextMenu_","handleTranslateEnd_","handleRotateEnd_","registerInteractions_","unregisterInteractions_","drawnFeature","getRuleGeometryType","removeMenu_","getEventPixel","ngeoMenu","handleMenuActionClick_","ngeoFilterRuleComponent","ngeoQueryMapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","FilterController_","ngeoMapQuerent","filter_component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","ngeoFilterComponent","gmfFiltersSavedFilters","gmfFilterselectorTemplateUrl","gmfDataSourcesHelper","gmfSavedFilters","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","confirm","saveFilterLoadItem","filterItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","gmfFiltersFilterselectorComponent","pre","preLink","sliderOptions","onSliderReleased_","computeDates_","sliderUi","wmstime","getClosestValue_","dates","timeValueList","getTimeValueList_","max","maxNbValues","endDate","setFullYear","getFullYear","setMonth","getMonth","getDate","setSeconds","getSeconds","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","getLocalizedDate","gmfLayertreeComponent","gmfLayertreeTimeSliderComponent","gmfPermalinkShareService","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","shareComponent_classCallCheck","gmfShareService_","shortLink","permalink_","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","gmfPermalinkShareComponent","mapViewChangePromise_","ngeoSnappingSource_","CustomSnap","Snapping_classCallCheck","Snapping_possibleConstructorReturn","_olInteractionSnap","SafariModifierNotPressed","CtrlModifierNotPressed","olInteractionSnap","ensureSnapInteractionsOnTop","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","requestDeferred","deactivateItem_","firstTreeCtrl","firstNode","activateItem_","loadItemFeatures_","refreshSnappingSource_","loadAllItems_","Cache","WFSConfig","olMap","setTarget","manageResizeAttr","manageResizeProp","manageResize","resizeTransitionAttr","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","ngeoMapComponent","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","gmfPermalinkModule","gmfEditingSnapping","ngeoMapModule","gmfSnapping","ngeoFeatureOverlayMgr_","gmfSnapping_","gmfMapMousepositionTemplateUrl","control_","initOlControl_","removeControl","formatFn","filterAndArgs","olControlMousePosition","className","coordinateFormat","undefinedHTML","addControl","gmfMapComponent","gmfMapMousepositionComponent","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","columnDefs","translatedColumnHeaders","columnHeader","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","startDownload","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","isSelected","selectAll","unselectAll","rowId","invertSelection","ngeoGridConfig","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","targetUid","posClickedRow","posSelectedRows","currentRow","currentUid","posClosestRow","currentPos","currentDistance","rangeStart","rangeEnd","preventTextSelection","altKey","olHas","ctrlKey","ngeoDownloadCsv","ngeoGridComponent","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSource","getMergedSource_","mergedSourceId","mergeSourceId","currentMergeSourceId","sourceLabels","containsSource","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","gridCreated","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","columns","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","downloadCsv","MOVE_BUFFER_RADIUS","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","events","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","validSwipe","deltaY","deltaX","isDefined","triggerHandler","$event","ngeoMiscSwipe","$animateProvider","classNameFilter","gmfDisplayquerywindowTemplateUrl","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","windowContainer","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","positionMax","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","gmfQueryGridComponent","gmfQueryWindowComponent","gmfSearchComponent","gmfThemeSelectorTemplateUrl","setThemes_","setTheme","gmfThemeSelectorComponent","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","updateContentTemplate_","compiled","displayWindow","clear_","displaywindowComponent_createClass","trustAsResourceUrl","control","olControlControl","changeEvent","files","availableLanguages","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","arr","supportedLanguages","ngeoMiscControlComponent","ngeoMiscFilereaderComponent","ngeoMiscGetBrowserLanguage","ngeoMiscSortableComponent","clickEventKey_","pointerMoveEventKey_","handleMapClick_","sourceids","hit","forEachLayerAtPixel","activate_","cursorHover","deactivate_","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","clearResult_","typeName","createFilters_","issueRequest_","padding","getExtent_","resultSource","reduce","createFiltersForGroup","filterDef","or_","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","gmfAuthentication","updateHasEditableLayers_","loginRedirectUrl","loginInfoMessage","loginActive","userChange","roleId","filterSelectorEnabled","open_panel","filterSelectorActive","previousThemeName","setDefaultBackground_","searchDatasources","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","getBrowserLanguage","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapTools","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","updateCurrentBackgroundLayer_","skipPermalink","background","defaultBasemapArray","default_basemap","defaultBasemapLabel","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","getLocationIcon","arrow","arrowWrapper","gmfAuthenticationModule","gmfBackgroundlayerselectorComponent","gmfDatasourceModule","gmfDisclaimerComponent","gmfFiltersModule","gmfLayertreeModule","gmfMapModule","gmfQueryExtraModule","gmfSearchModule","gmfThemeModule","ngeoMessageDisplaywindowComponent","ngeoMiscExtraModule","ngeoQueryMapQueryComponent","ngeoStatemanagerWfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","minPoints_","minPoints","sketchPoints_","handleViewCenterChange_","getDirty","getDrawing","getValid","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","olGeomSimpleGeometry","dirty","clearDrawing","finishDrawing","getCenter_","overlaySource","ngeoInteractionMobileDraw","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","drawInteraction","ngeoInteractionMeasureLengthMobile","addPoint","finish","deactivate","gmfRasterUrl","getRaster","Param","X","Y","handleGetRaster_","coordFormat","coordFormat_","dec","gmfRasterRasterService","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","gmfRaster_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","ngeoInteractionMeasurePointMobile","translate","getMeasure_","ctn","childEl","previousCtn","getElementsByClassName","LayerConfig","gmfMobileMeasureLengthComponent","gmfMobileMeasurePointComponent","gmfMobileNavigationComponent","GeolocationEventType","getMobileMapFn","getMobileGeolocationOptionsFn","toggleTracking","geolocation_","olGeolocation","trackingOptions","enableHighAccuracy","autorotate","autorotateListener","untrack_","positionFeature_","positionFeatureStyle","accuracyFeature_","accuracyFeatureStyle","zoom_","follow_","viewChangedByMe_","getAccuracyGeometry","setPosition_","getTracking","currentPosition","getPosition","diff","track_","setTracking","currentAlpha","handleRotate_","alpha","webkitCompassHeading","eventAlpha","radAlpha","easing","olEasing","searchOverlayVisible","searchListeners","mobileGeolocationOptions","geolocationZoom","viewConfig","mapViewConfig","gmfControllersAbstractAppController","pixelRatio","mapPixelRatio","controls","mapControls","olControlScaleLine","olControlZoom","zoomInTipLabel","zoomOutTipLabel","olControlRotate","tipLabel","mapInteractions","olInteraction","pinchRotate","navIsVisible","redirectUrl","toggleLeftNavVisibility","toggleRightNavVisibility","hideNav","hideSearchOverlay","leftNavIsVisible","rightNavIsVisible","openNavMenu","navElements","gmfMobileMeasureModule","gmfMobileNavigationModule","ngeoGeolocationMobile","$compileProvider","debugInfoEnabled","epsg2056def","epsg2056extent","gmfControllersAbstractMobileController","resolutions","elevationLayersConfig","searchDelay","searchCoordinatesProjections","ngeoProjEPSG2056","customMeasureStyle","raven","Raven","addPlugin","RavenPluginsAngular","install","appBase"],"mappings":"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","file":"mobile_alt.d97579.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([294,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  BG_LAYER_OPACITY: 'baselayer_opacity',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n\n      // Manage WMS styles\n      const opt_params = {STYLES: gmfLayerWMS.styles};\n      if (gmfLayer.dimensions) {\n        for (const [key, value] of Object.entries(gmfLayer.dimensions)) {\n          opt_params[key] = value;\n        }\n      }\n\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        opt_params,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport {getTopLeft, getTopRight, getBottomLeft, getBottomRight} from 'ol/extent.js';\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexport function extentToRectangle(extent) {\n  return [\n    getTopLeft(extent),\n    getTopRight(extent),\n    getBottomRight(extent),\n    getBottomLeft(extent),\n    getTopLeft(extent),\n  ];\n}\n\n/**\n * Active states.\n */\nexport const active = {\n  mousedown: false\n};\n\ndocument.addEventListener('mousedown', (evt) => {\n  active.mousedown = true;\n});\n\ndocument.addEventListener('mouseup', (evt) => {\n  active.mousedown = false;\n});\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n  let secondResolution = undefined;\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n    secondResolution = gettextCatalog.getString('M/d/yyyy HH:MM:ss');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    case 'second':\n      if (secondResolution) {\n        return this.$filter_('date')(date, secondResolution, utc);\n      } else {\n        return date.toISOString().replace(/\\.\\d{3}/, '');\n      }\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customSourceOptions Some initial options.\n * @param {Object=} opt_customLayerOptions The layer opacity.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin,\n  opt_customSourceOptions, opt_customLayerOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customSourceOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  const layerOptions = Object.assign({}, opt_customLayerOptions, {source});\n  return new olLayerImage(layerOptions);\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n\n/**\n * @param {string} themeName wanted theme name.\n * @param {string} fallbackThemeName fallback theme name.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @export\n */\nexports.prototype.updateCurrentTheme = function(themeName, fallbackThemeName, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    if (!themeName && this.modeFlush) {\n      // In flush mode load current theme private groups\n      const fallbackTheme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (fallbackThemeName));\n      if (fallbackTheme) {\n        this.gmfTreeManager_.addFirstLevelGroups(fallbackTheme.children, false, opt_silent);\n      }\n    }\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.addTheme(theme, true);\n      }\n    } else {\n      this.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    const styles = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n        const style = (treeCtrl.node.style !== undefined) ? treeCtrl.node.style : '';\n        styles.push(style);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(','),\n      'STYLES': styles.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n\n    const opt_params = {STYLES: gmfLayerWMS.style};\n\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      opt_params, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n    }));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GPX. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    url = service['OnlineResource'] || url;\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML({extractStyles: false}).readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {gmfx.User} gmfUser User.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation, gmfUser) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = gmfPermalinkOptions.pointRecenterZoom;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  /**\n   * @type {gmfx.User}\n   * @private\n   */\n  this.user_ = gmfUser;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleIcon({\n        src: require('gmf/permalink/crosshair.svg')\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this\n    );\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  const geom = typeof oeFeature !== 'undefined' && oeFeature !== null ? oeFeature.getGeometry() : undefined;\n  if (geom) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    let maxZoom;\n    if (geom instanceof olGeomPoint || geom instanceof olGeomMultiPoint) {\n      maxZoom = this.pointRecenterZoom_;\n    }\n    view.fit(geom.getExtent(), {\n      size,\n      maxZoom\n    });\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get the background layer opacity to use to initialize the map from the state manager.\n * @return {number} Opacity.\n */\nexports.prototype.getBackgroundLayerOpacity = function() {\n  const opacity_ = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.BG_LAYER_OPACITY);\n  return opacity_ === undefined ? undefined : opacity_ / 100;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n\n  const backgroundLayer = this.ngeoBackgroundLayerMgr_.getOpacityBgLayer(this.map_);\n  if (backgroundLayer) {\n    const opacity = this.getBackgroundLayerOpacity();\n    if (opacity !== undefined) {\n      backgroundLayer.setOpacity(opacity);\n    } else {\n      const opacity = backgroundLayer.getOpacity();\n      /** @type {Object<string, string>} */\n      const object = {};\n      object[gmfBase.PermalinkParam.BG_LAYER_OPACITY] = `${opacity * 100}`;\n      this.ngeoStateManager_.updateState(object);\n    }\n    olEvents.listen(\n      backgroundLayer,\n      'change:opacity',\n      () => {\n        const opacity = backgroundLayer.getOpacity();\n        /** @type {Object<string, string>} */\n        const object = {};\n        object[gmfBase.PermalinkParam.BG_LAYER_OPACITY] = `${opacity * 100}`;\n        this.ngeoStateManager_.updateState(object);\n      }\n    );\n  }\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  const initialUri = window.location.href;\n  let authenticationRequired = false;\n\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        } else {\n          authenticationRequired = true;\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        if (authenticationRequired && this.user_.role_id === null) {\n          this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n        }\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers == '' ? [] : groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                if (enable) {\n                  groupLayersArray.splice(groupLayersArray.indexOf(treeCtrl.node.name), 1);\n                }\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n            if (groupLayersArray.length > 0) {\n              authenticationRequired = true;\n            }\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n\n      if (authenticationRequired && this.user_.role_id === null) {\n        this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n      }\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.component\n */\nimport googAsserts from 'goog/asserts.js';\nconst exports = angular.module('gmfMobileNav', []);\n\n\n/**\n * An \"gmf-mobile-nav\" directive defining the behavior of a tree-structured menu.\n *\n * The directive is to be placed on a `nav` element, with the following\n * structure:\n * <nav gmf-mobile-nav>\n *   <header>\n *     <a class=\"gmf-mobile-nav-go-back\" href=\"#\"></a>\n *   </header>\n *   <div class=\"gmf-mobile-nav-active gmf-mobile-nav-slide\">\n *     <ul>\n *       <li>\n *         <a href data-target=\"#devices\">Devices</a>\n *       </li>\n *       <li>\n *         <a href data-target=\"#vehicles\">Vehicles</a>\n *       </li>\n *     </ul>\n *   </div>\n *   <div id=\"devices\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Devices\">\n *     <ul>\n *       <li>Mobile Phones</li>\n *       <li>Televisions</li>\n *     </ul>\n *   </div>\n *   <div id=\"vehicles\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Vehicles\">\n *     <ul>\n *       <li>Cars</li>\n *       <li>Planes</li>\n *       <li>Bicycles</li>\n *     </ul>\n *   </div>\n * </nav>\n *\n * When an element slides in the directive changes the text in the header.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'gmfMobileNavController as navCtrl',\n    bindToController: true,\n    scope: true,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      navCtrl.init(element);\n    }\n  };\n};\n\nexports.directive('gmfMobileNav', exports.component_);\n\n\n/**\n* @constructor\n* @private\n* @ngInject\n* @ngdoc controller\n* @ngname gmfMobileNavController\n*/\nexports.Controller_ = function() {\n  /**\n   * Stack of slid-in items.\n   * @private\n   * @type {Array.<!jQuery>}\n   */\n  this.slid_ = [];\n\n  /**\n   * Currently active sliding box.\n   * @private\n   * @type {jQuery}\n   */\n  this.active_ = null;\n\n  /**\n   * The navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.header_ = null;\n\n  /**\n   * The back button in the navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.backButton_ = null;\n\n  /**\n   * Export the back function already bound to `this`. This makes sure that\n   * the function is called on the right context, when it is passed to an\n   * attribute in a template\n   * @export\n   */\n  this.back = this.back_.bind(this);\n};\n\nexports.controller('gmfMobileNavController', exports.Controller_);\n\n\n/**\n * Initialize the directive with the linked element.\n * @param {angular.JQLite} element Element.\n */\nexports.Controller_.prototype.init = function(element) {\n  const cls = exports.Controller_.ClassName_;\n  this.active_ = $(element.find(`.${cls.ACTIVE}.${cls.SLIDE}`));\n  this.header_ = $(element.find('> header'));\n  this.backButton_ = $(element.find(`header > .${cls.GO_BACK}`));\n\n  // watch for clicks on \"slide-in\" elements\n  element.find('[data-toggle=slide-in]').on('click', (evt) => {\n\n    const cls = exports.Controller_.ClassName_;\n\n    // the element to slide out is the div.slide parent\n    const slideOut = $(evt.currentTarget).parents(`.${cls.SLIDE}`);\n    googAsserts.assert(slideOut.length === 1);\n\n    // push the item to the selected stack\n    this.slid_.push(slideOut);\n\n    // slide the \"old\" element out\n    slideOut.addClass(cls.SLIDE_OUT).removeClass(cls.ACTIVE);\n\n    // element to slide in\n    const slideIn = $($(evt.currentTarget).attr('data-target'));\n    googAsserts.assert(slideIn.length === 1);\n\n    // slide the \"new\" element in\n    slideIn.addClass(cls.ACTIVE);\n\n    // update the navigation header\n    this.updateNavigationHeader_(slideIn, false);\n\n    this.active_ = slideIn;\n  });\n\n  // watch for clicks on the header \"go-back\" link\n  this.backButton_.click(this.back.bind(this));\n};\n\n\n/**\n * @param {!jQuery} active The currently active sliding box.\n * @param {boolean} back Whether to move back.\n * @private\n */\nexports.Controller_.prototype.updateNavigationHeader_ = function(\n  active, back) {\n  const cls = exports.Controller_.ClassName_;\n  this.header_.toggleClass(cls.BACK, back);\n\n  // remove any inactive nav\n  this.header_.find(`nav:not(.${cls.ACTIVE} +)`).remove();\n\n  // deactivate the currently active nav\n  this.header_.find(`nav.${cls.ACTIVE}`).removeClass(cls.ACTIVE)\n    .addClass(cls.SLIDE_OUT);\n\n  // show the back button when relevant\n  this.backButton_.toggleClass(cls.ACTIVE, this.slid_.length > 0);\n\n  // create a new nav\n  const nav = $('<nav>');\n  nav.append($('<span>', {\n    text: active.attr('data-header-title')\n  }));\n  this.header_.append(nav);\n\n  // Delay the activation of the new navigation so that the previous\n  // one is properly deactivated. This prevents weird animation\n  // effects.\n  window.setTimeout(() => {\n    // fix for safari: the following 3 lines force that the position\n    // of the newly inserted element is calculated.\n    // see http://stackoverflow.com/a/3485654/119937\n    nav.css('display', 'none');\n    nav.offset();\n    nav.css('display', '');\n\n    window.setTimeout(() => {\n      // fix: calling `position()` makes sure that the animation\n      // is always run\n      nav.position();\n      nav.addClass(exports.Controller_.ClassName_.ACTIVE);\n    }, 0);\n  }, 0);\n};\n\n\n/**\n * Return to the previous slide.\n * @private\n */\nexports.Controller_.prototype.back_ = function() {\n  if (this.slid_.length <= 0) {\n    return;\n  }\n\n  const cls = exports.Controller_.ClassName_;\n\n  // slide active item to the right\n  this.active_.removeClass(cls.ACTIVE);\n\n  // get the previously active item\n  const slideBack = this.slid_.pop();\n\n  // slide previous item to the right\n  slideBack.addClass(cls.ACTIVE).removeClass(cls.SLIDE_OUT);\n\n  // update the navigation header\n  this.updateNavigationHeader_(slideBack, true);\n\n  this.active_ = slideBack;\n};\n\n\n/**\n * Return to the previous slide if the given element is active.\n *\n * @param {Element} element The element to check.\n */\nexports.Controller_.prototype.backIfActive = function(element) {\n  if (this.active_ !== null && this.active_.is(element)) {\n    this.back_();\n  }\n};\n\n\n/**\n * CSS class names toggled by the controller.\n * @enum {string}\n * @private\n */\n\nexports.Controller_.ClassName_ = {\n  ACTIVE: 'gmf-mobile-nav-active',\n  BACK: 'gmf-mobile-nav-back',\n  GO_BACK: 'gmf-mobile-nav-go-back',\n  SLIDE: 'gmf-mobile-nav-slide',\n  SLIDE_OUT: 'gmf-mobile-nav-slide-out'\n};\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}\n * with an expression. When the value of the expression changes and becomes\n * true, the navigation returns to the previous slide, if the slide is\n * currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-authentication class=\"gmf-mobile-nav-slide\"\n *         gmf-mobile-nav-back=\"authCtrl.gmfUser.username !== null\">\n *      </gmf-authentication>\n *\n * If `mainCtrl.gmfUser.username` becomes true and the login-slide is currently\n * active, the navigation will go back to the last slide.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      scope.$watch(attrs['gmfMobileNavBack'], (newVal, oldVal) => {\n        if (newVal === true) {\n          navCtrl.backIfActive(element[0]);\n        }\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBack', exports.backDirective);\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}.\n * When the element is clicked, the navigation returns to the previous slide if\n * the slide is currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-themeselector\n *         gmf-mobile-nav-back-on-click\n *         gmf-themeselector-currenttheme=\"mainCtrl.theme\">\n *      </gmf-themeselector>\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backOnClickDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      element.on('click', () => {\n        navCtrl.backIfActive(element[0]);\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBackOnClick', exports.backOnClickDirective);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport 'jquery-ui-touch-punch';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery';\nimport 'jquery-ui';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $postLink() {\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable({\n      'handle': '.modal-header'\n    });\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-info-message=\"mainCtrl.loginInfoMessage\"\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n * @htmlAttribute {string} gmf-authentication-info-message Message to show above the authentication form.\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange',\n    'infoMessage': '=?gmfAuthenticationInfoMessage'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.infoMessage = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.userMustChangeItsPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n    this.userMustChangeItsPassword = (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd)\n          .then(() => {\n            this.changePasswordReset();\n            this.setError_(\n              [gettextCatalog.getString('Your password has successfully been changed.')],\n              ngeoMessageMessage.Type.INFORMATION\n            );\n          })\n          .catch((err) => {\n            this.setError_(gettextCatalog.getString('Incorrect old password.'));\n          });\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @param {ngeoMessageMessage.Type} [messageType] Type.\n   * @private\n   */\n  setError_(errors, messageType) {\n    if (messageType == undefined) {\n      messageType = ngeoMessageMessage.Type.ERROR;\n    }\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: messageType\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n  const previous = bgGroup.getLayers().remove(this.getOpacityBgLayer(map));\n  const ZIndex = -100;\n  layer.setOpacity(previous ? previous.getOpacity() : 0);\n  layer.setVisible(previous ? previous.getVisible() : true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val !== undefined) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <!-- With en-US localization -->\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *      <br/>\n *      <!-- With en-US localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\n/**\n * A filter used to remove the CDATA prefix and postfix.\n *\n * @return {function(string): string} Retult string\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nconst removeCDATA = function() {\n  return function(input) {\n    if (input) {\n      return input.replace(/<!\\[CDATA\\[(.*)\\]\\]>/, '$1');\n    }\n  };\n};\n\nexports.filter('removeCDATA', removeCDATA);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport {active} from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.cancelEventKey_ = olEvents.listen(document.body, 'keydown', (event) => {\n    this.handleEscapeKeyDown_(event);\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    olEvents.unlistenByKey(this.cancelEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n    this.cancelEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\n/**\n * Called when escape key is pressed to reset drawing.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @private\n * @export\n */\nexports.prototype.handleEscapeKeyDown_ = function(event) {\n  const escPressed = event.keyCode === 27; // Escape key\n  if (!active.mousedown && this.drawInteraction_.getActive() && escPressed) {\n    this.drawInteraction_.setActive(false);\n    this.drawInteraction_.setActive(true);\n  }\n};\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(null, [mainFilter, dimensionsFilter]);\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        endValue = beginValue;\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(expression)\n          .add(30, 'years')\n          .format('YYYY-MM-DD');\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(expression)\n          .format('YYYY-MM-DD');\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).utc().format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.utc().format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      if (options.bboxAsGETParam && bbox) {\n        params['bbox'] = bbox.join(',');\n      }\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensionsFilters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    if (dataSource.gmfLayer == undefined) {\n      return;\n    }\n    const id = olBase.getUid(dataSource.gmfLayer);\n    if (id == undefined) {\n      return;\n    }\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(source instanceof olSourceImageWMS ||\n          source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (const wmsLayerName of layersList) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layer.get('querySourceIds').indexOf(dataSource.id) >= 0 &&\n            dataSource.gmfLayer.layers.split(',').indexOf(wmsLayerName) >= 0)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer === undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bboxAsGETParam_ = options.bboxAsGETParam || false;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_,\n      bboxAsGETParam: this.bboxAsGETParam_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport {active} from 'ngeo/utils.js';\nimport olFeature from 'ol/Feature.js';\nimport {getUid} from 'ol/index.js';\nimport {listen} from 'ol/events.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoEventHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n};\n\n\n/**\n * Called when escape key is pressed to reset drawing.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleEscapeKeyDown_ = function(event) {\n  const escPressed = event.keyCode === 27; // Escape key\n  if (!active.mousedown && escPressed && this.interaction_.getActive()) {\n    const interaction = this.interaction_;\n    interaction.setActive(false);\n    interaction.setActive(true);\n  }\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n  this.interaction_ = this.interactions_.find(interaction => interaction.getActive() === true);\n  const uid = getUid(this);\n\n  if (this.interaction_) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      listen(\n        document.body,\n        'keydown',\n        this.handleEscapeKeyDown_,\n        this\n      )\n    );\n  } else {\n    this.ngeoEventHelper_.clearListenerKey(uid);\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport {distance} from 'ol/coordinate.js';\nimport {containsXY} from 'ol/extent';\n\nlet modifierPressed = undefined;\n\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n  if (modifierPressed === undefined) {\n    modifierPressed = false;\n    document.body.addEventListener('keydown', (evt) => {\n      const SafariModifierPressed = !!evt.metaKey; // Cmd Key (MacOS)\n      const ctrlModifierPressed = evt.keyCode === 17; // Ctrl key\n      modifierPressed = SafariModifierPressed || ctrlModifierPressed;\n    });\n    document.body.addEventListener('keyup', () => {\n      modifierPressed = false;\n    });\n  }\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n  /**\n   * The snapping tolerance in pixels.\n   * @params {number}\n   */\n  this.tolerance = options.tolerance;\n\n  /**\n   * The snapping source\n   * @params {ol.source.Vector}\n   */\n  this.source = options.source;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    geometryFunction: this.linestringGeometryFunction.bind(this),\n    condition: () => true,\n    style: style,\n    source: source,\n  });\n};\n\n\n/**\n * Create a `linestringGeometryFunction` that will create a line string with segments\n * snapped to π/4 angle.\n * Use this with the draw interaction and `type: 'LineString'`.\n * @param {LineCoordType} coordinates Coordinates.\n * @param {LineString=} opt_geometry Geometry.\n * @return {LineString} Geometry.\n */\nexports.prototype.linestringGeometryFunction = function(coordinates, opt_geometry) {\n  if (modifierPressed) {\n    const viewRotation = this.getMap().getView().getRotation();\n    const angle = Math.PI / 4;\n    const from = coordinates[coordinates.length - 2];\n    const to = coordinates[coordinates.length - 1];\n    const dx = from[0] - to[0];\n    const dy = from[1] - to[1];\n    const length = distance(from, to);\n    const rotation = viewRotation + Math.round((Math.atan2(dy, dx) - viewRotation) / angle) * angle;\n\n    to[0] = from[0] - (length * Math.cos(rotation));\n    to[1] = from[1] - (length * Math.sin(rotation));\n\n    if (this.tolerance !== undefined && this.source !== undefined) {\n      const delta = this.getMap().getView().getResolution() * this.tolerance;\n      const bbox = [to[0] - delta, to[1] - delta, to[0] + delta, to[1] + delta];\n\n      const layerSource = this.source;\n      const featuresInExtent = layerSource.getFeaturesInExtent(bbox);\n      featuresInExtent.forEach((feature) => {\n\n        let lastIntersection = [];\n        let bestIntersection = [];\n        let bestDistance = Infinity;\n\n        // Line points are: from A to M (to B that we need to find)\n        const distanceFromTo = distance(from, to);\n        const ax = from[0];\n        const ay = from[1];\n        const mx = to[0];\n        const my = to[1];\n        const unitVector = [(mx - ax) / distanceFromTo, (my - ay) / distanceFromTo];\n        const b = [(ax + (distanceFromTo + delta) * unitVector[0]), (ay + (distanceFromTo + delta) * unitVector[1])];\n\n        feature.getGeometry().forEachSegment((point1, point2) => {\n          // intersection calculation\n          lastIntersection = this.computeLineSegmentIntersection(from, b, point1, point2);\n          if (lastIntersection !== undefined && containsXY(bbox, lastIntersection[0], lastIntersection[1])) {\n            const lastDistance = distance(to, lastIntersection);\n            if (lastDistance < bestDistance) {\n              bestDistance = lastDistance;\n              bestIntersection = lastIntersection;\n            }\n          }\n        });\n\n        if (bestIntersection) {\n          to[0] = bestIntersection[0] || to[0];\n          to[1] = bestIntersection[1] || to[1];\n        }\n      });\n    }\n  }\n\n  const geometry = opt_geometry;\n  if (geometry) {\n    geometry.setCoordinates(coordinates);\n    return geometry;\n  }\n  return new olGeomLineString(coordinates);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n/**\n * Compute the intersection between 2 segments\n *\n * @param {Number} line1vertex1 The coordinates of the first line's first vertex.\n * @param {Number} line1vertex2 The coordinates of the first line's second vertex.\n * @param {Number} line2vertex1 The coordinates of the second line's first vertex.\n * @param {Number} line2vertex2 The coordinates of the second line's second vertex.\n * @return {Array<number> | undefined} The intersection point, undefined if there is no intersection point or lines are coincident.\n */\nexports.prototype.computeLineSegmentIntersection = function(line1vertex1, line1vertex2, line2vertex1, line2vertex2) {\n  const numerator1A = (line2vertex2[0] - line2vertex1[0]) * (line1vertex1[1] - line2vertex1[1])\n    - (line2vertex2[1] - line2vertex1[1]) * (line1vertex1[0] - line2vertex1[0]);\n  const numerator1B = (line1vertex2[0] - line1vertex1[0]) * (line1vertex1[1] - line2vertex1[1])\n    - (line1vertex2[1] - line1vertex1[1]) * (line1vertex1[0] - line2vertex1[0]);\n  const denominator1 = (line2vertex2[1] - line2vertex1[1]) * (line1vertex2[0] - line1vertex1[0])\n    - (line2vertex2[0] - line2vertex1[0]) * (line1vertex2[1] - line1vertex1[1]);\n\n  // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\n  if (denominator1 === 0) {\n    return;\n  }\n\n  const ua1 = numerator1A / denominator1;\n  const  ub1 = numerator1B / denominator1;\n\n  if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\n    const result = [];\n    result[0] = line1vertex1[0] + ua1 * (line1vertex2[0] - line1vertex1[0]);\n    result[1] = line1vertex1[1] + ua1 * (line1vertex2[1] - line1vertex1[1]);\n    return result;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n        tolerance: $injector.has('ngeoSnappingTolerance') ? $injector.get('ngeoSnappingTolerance') : undefined,\n        source: $injector.has('ngeoSnappingSource') ? $injector.get('ngeoSnappingSource') : undefined,\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport {active} from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (!active.mousedown && evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport {active} from 'ngeo/utils.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (!active.mousedown && evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minDefValue = newVal || this.createDate_();\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minDefValue = newVal || this.createWeekAgoDate_();\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxDefValue = newVal || this.createDate_();\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_.bind(this));\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {!angular.$injector} $injector Angular injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $injector, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angular.$injector}\n   * @private\n   */\n  this.injector_ = $injector;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  /**\n   * @type {ol.source.Vector | undefined}\n   * @private\n   */\n  this.ngeoSnappingSource_ = this.injector_.has('ngeoSnappingSource') ? this.injector_.get('ngeoSnappingSource') : undefined;\n\n};\n\n\nclass CustomSnap extends olInteractionSnap {\n  constructor(options) {\n    super(options);\n    document.body.addEventListener('keydown', (evt) => {\n      const SafariModifierNotPressed = !evt.metaKey; // Cmd key (MacOS)\n      const CtrlModifierNotPressed = evt.keyCode !== 17; // Ctrl key\n      this.setActive(CtrlModifierNotPressed && SafariModifierNotPressed);\n    });\n    document.body.addEventListener('keyup', () => {\n      this.setActive(true);\n    });\n  }\n}\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * interacts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new CustomSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n  this.refreshSnappingSource_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n        this.refreshSnappingSource_();\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n/**\n * @private\n */\nexports.prototype.refreshSnappingSource_ = function() {\n  this.ngeoSnappingSource_.clear();\n  for (const uid in this.cache_) {\n    const item = this.cache_[uid];\n    if (item.active) {\n      this.ngeoSnappingSource_.addFeatures(item.features.getArray());\n    }\n  }\n};\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.open = false;\n        this.clear();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const windowContainer = this.element_.find('.gmf-displayquerywindow .windowcontainer');\n  if (this.desktop) {\n    windowContainer.draggable({\n      handle: '.header',\n      containment: this.draggableContainment\n    });\n    windowContainer.resizable({\n      minHeight: 240,\n      minWidth: 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      this.updateContentTemplate_();\n    }\n\n    this.scope_.$watch(\n      () => this.contentTemplate,\n      () => this.updateContentTemplate_()\n    );\n  }\n\n  /**\n   *  @private\n   */\n  updateContentTemplate_() {\n    const scope = googAsserts.assert(this.contentScope || this.scope_);\n    const compiled = this.compile_(this.contentTemplate)(scope);\n    const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container .content-template-container');\n    displayWindow.empty();\n    displayWindow.append(/** @type {?} */ (compiled));\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '=?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * Url to redirect to after login success.\n   * @type {?string}\n   */\n  this.loginRedirectUrl = null;\n\n  /**\n   * Information message for the login form.\n   * @type {?string}\n   */\n  this.loginInfoMessage = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.userMustChangeItsPassword = false;\n\n  $scope.$on('authenticationrequired', (event, args) => {\n    /** @type {angularGettext.Catalog} */\n    const gettextCatalog = $injector.get('gettextCatalog');\n    this.loginInfoMessage = gettextCatalog.getString(\n      'Some layers in this link are not accessible to unauthenticated users. ' +\n      'Please log in to see whole data.');\n    this.loginRedirectUrl = args.url;\n    this.loginActive = true;\n\n    const unbind = $scope.$watch(() => this.loginActive, () => {\n      if (!this.loginActive) {\n        this.loginInfoMessage = null;\n        this.loginRedirectUrl = null;\n        unbind();\n      }\n    });\n  });\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    if (this.loginRedirectUrl) {\n      window.location = this.loginRedirectUrl;\n      return;\n    }\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    const functionalities = this.gmfUser.functionalities;\n\n    // Enable filter tool in toolbar\n    if (functionalities &&\n        'filterable_layers' in functionalities &&\n        functionalities['filterable_layers'].length > 0) {\n      this.filterSelectorEnabled = true;\n    }\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n\n    // Reload themes and background layer when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n\n    if (evt.type !== 'ready') {\n      const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n      this.gmfThemeManager.updateCurrentTheme(themeName, previousThemeName, true);\n    }\n    this.setDefaultBackground_(null);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorEnabled = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n  $scope.$watch(\n    () => this.gmfUser.is_password_changed,\n    (value) => {\n      this.userMustChangeItsPassword = value === false;\n    }\n  );\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, gettextCatalog, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, gettextCatalog, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/lengthComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/lengthComponent', require('./lengthComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter, gettextCatalog) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), this.gettextCatalog_, {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    'change:dirty',\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:drawing',\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:valid',\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, coordFormat, options = /** @type {ngeox.interaction.MeasureOptions} */ ({})) {\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */(options));\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/pointComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/pointComponent', require('./pointComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ = function() {\n  if (this.measure.getActive()) {\n    const view = this.map.getView();\n    this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n      view,\n      'propertychange',\n      this.ngeoDebounce_(\n        this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n      this);\n    this.getMeasure_();\n  } else if (this.mapViewPropertyChangeEventKey_) {\n    olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n    this.mapViewPropertyChangeEventKey_ = null;\n  }\n};\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.module\n */\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileMeasureModule', [\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.module\n */\nimport gmfMobileNavigationComponent from 'gmf/mobile/navigation/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileNavigationModule', [\n  gmfMobileNavigationComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.geolocation.mobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport * as olEasing from 'ol/easing.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMobileGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'mobile-geolocation-error'\n};\n\n/**\n * Provide a \"mobile geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-mobile-geolocation\n *        ngeo-mobile-geolocation-map=\"ctrl.map\"\n *        ngeo-mobile-geolocation-options=\"ctrl.mobileGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/mobilegeolocation.html](../examples/mobilegeolocation.html)\n *\n * @htmlAttribute {ol.Map} ngeo-mobile-geolocation-map The map.\n * @htmlAttribute {ngeox.MobileGeolocationDirectiveOptions} ngeo-mobile-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMobileGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getMobileMapFn': '&ngeoMobileGeolocationMap',\n      'getMobileGeolocationOptionsFn': '&ngeoMobileGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationMobileController'\n  };\n};\n\n\nexports.directive('ngeoMobileGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoMobileGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  gettextCatalog, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggleTracking.bind(this));\n\n  const map = $scope['getMobileMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getMobileGeolocationOptionsFn']() || {};\n  googAsserts.assertObject(options);\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection(),\n    trackingOptions: /** @type {GeolocationPositionOptions} */ ({\n      enableHighAccuracy: true\n    })\n  });\n\n  if (options.autorotate) {\n    this.autorotateListener();\n  }\n\n  // handle geolocation error.\n  this.geolocation_.on('error', (error) => {\n    this.untrack_();\n    let msg;\n    switch (error.code) {\n      case 1:\n        msg = gettextCatalog.getString('User denied the request for Geolocation.');\n        break;\n      case 2:\n        msg = gettextCatalog.getString('Location information is unavailable.');\n        break;\n      case 3:\n        msg = gettextCatalog.getString('The request to get user location timed out.');\n        break;\n      default:\n        msg = gettextCatalog.getString('Geolocation: An unknown error occurred.');\n        break;\n    }\n    this.notification_.error(msg);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  });\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * Whether to recenter the map at the position it gets updated\n   * @type {boolean}\n   * @private\n   */\n  this.follow_ = false;\n\n  /**\n   * A flag used to determine whether the view was changed by me or something\n   * else. In the latter case, stop following.\n   * @type {boolean}\n   * @private\n   */\n  this.viewChangedByMe_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n    this.setPosition_();\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', () => {\n    this.setPosition_();\n  });\n\n  const view = map.getView();\n\n  olEvents.listen(view, 'change:center', this.handleViewChange_, this);\n\n  olEvents.listen(view, 'change:resolution', this.handleViewChange_, this);\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggleTracking = function() {\n  if (this.geolocation_.getTracking()) {\n    // if map center is different than geolocation position, then track again\n    const currentPosition = this.geolocation_.getPosition();\n    // if user is using Firefox and selects the \"not now\" option, OL geolocation\n    // doesn't return an error\n    if (currentPosition === undefined) {\n      this.untrack_();\n      this.$scope_.$emit(exports.GeolocationEventType.ERROR, null);\n      return;\n    }\n    googAsserts.assert(currentPosition !== undefined);\n    // stop tracking if the position is close to the center of the map.\n    const center = this.map_.getView().getCenter();\n    const diff = Math.abs(currentPosition[0] - center[0]) + Math.abs(currentPosition[1] - center[1]);\n    if (diff < 2) {\n      this.untrack_();\n    } else {\n      this.untrack_();\n      this.track_();\n    }\n  } else {\n    this.track_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.track_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.follow_ = true;\n  this.geolocation_.setTracking(true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.untrack_ = function() {\n  this.featureOverlay_.clear();\n  this.follow_ = false;\n  this.geolocation_.setTracking(false);\n  this.notification_.clear();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function() {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  const accuracy = this.accuracyFeature_.getGeometry();\n\n  if (this.follow_) {\n    this.viewChangedByMe_ = true;\n    if (this.zoom_ !== undefined) {\n      this.map_.getView().setCenter(position);\n      this.map_.getView().setZoom(this.zoom_);\n    } else if (accuracy) {\n      const size = /** @type {!ol.Size} */ (this.map_.getSize());\n      this.map_.getView().fit(/** @type {!ol.geom.Polygon} */ (accuracy), size);\n    }\n    this.viewChangedByMe_ = false;\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleViewChange_ = function(event) {\n  if (this.follow_ && !this.viewChangedByMe_) {\n    this.follow_ = false;\n  }\n};\n\n\n// Orientation control events\nexports.Controller_.prototype.autorotateListener = function() {\n  let currentAlpha = 0;\n  if (window.hasOwnProperty('ondeviceorientationabsolute')) {\n    window.addEventListener('deviceorientationabsolute', (evt) => {\n      currentAlpha = this.handleRotate_(evt.alpha, currentAlpha);\n    }, true);\n  } else if (window.hasOwnProperty('ondeviceorientation')) {\n    window.addEventListener('deviceorientation', (evt) => {\n      if (evt.webkitCompassHeading) { // check for iOS property\n        currentAlpha = this.handleRotate_(-evt.webkitCompassHeading, currentAlpha);\n      } else { // non iOS\n        currentAlpha = this.handleRotate_(evt.alpha - 270, currentAlpha);\n      }\n    }, true);\n  } else {\n    console.error('Orientation is not supported on this device');\n  }\n};\n\n/**\n * Handle rotation.\n * @param {number} eventAlpha .\n * @param {number} currentAlpha .\n * @return {number} .\n * @private\n */\nexports.Controller_.prototype.handleRotate_ = function(eventAlpha, currentAlpha) {\n  if (this.geolocation_.getTracking() && Math.abs(eventAlpha - currentAlpha) > 0.2) {\n    currentAlpha = eventAlpha;\n    const radAlpha = currentAlpha * Math.PI / 180;\n    this.map_.getView().animate({\n      rotation: radAlpha,\n      duration: 350,\n      easing: olEasing.linear\n    });\n  }\n  return currentAlpha;\n};\n\n\nexports.controller('ngeoGeolocationMobileController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractMobileController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfMobileMeasureModule from 'gmf/mobile/measure/module.js';\nimport gmfMobileNavigationModule from 'gmf/mobile/navigation/module.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\nimport ngeoGeolocationMobile from 'ngeo/geolocation/mobile.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Mobile application abstract controller.\n *\n * This file includes `goog.require`'s mobile components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.searchOverlayVisible = false;\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.searchListeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    open: function() {\n      this.searchOverlayVisible = true;\n    }.bind(this),\n    close: function() {\n      this.searchOverlayVisible = false;\n    }.bind(this)\n  });\n\n  const positionFeatureStyle = config.positionFeatureStyle || new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = config.accuracyFeatureStyle || new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.MobileGeolocationDirectiveOptions}\n   * @export\n   */\n  this.mobileGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: config.geolocationZoom,\n    autorotate: config.autorotate\n  };\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine(),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions:\n        config.mapInteractions ||\n        olInteraction.defaults({pinchRotate: true})\n  });\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  this.manageResize = true;\n  this.resizeTransition = 500;\n\n  // Close right nave on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.navIsVisible()) {\n      this.rightNavVisible = false;\n    }\n  });\n\n  /**\n   * @const {string}\n   * @export\n   */\n  this.redirectUrl = $injector.get('redirectUrl');\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\n\n/**\n * @export\n */\nexports.prototype.toggleLeftNavVisibility = function() {\n  this.leftNavVisible = !this.leftNavVisible;\n};\n\n\n/**\n * @export\n */\nexports.prototype.toggleRightNavVisibility = function() {\n  this.rightNavVisible = !this.rightNavVisible;\n};\n\n\n/**\n * Hide both navigation menus.\n * @export\n */\nexports.prototype.hideNav = function() {\n  this.leftNavVisible = this.rightNavVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if one of the navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.navIsVisible = function() {\n  return this.leftNavVisible || this.rightNavVisible;\n};\n\n\n/**\n * Hide search overlay.\n * @export\n */\nexports.prototype.hideSearchOverlay = function() {\n  this.searchOverlayVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if the left navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.leftNavIsVisible = function() {\n  return this.leftNavVisible;\n};\n\n\n/**\n * @return {boolean} Return true if the right navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.rightNavIsVisible = function() {\n  return this.rightNavVisible;\n};\n\n\n/**\n * Open the menu with corresponding to the data-target attribute value.\n * @param {string} target the data-target value.\n * @export\n */\nexports.prototype.openNavMenu = function(target) {\n  const navElements = document.getElementsByClassName('gmf-mobile-nav-button');\n  for (let i = 0; i < navElements.length; i++) {\n    const element = navElements[i];\n    if (element.dataset && element.dataset.target === target) {\n      element.click();\n    }\n  }\n};\n\n\nexports.module = angular.module('GmfAbstractMobileControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfMobileMeasureModule.name,\n  gmfMobileNavigationModule.name,\n  gmfQueryWindowComponent.name,\n  ngeoGeolocationMobile.name,\n]);\n\nexports.module.controller('AbstractMobileController', exports);\n\nexports.module.value('isMobile', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'tolerance': 10\n});\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.mobile_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractMobileController from 'gmf/controllers/AbstractMobileController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractMobileController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractMobileController.call(this, {\n    autorotate: true,\n    mapPixelRatio: 1,\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = [\n    {name: 'aster', unit: 'm'},\n    {name: 'srtm', unit: 'm'}\n  ];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 50;\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n\n  /**\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.customMeasureStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 128, 128, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(255, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(255, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractMobileController);\n\n\nexports.module = angular.module('Appmobile_alt', [\n  appBase.module.name,\n  gmfControllersAbstractMobileController.module.name,\n]);\n\nexports.module.controller('AlternativeMobileController', exports);\n\nexport default exports;\n","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && (!ctrl.valid)\\\" ng-click=ctrl.addPoint()> <span class=\\\"fa fa-check\\\"></span> {{'Set as starting point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.dirty ng-click=ctrl.addPoint()> <span class=\\\"fa fa-plus\\\"></span> {{'Add new point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && ctrl.valid && !ctrl.dirty\\\" ng-click=ctrl.finish()> <span class=\\\"fa fa-check\\\"></span> {{'Terminate' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.valid ng-click=ctrl.clear()> <span class=\\\"fa fa-repeat\\\"></span> {{'Clear' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open title=\\\"\\\"> <div class=windowcontainer ng-style=$ctrl.style> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> <div class=content-template-container></div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open> <button class=collapse-button type=button ng-show=::!ctrl.desktop ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=\\\"header ui-draggable-handle\\\"> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr ng-if=::$ctrl.enableEmail> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <div> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </div> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children> <span ng-switch=\\\"layertreeCtrl.node.children && !layertreeCtrl.layer.loading\\\"> <i ng-switch-when=true class=\\\"fa fa-fw gmf-layertree-state\\\"></i> <i ng-switch-when=false class=\\\"fa fa-fw fa-refresh fa-spin\\\"></i> </span> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"[gmfLayertreeCtrl.getNodeState(layertreeCtrl), layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = __webpack_public_path__ + \"crosshair.3aa99e.svg\";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> </div> <div ng-if=!$ctrl.gmfUser.username> <div class=\\\"alert alert-warning\\\" ng-show=$ctrl.infoMessage> <span>{{ $ctrl.infoMessage }}</span> </div> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}