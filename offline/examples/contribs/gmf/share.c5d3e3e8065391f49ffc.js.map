{"version":3,"sources":["webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/examples/share.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/permalink/ShareService.js"],"names":["__webpack_require__","exports","angular","module","ngeoBase","requires","push","name","component_","template","require","ngModel","transclude","controller","bindings","resizable","component","Controller_","_class","$scope","$element","_classCallCheck","this","$element_","$scope_","modal_","$inject","_createClass","key","value","_this","children","dialog","find","draggable","handle","$render","modal","$viewValue","on","e","type","googAsserts","assert","$apply","$setViewValue","gmfBase","ngeoMessageModalComponent","gmfPermalinkShareComponent","constant","MainController","modalShareWithEmailShown","modalShareShown","gmfPermalinkShareService","enableEmail","templateUrl","baseModuleTemplateUrl","ngeoLocation","gmfShareService","$q","$attrs","gmfShareService_","$q_","ngeoLocation_","permalink","getUriString","shortLink","email","message","showLengthWarning","length","URL_MAX_LEN","getPath","URL_PATH_MAX_LEN","successfullySent","errorOnsend","errorOnGetShortUrl","getShortUrl","prototype","when","then","resp","data","short_url","bind","sendShortUrl","$valid","_index","$http","gmfShortenerCreateUrl","$http_","gmfShortenerCreateUrl_","url","params","postShortUrl_","status","shortUrl","opt_message","post","$","param","headers","Content-Type","service"],"mappings":"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","file":"share.c5d3e3e8065391f49ffc.js","sourcesContent":["/**\n * @module ngeo.message.modalComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $postLink() {\n    this.modal_ = this.$element_.children();\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable({\n      'handle': '.modal-header'\n    });\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.$scope_.$apply(() => {\n        this.ngModel.$setViewValue(type == 'shown');\n      });\n    });\n  }\n\n  $onDestroy() {\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/modalComponent.js","/**\n * @module gmfapp.share\n */\nconst exports = {};\n\nimport './share.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  ngeoMessageModalComponent.name,\n  gmfPermalinkShareComponent.name,\n]);\n\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\nexports.constant('gmfShortenerCreateUrl', 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/short/create');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * Model attached to the modal to toggle it\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareWithEmailShown = false;\n\n  /**\n   * Model attached to the modal to toggle it\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/share.js","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\n\nconst exports = angular.module('', [\n  gmfPermalinkShareService.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/permalink/shareComponent.html`\n};\nexports.component('gmfShare', exports.component_);\n\n\n/**\n * The controller for the share component\n * @param {angular.Scope} $scope Scope.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n * @param {angular.$q} $q Angular q service\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfShareController\n */\nexports.Controller_ = function($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.permalink.ShareService}\n   * @private\n   */\n  this.gmfShareService_ = gmfShareService;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.enableEmail;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.permalink = ngeoLocation.getUriString();\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.shortLink;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.email;\n\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.message;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showLengthWarning = this.permalink.length > gmfPermalinkShareService.URL_MAX_LEN ||\n  ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.successfullySent = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.errorOnsend = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.errorOnGetShortUrl = false;\n\n  this.getShortUrl();\n\n};\n\n\n/**\n * Get the short version of the permalink if the email is not provided\n * @export\n */\nexports.Controller_.prototype.getShortUrl = function() {\n  this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink))\n    .then(\n      onSuccess_.bind(this),\n      onError_.bind(this)\n    );\n\n  /**\n   * Success handler when trying to fetch a short url for the permalink\n   * @param  {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} resp service response\n   * @private\n   */\n  function onSuccess_(resp) {\n    this.shortLink = resp.data.short_url;\n    this.errorOnGetShortUrl = false;\n  }\n\n  /**\n   * Error handler when trying to fetch a short url for the permalink\n   * @param  {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} resp service response\n   * @private\n   */\n  function onError_(resp) {\n    this.shortLink = this.permalink;\n    this.errorOnGetShortUrl = true;\n  }\n\n};\n\n\n/**\n * Send the short version of the permalink if the email is provided\n * @export\n */\nexports.Controller_.prototype.sendShortUrl = function() {\n  if (this.$scope_['gmfShareForm'].$valid) {\n    this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink, this.email, this.message))\n      .then(\n        onSuccess_.bind(this),\n        onError_.bind(this)\n      );\n  }\n\n  /**\n   * Success handler when trying to send the short version of the permalink\n   * @param  {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} resp service response\n   * @private\n   */\n  function onSuccess_(resp) {\n    this.successfullySent = true;\n  }\n\n  /**\n   * Error handler when trying to to send the short version of the permalink\n   * @param  {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} resp service response\n   * @private\n   */\n  function onError_(resp) {\n    this.errorOnsend = true;\n  }\n\n};\n\nexports.controller('GmfShareController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/shareComponent.js","/**\n * @module gmf.permalink.ShareService\n */\nimport gmfBase from 'gmf/index.js';\n\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/ShareService.js"],"sourceRoot":""}