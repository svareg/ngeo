{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/mapfishprint.js"],"names":["appmodule","angular","module","ngeoMapModule","name","ngeoPrintService","ngeoPrintUtils","PRINT_SCALES_","PRINT_FORMAT_","PRINT_LAYOUT_","PRINT_DPI_","PRINT_PAPER_SIZE_","MainController","$timeout","ngeoCreatePrint","map","olMap","layers","olLayerImage","source","olSourceImageWMS","url","MAPSERVER_PROXY","projection","undefined","params","serverType","olLayerVector","olSourceVector","format","olFormatGeoJSON","dataProjection","EPSG21781","view","olView","resolutions","center","zoom","printState","$timeout_","print_","PRINT_PROXY","printUtils_","postcomposeListener","createPrintMaskPostcompose","frameState","mapSize","size","mapResolution","viewState","resolution","getOptimalScale","on","prototype","print","getSize","viewResolution","getView","getResolution","scale","dpi","layout","spec","createSpec","createReport","then","handleCreateReportSuccess_","bind","handleCreateReportError_","resp","mfResp","data","getStatus_","ref","getStatus","handleGetStatusSuccess_","handleGetStatusError_","done","window","location","href","getReportUrl","that","controller"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAMA,SAAS,GAAGC,8CAAO,CAACC,MAAR,CAAe,KAAf,EAAsB,CACtC,SADsC,EAEtCC,2DAAa,CAACC,IAFwB,EAGtCC,6DAAgB,CAACD,IAHqB,EAItCE,2DAAc,CAACF,IAJuB,CAAtB,CAAlB;AAYA,IAAMG,aAAa,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C,KAA1C,EACpB,MADoB,EACZ,MADY,CAAtB;AAQA,IAAMC,aAAa,GAAG,KAAtB;AAOA,IAAMC,aAAa,GAAG,eAAtB;AAOA,IAAMC,UAAU,GAAG,EAAnB;AAOA,IAAMC,iBAAiB,GAAG,CAAC,GAAD,EAAM,GAAN,CAA1B;;AAWA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,eAAlC,EAAmDR,cAAnD,EAAmE;AAIjE,OAAKS,GAAL,GAAW,IAAIC,iDAAJ,CAAU;AACnBC,UAAM,EAAE,CACN,IAAIC,yDAAJ,CAAiB;AACfC,YAAM,EAAE,IAAIC,8DAAJ,CAAqB;AAC3BC,WAAG,EAAEC,uDADsB;AAE3BC,kBAAU,EAAEC,SAFe;AAG3BC,cAAM,EAAE;AACN,oBAAU;AADJ,SAHmB;AAM3BC,kBAAU,EAA+D;AAN9C,OAArB;AADO,KAAjB,CADM,EAWN,IAAIC,2DAAJ,CAAkB;AAChBR,YAAM,EAAE,IAAIS,4DAAJ,CAAmB;AACzBP,WAAG,EAAE,8BADoB;AAEzBQ,cAAM,EAAE,IAAIC,4DAAJ,CAAoB;AAC1BC,wBAAc,EAAEC,yEAASA;AADC,SAApB;AAFiB,OAAnB;AADQ,KAAlB,CAXM,CADW;AAqBnBC,QAAI,EAAE,IAAIC,kDAAJ,CAAW;AACfX,gBAAU,EAAES,yEADG;AAEfG,iBAAW,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,GAA1B,EAA+B,CAA/B,EAAkC,CAAlC,CAFE;AAGfC,YAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAHO;AAIfC,UAAI,EAAE;AAJS,KAAX;AArBa,GAAV,CAAX;AAiCA,OAAKC,UAAL,GAAkB,EAAlB;AAMA,OAAKC,SAAL,GAAiB1B,QAAjB;AAMA,OAAK2B,MAAL,GAAc1B,eAAe,CAAC2B,mDAAD,CAA7B;AAMA,OAAKC,WAAL,GAAmBpC,cAAnB;AAKA,MAAMqC,mBAAmB,GAAGrC,cAAc,CAACsC,0BAAf,CAI1B;AAAA,WAAMjC,iBAAN;AAAA,GAJ0B,EAS1B,UAACkC,UAAD,EAAgB;AACd,QAAMC,OAAO,GAAGD,UAAU,CAACE,IAA3B;AACA,QAAMC,aAAa,GAAGH,UAAU,CAACI,SAAX,CAAqBC,UAA3C;AAEA,WAAOJ,OAAO,KAAKtB,SAAZ,IAAyBwB,aAAa,KAAKxB,SAA3C,GACLlB,cAAc,CAAC6C,eAAf,CAA+BL,OAA/B,EAAwCE,aAAxC,EACErC,iBADF,EACqBJ,aADrB,CADK,GAGLA,aAAa,CAAC,CAAD,CAHf;AAID,GAjByB,CAA5B;AAsBA,OAAKQ,GAAL,CAASqC,EAAT,CAAY,aAAZ,EAA2BT,mBAA3B;AACD;;AAKD/B,cAAc,CAACyC,SAAf,CAAyBC,KAAzB,GAAiC,YAAW;AAC1C,MAAMvC,GAAG,GAAG,KAAKA,GAAjB;AAEA,MAAM+B,OAAO,GAAG/B,GAAG,CAACwC,OAAJ,EAAhB;AACA,MAAMC,cAAc,GAAGzC,GAAG,CAAC0C,OAAJ,GAAcC,aAAd,EAAvB;AAGA,MAAMC,KAAK,GAAGb,OAAO,KAAKtB,SAAZ,IAAyBgC,cAAc,KAAKhC,SAA5C,GACZ,KAAKkB,WAAL,CAAiBS,eAAjB,CAAiCL,OAAjC,EAA0CU,cAA1C,EACE7C,iBADF,EACqBJ,aADrB,CADY,GAGZA,aAAa,CAAC,CAAD,CAHf;AAKA,MAAMqD,GAAG,GAAGlD,UAAZ;AACA,MAAMmB,MAAM,GAAGrB,aAAf;AACA,MAAMqD,MAAM,GAAGpD,aAAf;AAEA,OAAK6B,UAAL,GAAkB,aAAlB;AAEA,MAAMwB,IAAI,GAAG,KAAKtB,MAAL,CAAYuB,UAAZ,CAAuBhD,GAAvB,EAA4B4C,KAA5B,EAAmCC,GAAnC,EAAwCC,MAAxC,EAAgDhC,MAAhD,EAAwD;AACnE,kBAAc,EADqD;AAEnE,aAAS,CAF0D;AAGnE,gBAAY,aAHuD;AAInE,aAAS;AAJ0D,GAAxD,CAAb;AAOA,OAAKW,MAAL,CAAYwB,YAAZ,CAAyBF,IAAzB,EAA+BG,IAA/B,CACE,KAAKC,0BAAL,CAAgCC,IAAhC,CAAqC,IAArC,CADF,EAEE,KAAKC,wBAAL,CAA8BD,IAA9B,CAAmC,IAAnC,CAFF;AAID,CA7BD;;AAoCAvD,cAAc,CAACyC,SAAf,CAAyBa,0BAAzB,GAAsD,UAASG,IAAT,EAAe;AACnE,MAAMC,MAAM,GACVD,IAAI,CAACE,IADP;AAGA,OAAKC,UAAL,CAAgBF,MAAM,CAACG,GAAvB;AACD,CALD;;AAYA7D,cAAc,CAACyC,SAAf,CAAyBmB,UAAzB,GAAsC,UAASC,GAAT,EAAc;AAClD,OAAKjC,MAAL,CAAYkC,SAAZ,CAAsBD,GAAtB,EAA2BR,IAA3B,CACE,KAAKU,uBAAL,CAA6BR,IAA7B,CAAkC,IAAlC,EAAwCM,GAAxC,CADF,EAEE,KAAKG,qBAAL,CAA2BT,IAA3B,CAAgC,IAAhC,CAFF;AAID,CALD;;AAYAvD,cAAc,CAACyC,SAAf,CAAyBe,wBAAzB,GAAoD,UAASC,IAAT,EAAe;AACjE,OAAK/B,UAAL,GAAkB,aAAlB;AACD,CAFD;;AAUA1B,cAAc,CAACyC,SAAf,CAAyBsB,uBAAzB,GAAmD,UAASF,GAAT,EAAcJ,IAAd,EAAoB;AACrE,MAAMC,MAAM,GACVD,IAAI,CAACE,IADP;AAGA,MAAMM,IAAI,GAAGP,MAAM,CAACO,IAApB;;AACA,MAAIA,IAAJ,EAAU;AAER,SAAKvC,UAAL,GAAkB,EAAlB;AACAwC,UAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,KAAKxC,MAAL,CAAYyC,YAAZ,CAAyBR,GAAzB,CAAvB;AACD,GAJD,MAIO;AAEL,QAAMS,IAAI,GAAG,IAAb;AACA,SAAK3C,SAAL,CAAe,YAAM;AACnB2C,UAAI,CAACV,UAAL,CAAgBC,GAAhB;AACD,KAFD,EAEG,IAFH,EAES,KAFT;AAGD;AACF,CAhBD;;AAuBA7D,cAAc,CAACyC,SAAf,CAAyBuB,qBAAzB,GAAiD,UAASP,IAAT,EAAe;AAC9D,OAAK/B,UAAL,GAAkB,aAAlB;AACD,CAFD;;AAKAtC,SAAS,CAACmF,UAAV,CAAqB,gBAArB,EAAuCvE,cAAvC;AAGeV,qEAAf,E","file":"mapfishprint.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"mapfishprint\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([23,\"commons\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import angular from 'angular';\nimport {MAPSERVER_PROXY, PRINT_PROXY} from './url.js';\nimport './mapfishprint.css';\nimport EPSG21781 from '@geoblocks/proj/src/EPSG_21781.js';\n\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.IModule} **/\nconst appmodule = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoPrintService.name,\n  ngeoPrintUtils.name,\n]);\n\n\n/**\n * @private\n * @hidden\n */\nconst PRINT_SCALES_ = [100, 250, 500, 2500, 5000, 10000, 25000, 50000,\n  100000, 500000];\n\n\n/**\n * @private\n * @hidden\n */\nconst PRINT_FORMAT_ = 'pdf';\n\n\n/**\n * @private\n * @hidden\n */\nconst PRINT_LAYOUT_ = '1 A4 portrait';\n\n\n/**\n * @private\n * @hidden\n */\nconst PRINT_DPI_ = 72;\n\n\n/**\n * @private\n * @hidden\n */\nconst PRINT_PAPER_SIZE_ = [555, 675];\n\n\n/**\n * @constructor\n * @param {angular.ITimeoutService} $timeout Angular timeout service.\n * @param {import(\"ngeo/print/Service.js\").CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n * @param {import(\"ngeo/print/Utils.js\").PrintUtils} ngeoPrintUtils The ngeo PrintUtils service.\n * @ngInject\n * @hidden\n */\nfunction MainController($timeout, ngeoCreatePrint, ngeoPrintUtils) {\n  /**\n   * @type {import(\"ol/Map.js\").default}\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerImage({\n        source: new olSourceImageWMS({\n          url: MAPSERVER_PROXY,\n          projection: undefined, // should be removed in next OL version\n          params: {\n            'LAYERS': 'osm'\n          },\n          serverType: /** @type {import(\"ol/source/WMSServerType.js\").default} */ ('mapserver')\n        })\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          url: 'data/polygon-swizerland.json',\n          format: new olFormatGeoJSON({\n            dataProjection: EPSG21781\n          })\n        })\n      })\n    ],\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  /**\n   * Text to display a \"loading\" message while waiting for the report.\n   * @type {string}\n   */\n  this.printState = '';\n\n  /**\n   * @type {angular.ITimeoutService}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {import(\"ngeo/print/Service.js\").PrintService}\n   * @private\n   */\n  this.print_ = ngeoCreatePrint(PRINT_PROXY);\n\n  /**\n   * @type {import(\"ngeo/print/Utils.js\").PrintUtils}\n   * @private\n   */\n  this.printUtils_ = ngeoPrintUtils;\n\n  /**\n   * @type {function(import(\"ol/render/Event.js\").default)}\n   */\n  const postcomposeListener = ngeoPrintUtils.createPrintMaskPostcompose(\n    /**\n       * @return {import(\"ol/size.js\").Size} Size in dots of the map to print.\n       */\n    () => PRINT_PAPER_SIZE_,\n    /**\n       * @param {import('ol/PluggableMap.js').FrameState} frameState Frame state.\n       * @return {number} Scale of the map to print.\n       */\n    (frameState) => {\n      const mapSize = frameState.size;\n      const mapResolution = frameState.viewState.resolution;\n      // we test mapSize and mapResolution just to please the compiler\n      return mapSize !== undefined && mapResolution !== undefined ?\n        ngeoPrintUtils.getOptimalScale(mapSize, mapResolution,\n          PRINT_PAPER_SIZE_, PRINT_SCALES_) :\n        PRINT_SCALES_[0];\n    });\n\n  /**\n   * Draw the print window in a map postcompose listener.\n   */\n  this.map.on('postcompose', postcomposeListener);\n}\n\n\n/**\n */\nMainController.prototype.print = function() {\n  const map = this.map;\n\n  const mapSize = map.getSize();\n  const viewResolution = map.getView().getResolution();\n\n  // we test mapSize and viewResolution just to please the compiler\n  const scale = mapSize !== undefined && viewResolution !== undefined ?\n    this.printUtils_.getOptimalScale(mapSize, viewResolution,\n      PRINT_PAPER_SIZE_, PRINT_SCALES_) :\n    PRINT_SCALES_[0];\n\n  const dpi = PRINT_DPI_;\n  const format = PRINT_FORMAT_;\n  const layout = PRINT_LAYOUT_;\n\n  this.printState = 'Printing...';\n\n  const spec = this.print_.createSpec(map, scale, dpi, layout, format, {\n    'datasource': [],\n    'debug': 0,\n    'comments': 'My comments',\n    'title': 'My print'\n  });\n\n  this.print_.createReport(spec).then(\n    this.handleCreateReportSuccess_.bind(this),\n    this.handleCreateReportError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.IHttpResponse} resp Response.\n * @private\n */\nMainController.prototype.handleCreateReportSuccess_ = function(resp) {\n  const mfResp = /** @type {import('ngeo/print/mapfish-print-v3.js').MapFishPrintReportResponse} */ (\n    resp.data\n  );\n  this.getStatus_(mfResp.ref);\n};\n\n\n/**\n * @param {string} ref Ref.\n * @private\n */\nMainController.prototype.getStatus_ = function(ref) {\n  this.print_.getStatus(ref).then(\n    this.handleGetStatusSuccess_.bind(this, ref),\n    this.handleGetStatusError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.IHttpResponse} resp Response.\n * @private\n */\nMainController.prototype.handleCreateReportError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\n/**\n * @param {string} ref Ref.\n * @param {!angular.IHttpResponse} resp Response.\n * @private\n */\nMainController.prototype.handleGetStatusSuccess_ = function(ref, resp) {\n  const mfResp = /** @type {import('ngeo/print/mapfish-print-v3.js').MapFishPrintStatusResponse} */ (\n    resp.data\n  );\n  const done = mfResp.done;\n  if (done) {\n    // The report is ready. Open it by changing the window location.\n    this.printState = '';\n    window.location.href = this.print_.getReportUrl(ref);\n  } else {\n    // The report is not ready yet. Check again in 1s.\n    const that = this;\n    this.$timeout_(() => {\n      that.getStatus_(ref);\n    }, 1000, false);\n  }\n};\n\n\n/**\n * @param {!angular.IHttpResponse} resp Response.\n * @private\n */\nMainController.prototype.handleGetStatusError_ = function(resp) {\n  this.printState = 'Print error';\n};\n\n\nappmodule.controller('MainController', MainController);\n\n\nexport default module;\n"],"sourceRoot":""}