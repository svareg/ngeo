{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./src/rule/Rule.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/utils.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/decorate.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/filters.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./src/misc/debounce.js","webpack:///./src/statemanager/Location.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/print/Utils.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./contribs/gmf/src/objectediting/coordinate.js","webpack:///./contribs/gmf/src/objectediting/geom.js","webpack:///./contribs/gmf/src/objectediting/Query.js","webpack:///./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","webpack:///./src/interaction/DrawRegularPolygonFromClick.js","webpack:///./src/editing/createregularpolygonfromclickComponent.js","webpack:///./contribs/gmf/src/objectediting/toolsComponent.js","webpack:///./contribs/gmf/src/objectediting/component.js","webpack:///./contribs/gmf/src/objectediting/Manager.js","webpack:///./contribs/gmf/src/objectediting/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/oeedit/Controller.js","webpack:///./contribs/gmf/apps/oeedit/contextualdata.html","webpack:///./contribs/gmf/src/objectediting/component.html","webpack:///./contribs/gmf/src/objectediting/toolsComponent.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/permalink/crosshair.svg","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","assert","condition","opt_message","var_args","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","assertInstanceof","type","assertObjectPrototypeIsIntact","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","undefined","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","olBase","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","olArray","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","getIds","item","array","forEach","child","callback","layer","set","metadata","dimensions","ids","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","opt_params","STYLES","styles","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref","key","createBasicWMSLayer","layers","credential","fail","layerGroupCreationFn","orderedChildren","map","x","reverse","promises","all","collection","filter","olCollection","createBasicGroup","promiseSuccessFn","background_layers","itemType","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","config","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeoMapLayerHelper","service","_inherits","_ngeoDatasourceDataSo","options","_classCallCheck","_possibleConstructorReturn","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","ogcLayer","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","maxRes","minRes","inMinRange","inMaxRange","inRange","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeoFormatAttributeType","share","myActive","activeDimensions","itsActive","_createClass","time","range","lower","upper","end","start","active","timeRangeValue","supportsOGCQueries","_iterator5","_isArray5","_i5","_ref5","ngeoDatasourceDataSource","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","olEvents","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","DATALAYERGROUP_NAME","EXTERNALLAYERGROUP_NAME","COORDINATES_LAYER_NAME","PermalinkParam","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","toolContext","activePropertyName","getActive","setActive","newVal","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","projection_","download_","setProjection","projection","setStyle","feature","opt_select","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","getType","style","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","olStyleStyle","stroke","olStyleStroke","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","olStyleCircle","radius","fill","olStyleFill","font_size","point_to_px","offsetY","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeoFormatFeatureProperties","line","getRadiusLine","ngeoInteractionMeasure","getFormattedLength","geometry","angle","olGeomPoint","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","olStyleRegularShape","points","innerMultiCoordinates","multiCoordinates","coordinates","olGeomLineString","getCoordinates","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","concat","olGeomMultiPoint","supported","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","olColor","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","mimeType","fileName","export_","olFormatKML","opt_mimeType","clones","clone","olFeature","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","olStyleText","measure","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","olExtent","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","toMulti","multiGeom","appendPoint","appendLineString","appendPolygon","isSafari","navigator","userAgent","indexOf","colorZeroPadding","hex","rgbArrayToHex","rgb","g","b","Error","hexR","toString","hexG","hexB","decodeQueryString","queryString","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","encodeQueryString","queryItem","encodeURIComponent","deleteCondition","event","olEventsCondition","extentToRectangle","getTopLeft","getTopRight","getBottomRight","getBottomLeft","detail","olEventsEvent","showMessage","show","msgObjects","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObject","defaultType","msg","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","opt_customSourceOptions","opt_customLayerOptions","FORMAT","LAYERS","olServerType","replace","assign","serverType","crossOrigin","source","olSourceImageWMS","updateParams","layerOptions","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","opt_customOptions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","olSourceWMTS","olObj","updateDimensions","setSource","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","OlLayerGroup","setLayers","getGroupFromMap","groupName","groups","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","sublayers","hasGroupLayer","sublayer","getFlatLayers_","computedOpacity","getOpacity","getLayerByName","found","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","round","olUri","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerGroupLayers","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","_ngeoRuleRule","featureProperties","feature_","format_","olFormatGeoJSON","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","target","olGeomGeometry","readGeometry","setGeometry","ngeoRuleRule","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","getLayer","getFeatureOverlay","styleFunction","olStyleDefaultFunction","ngeoMapFeatureOverlay","init","setMap","defaultFunction","toStyleFunction","resolution","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","Visitor","traverseDepthFirst","visitor","decision","stop","controller","olInteractionInteraction","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","area","abs","olSphere","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","olProj","c2","point","opt_template","dragging","helpMsg","olDom","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","olOverlay","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeoMessageMessage","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeoMessageNotification","ngeoStatemanagerService","interaction","olLayerBase","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","decrementLoadCount_","decrement_","on","olEvent","newLayer","olSourceTile","olSourceImage","$applyAsync","load_count","$inject","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","bboxAsGETParam_","bboxAsGETParam","dataSourceNames_","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","Number","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeoDatasourceDataSources","ngeoDatasourceHelper","ngeoQueryQuerent","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","secondResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","Scalify","numberFilter","filterFn","scale","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","olMath","dms","olString","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","removeCDATA","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","inAMixedGroup","isOneParentNotMixed_","layerGroup","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","ngeoMiscWMSTime","scope_","registerTool","tool","opt_defaultActivate","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","NOT","OR","Text_inherits","Text_classCallCheck","Text_possibleConstructorReturn","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleGeometry","ngeoRuleSelect","choices","ngeoRuleText","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializedRule","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","olFormatFilter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","writeFilter","xmlSerializer","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","selectedChoices","selectedChoice","numericExpression","stringExpression","String","field","momentEnd","subtract","startValue","ngeoMiscFeatureHelper","featuresCollection_","wrapX","FileGroup_inherits","_ngeoDatasourceGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","injector","unregister_","addDataSource","ngeoDatasourceFile","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","ngeoDatasourceGroup","OGCGroup_inherits","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_createClass","WMSGroup_inherits","_ngeoDatasourceOGCGro","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGC","updateLayer_","unregister","WMSGroup_createClass","ngeoDatasourceOGCGroup","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","ngeoDatasourceFileGroup","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","imagePngType","includes","infoFormats","ngeoDatasourceWMSGroup","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","isEmpty","fit","rejections","content","readOptions","getProjection","isKml","extractStyles","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","ngeoMiscFile","btnGroupComponent_","$parse","restrict","link","scope","attrs","buttons_","buttonModel","newValue","directive","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","collection_","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","olView","syncDataSourceToResolution_","supportsDynamicInRange","gmfEditingEditFeature","gmfEditingSnapping","gmfEditingXSDAttributes","ngeoEditingAttributesComponent","ngeoEditingCreatefeatureComponent","ngeoMessageModalComponent","ngeoMiscBtnComponent","ngeoMiscEventHelper","ngeoMiscToolActivateMgr","run","$templateCache","put","component_","dirty","editableTreeCtrl","vectorLayer","closeAfterSave","bindToController","templateUrl","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeoMiscToolActivate","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","modify_","modifyToolActivate","menu_","ngeoMenu","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","DateFormatter","getFeaturesCollection","gmfLayertreeSyncLayertreeMap","olInteractionModify","ngeoUtils","ngeoInteractionRotate","ngeoInteractionTranslate","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","handleFeatureAdd_","handleMapSelectActiveChange_","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","refresh","close","checkForModifications_","scopeApply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","mask","geomAttr","ngeoFormatXSDAttribute","getGeometryAttribute","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","mapDiv","getViewport","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","hitTolerance","buffer","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","open","preventDefault","stopPropagation","_this10","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","updateCurrentTheme","fallbackThemeName","fallbackTheme","$emit","EventType","THEME_NAME_SET","gmfLayertreeTreeManager","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","choices_","gmfLayersUrl","http_","baseUrl_","layerIds","bbox","getFeaturesWithComparisonFilters","filters","layerId","geoJSON","post","headers","Content-Type","writeFeature","factory_","func","wait","invokeApply","timeout","_len","_key","context","later","factory","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","search","fragment_","hash","replaceState","getPath","getUriString","out","encodedQueryData","encodedFragment","hasFragmentParam","getParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","parseFloat","getFragmentParamAsInt","getParamKeys","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","locationMock","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","keyRegexp","match","localStorage","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","getDefaultDrawStyleFunction","createEditingStyle","getDefaultModifyStyleFunction","_olEventsEventTarget","authenticationBaseUrl","gmfUser","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","param","oldPassword","newPassword","confirmNewPassword","is_password_changed","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","respData","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","setUser_","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","olInteractionPointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","ngeoInteractionCommon","downPx","clickPx","dx","dy","squaredDistance","pass","handlePointerMove_","startDrawing_","finishDrawing_","mapBrowserEvent","pointerHandleEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","olGeomCircle","olGeomGeometryCollection","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","olFunctions","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","getGeometries","olProjProjection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","directive_","ngeoPopupTemplateUrl","addClass","css","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","ngeoMessagePopupComponent","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","olFormatXML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeoFormatAttribute","setGeometryType","setAttributeByXsdType_","enumerations","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","otherState","INDETERMINATE","olXml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","ngeoRuleHelper","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","olFormatWMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","meta","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","ogcDS","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","ngeoFilterRuleHelper","complexTypeElements","readFromComplexTypeElement_","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","ngeoFormatWFSAttribute","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","firstTreeCtrl","firstNode","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","extend","Cache","CacheItem","WFSConfig","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","centerFeatures_","olInteractionTranslate","handleKeyUp_","setState_","currentMap","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","elem","getTargetElement","cursor","removeFeature_","getGeometryCenterPoint_","centerFeature","keyCode","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","handleDown_","handleDragEvent","handleDrag_","handleUp_","getCenterCoordinate_","willModifyFeatures_","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","a1","rotate","menuOptions","opt_overlayOptions","olOverlayPositioning","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","download","opt_fileType","fileType","blob","Blob","saveAs","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","$postLink","attr","dialog","draggable","handle","modal","e","$onDestroy","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","DAY","HOUR","_compare","str1","str2","toLowerCase","_lpad","char","chr","_extend","_typeof","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","self","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","vPattern","vDigit","iPart","iSec","vYear","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","str","exec","I","UTC","O","tzo","P","T","Z","U","BACKSLASH","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","short_url","status","postShortUrl_","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","getScale","opt_rotation","frameState","viewState","viewportWidth","pixelRatio","viewportHeight","olHas","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZone_","drawPrintZoneWithRotation_","fillStyle","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","y1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","optimalResolution","max","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","epsg21781def","somerc","epsg21781extent","proj4","defs","olProjProj4","setExtent","br","olInteractionDraw","proj","verticesCount","gmfAuthenticationService","gmfAuthenticationTemplateUrl_","gmfAuthenticationTemplateUrl","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","infoMessage","AuthenticationController_","gmfAuthenticationService_","notification_","changingPassword","userMustChangeItsPassword","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","catch","resetError_","resetPasswordSuccessFn","messageType","gmfAuthenticationComponent","olObservable","mapUids_","mapUid","BACKGROUNDLAYERGROUP_NAME","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","hasUpdates","updatedDimensions","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","gmfEditingEnumerateAttribute","_ngeoDatasourceOGC","OGC_classCallCheck","gmfLayer_","OGC_createClass","WFSAliases_classCallCheck","describe","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","handleDimensionsChange_","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","cacheItem","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","queryLayers","wmsLayers","childLayer","isSingleTile","dimensionsFilters","identifierAttributeField","timeAttribute","gmfDatasourceOGC","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","treeDataSource","_source$updateParams","layersParam","layersList","filterParam","hasFilter","wmsLayerName","dsLayer","currentTimeParam","previousBackgroundLayer","currentBackgroundLayer","gmfDatasourceWFSAliases","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfDatasourceHelper","gmfDatasourceManager","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","showInPopup","popup","button","ngeoMessagePopup","ngeoMessageDisclaimer","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","registerLayer_","handleLayersAdd_","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","ngeoDrawComponent","ngeoMiscDatepickerComponent","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","drawnFeatures","selectedFeatures","ngeoInteractionModify","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","drawnFeature","getRuleGeometryType","removeMenu_","ngeoFilterRuleComponent","ngeoQueryMapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","ngeoMapFeatureOverlayMgr","ngeoFilterComponent","gmfFiltersSavedFilters","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","gmfFiltersFilterselectorComponent","pre","preLink","sliderOptions","onSliderReleased_","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","isModeRange","timeValueList","getTimeValueList_","initialOptions_","maxNbValues","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","gmfLayertreeComponent","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeTimeSliderComponent","gmfPermalinkPermalink","gmfPermalinkShareService","gmfPermalinkShareComponent","prop","olMap","setTarget","manageResizeAttr","manageResizeProp","manageResize","resizeTransitionAttr","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","ngeoMapComponent","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","gmfPermalinkModule","ngeoMapModule","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","formatFn","filterAndArgs","olControlMousePosition","className","coordinateFormat","undefinedHTML","addControl","code","gmfMapComponent","gmfMapMousepositionComponent","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","isSelected","selectAll","unselectAll","rowId","invertSelection","ngeoGridConfig","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","targetUid","posClickedRow","posSelectedRows","currentRow","currentUid","posClosestRow","currentPos","currentDistance","rangeStart","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","ngeoDownloadCsv","ngeoGridComponent","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSource","getMergedSource_","mergedSourceId","mergeSourceId","currentMergeSourceId","sourceLabels","containsSource","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","gridCreated","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","columns","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","maxZoom","downloadCsv","startDownload","MOVE_BUFFER_RADIUS","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","events","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","validSwipe","deltaY","deltaX","isDefined","triggerHandler","$event","ngeoMiscSwipe","$animateProvider","classNameFilter","gmfDisplayquerywindowTemplateUrl","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","positionMax","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","gmfQueryGridComponent","gmfQueryWindowComponent","gmfSearchComponent","gmfSearchFulltextSearch","gmfThemeManager","gmfThemeSelectorTemplateUrl","setThemes_","setTheme","gmfThemeSelectorComponent","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","updateContentTemplate_","compiled","displayWindow","empty","clear_","displaywindowComponent_createClass","trustAsResourceUrl","control","olControlControl","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","supportedLanguages","ngeoMiscAutoProjection","ngeoMiscControlComponent","ngeoMiscDebounce","ngeoMiscFilereaderComponent","ngeoMiscGetBrowserLanguage","ngeoMiscSortableComponent","clickEventKey_","pointerMoveEventKey_","sourceids","hit","forEachLayerAtPixel","activate_","cursorHover","deactivate_","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","filterGroups","issueRequest_","showFeatures","padding","getExtent_","resultSource","reduce","createFiltersForGroup","filterGroup","filterDef","or_","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","permalink_","gmfAuthentication","updateHasEditableLayers_","loginRedirectUrl","loginInfoMessage","loginActive","unbind","userChange","roleId","filterSelectorEnabled","open_panel","filterSelectorActive","previousThemeName","defaultThemeNameFromFunctionalities","setDefaultBackground_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","getBrowserLanguage","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapTools","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","getLocationIcon","arrow","arrowWrapper","gmfAuthenticationModule","gmfBackgroundlayerselectorComponent","gmfDatasourceModule","gmfDisclaimerComponent","gmfFiltersModule","gmfLayertreeModule","gmfMapModule","gmfQueryExtraModule","gmfSearchModule","gmfThemeModule","ngeoMessageDisplaywindowComponent","ngeoMiscExtraModule","ngeoQueryMapQueryComponent","ngeoStatemanagerModule","ngeoStatemanagerWfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","olStructsRBush","snappedToVertex_","dragSegments_","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","olCoordinate","fromCircle","setGeometryCoordinates_","olMapBrowserPointerEvent","handled","getInteracting","handlingDownUpSequence","pixelCoordinate","sortByDistance","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyParams","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","interactions","getFeatureCollection_","isCircle","isRectangle","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","ngeoDrawFeatures","drawFeatureCtrl","geometryFunction","maxPoints","ngeoDrawController","contMsg","ngeoInteractionMeasureArea","ngeoInteractionMeasureLength","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","filter_","interaction_","handleDrawEnd_","promises_","handleGetAttributes_","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","Proj","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleIcon","src","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","stateName","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","enabled3d","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","groupNodes","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","initialUri","href","authenticationRequired","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","numGroups","WFS","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","_ret","responses","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","OpenLayersLayerProperties","regexp","key1","key2","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","geomRegex","promiseId","handleGetAttributeValues_","isValidFileSize","fileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","load","opt_cancelP","viewConfig","mapViewConfig","gmfControllersAbstractAppController","mapPixelRatio","controls","mapControls","olControlScaleLine","getElementById","olControlZoom","zoomInTipLabel","zoomOutTipLabel","olControlRotate","tipLabel","mapInteractions","olInteraction","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","editFeatureActivate","googleStreetViewActivate","scaleSelectorOptions","profileLine","gmfContextualdataModule","gmfDrawingModule","gmfEditingModule","gmfPrintComponent","gmfProfileModule","gmfRasterComponent","ngeoQueryBboxQueryComponent","gmfImportModule","gmfRasterRasterService","gmfRaster","$compile_","gmfRaster_","gmfContextualdataOptions_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","getRasterSuccess","getRasterError","rasterParams","setAttribute","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","gmfContextualdataComponent","opt_options","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","fillColorHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","part","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","gmfEditingEditFeatureComponent","selectedEditableTreeCtrl","updateEditableTreeCtrls","editables","editableTreeCtrls","treeCtrlsWatcherUnregister_","stopEditing","gmfEditingEditFeatureSelectorComponent","geojsonFormat","PrintStyleType","PrintStyleTypes_","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","featureStyleProp","styleId","encodeVectorStyle","geojsonFeatureCollection","geoJson","styleObject","symbolizers","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","encodeVectorStyleStroke","URL","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeOpacity","strokeDashstyle","getLineDash","strokeLineCap","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","labelXOffset","getOffsetX","labelYOffset","getOffsetY","vectorEncoder","ngeoPrintVectorEncoder","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","spec","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","getOpacityOrInherited_","useNativeAngle","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","olTilegridWMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","olSize","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","currentColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","gmfDrawingDrawFeatureComponent","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","createAndAddDataSource","getUid","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","gmfImportWmsCapabilityLayertreeComponent","gmfImportWmtsCapabilityLayertreeComponent","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","startWorking_","stopWorking_","opt_hasError","nameAndSize","gmfImportImportdatasourceComponent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadDatasets","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","datasetsempty","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","Function","sourceProjection","ngeoProjEPSG21781","parseBbox","regex","removeHtmlTags","extractName","origins","results","geom_st_box2d","bhOptions","ngeoSearchSearchDirective","ngeoSearchCreateGeoJSONBloodhound","ngeoSearchCreateLocationSearchBloodhound","d3","bisector","axisBottom","axisLeft","scaleLinear","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","every","isFinite","transition","yHover","defined","tickFormat","tickValues","ticks","tickSize","mouseout","mousemove","mouseX","x0","invert","clearHighlight","elevation","elevations","elevationsRef","lineName","xtranslate","yUnits","showPois","pois","pe","profileData","ps","poiEnterG","exit","optionsAttr","elevationData","poiData","origHoverCallback","origOutCallback","ngeoProfileD3Elevation","refreshData","ngeoProfileElevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","lineConfig","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","eventToLine","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","separator","elevationName","translatedElevationName","DistDecimal","int_value","lineConfiguration","getLayersNames","getZFn","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","getStyleFn","overlay","styleFn","gmfProfileComponent","gmfProfileDrawLineComponent","olInteractionDragBox","handleBoxEnd","gmfElevationwidgetTemplateUrl","layersconfig","loading","toggleActive_","layersConfig","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","custom_args","widgetComponent_","WidgetController_","selectedElevationLayer","LayerConfig","ngeoPrintService","ngeoPrintUtils","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","gmfPrintTemplateUrl","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","optionsLegendType","optionsType","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","gmfLegendOptions_","useBbox","legend","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","updateRotation_","togglePrintPanel_","print","currentThemes","getSizeFn","getRotationFn","getScaleFn","getOptimalScale_","getCapabilities_","parseCapabilities_","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","dpis","rawType","simpleAttributes","previousAttributes","default","p0x","p0y","p1x","p1y","centerToP0","centerToP1","sense","boost","increment","$digest","getDataSource_","getLegend_","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","setLayerGroup","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","datasourceArr","tanslateColumns","table","mfResp","getStatus_","handleGetStatusSuccess_","classes","icons","getMetadataLegendImage_","serverType_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","fromJson","ngeoMiscDatetimepickerComponent","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","parentElement","sortable","resetUpDragDrop","optionsObject","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","defaultHandleClassName","handleClassName","ngeoPopoverCtrl","anchorElm","popover","bodyElm","shown","placement","dismissPopover","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoSearchModule","ngeoMessagePopoverComponent","gmfSearchTemplateUrl_","gmfSearchTemplateUrl","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","bloodhoundEngine","createAndInitBloodhound_","typeaheadDataset","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","initialize","rateLimitWait","xhrFields","suggestions","tt_source","radius2","customStyles","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","fitOptions","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeoLayertreeTemplateUrl","__webpack_exports__","originalEl","closeEl_","contentEl_","one","ngeoLayertreeComponent","subTemplateUrl","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","gmfSyncLayertreeMap_","groupNodeStates_","ngeoMiscSyncArrays","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","mpu","displayMetadata","metadataURL","afterReorder","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","$compileProvider","debugInfoEnabled","toXY","nesting","olGeomSimpleGeometry","gmfObjecteditingCoordinate","getQueryableLayerNodesDefered_","getQueryableLayersInfo","allQueryableLayersInfo","getQueryableLayersInfoFromThemes","queryableLayersInfo","layerNode","k","kk","getFeatureInfo","layerInfo","infoFormat","QUERY_LAYERS","gmfObjecteditingQuery","gmfObjectEditingQuery","gmfObjectEditingQuery_","angle_","radius_","sides_","sides","enable_","disable_","makeRegular","interactionListenerKey_","ngeoInteractionDrawRegularPolygonFromClick","gmfObjecteditingGetWMSFeatureComponent","ngeoEditingCreateregularpolygonfromclickComponent","copyFromActive","deleteFromActive","process","queryableLayerInfo","requiresLayer","geomTypePolygon","toolActiveNames_","registerTool_","ProcessType","ADD","eraseActive","DELETE","drawTriangleActive","triangleAngle","oeToolsOptions","triangleRadius","regularPolygonRadius","toolActiveName","opt_requiresLayer","handleToolActiveChange_","NAMESPACE_","toolActivate","gmfObjecteditingToolsComponent","gmfObjecteditingTemplateUrl","layerNodeId","Controller","selectedQueryableLayerInfo","queryableLayerListShown","featureHasGeom","skipGeometryChange_","jstsOL3Parser_","OL3Parser","LinearRing","GeometryCollection","geometryChanges_","defaultStyles_","defaultStylesWoVertice_","dirtyStyles_","dirtyStylesWoVertice_","modifyToolActivate_","toolsToolActivate_","handleGetQueryableLayersInfo_","UPDATE","INSERT","defaultColor","dirtyColor","initializeStyles_","setFeatureStyle_","gmfObjecteditingGeom","resetGeometryChanges_","handleDeleteFeature_","undo","cloneGeometry_","isStateInsert","refreshWMSLayer_","handleModifyInteractionModifyEnd_","handleWindowBeforeUnload_","handleSketchFeaturesAdd_","undoAllChanges_","jstsGeom","jstsBuffered","write","opt_incVertice","incVertice","rgbaColor","modifyActive","returnValue","sketchGeom","jstsSketchGeom","jstsProcessedGeom","union","intersects","difference","processedGeom","layersInfo","getFeatureDefered_","GEOM_TYPE","ID","PROPERTY","THEME","getGeomType","getLayerNodeId","gmfObjecteditingComponent","gmfObjecteditingManager","epsg2056def","epsg2056extent","oeEditActive","gmfControllersAbstractDesktopController","resolutions","oeEditToolActivate","gmfObjectEditingManager","oeGeomType","oeLayerNodeId","searchCoordinatesProjections","ngeoProjEPSG2056","scaleSelectorValues","elevationLayers","profileLinesconfiguration","aster","srtm","mousePositionProjections","raven","Raven","addPlugin","RavenPluginsAngular","install","appBase","gmfObjecteditingModule"],"mappings":"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HCAAC,EAAAD,QAAA,6gFCAAC,EAAAD,QAAA,mjDCAAC,EAAAD,QAAA,m0ECAAC,EAAAD,QAAA,2sCCAAC,EAAAD,QAAA,6tCCAAC,EAAAD,QAAA,0jKCAAC,EAAAD,QAAA,ysCCAAC,EAAAD,QAAA,q5GCAAC,EAAAD,QAAA,i+GCAAC,EAAAD,QAAA,8pHCAAC,EAAAD,QAAA,soGCAAC,EAAAD,QAAA,ysBCAAC,EAAAD,QAAA,wUCAAC,EAAAD,QAAA,kxBCAAC,EAAAD,QAAA,+SCAAC,EAAAD,QAAA,i4FCAAC,EAAAD,QAAA,i+FCAAC,EAAAD,QAAA,0nCCAAC,EAAAD,QAAA,6jBCAAC,EAAAD,QAAA,2ICAAC,EAAAD,QAAA,omBCAAC,EAAAD,QAAA,4yECAAC,EAAAD,QAAA,svBCAAC,EAAAD,QAAA,4xRCAAC,EAAAD,QAAA,2iBCAAC,EAAAD,QAAA,kuCCAAC,EAAAD,QAAiBJ,EAAAyB,EAAuB,sCCAxCpB,EAAAD,QAAA,82GCAAC,EAAAD,QAAA,q8ECAAC,EAAAD,QAAA,kjOCAAC,EAAAD,QAAA,wsBCAAC,EAAAD,QAAA,2OCAAC,EAAAD,QAAA,+uBCAAC,EAAAD,QAAA","file":"oeedit.e5dc2f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([425,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n\n      // Manage WMS styles\n      const opt_params = {STYLES: gmfLayerWMS.styles};\n      if (gmfLayer.dimensions) {\n        for (const [key, value] of Object.entries(gmfLayer.dimensions)) {\n          opt_params[key] = value;\n        }\n      }\n\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        opt_params,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport {getTopLeft, getTopRight, getBottomLeft, getBottomRight} from 'ol/extent.js';\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexport function extentToRectangle(extent) {\n  return [\n    getTopLeft(extent),\n    getTopRight(extent),\n    getBottomRight(extent),\n    getBottomLeft(extent),\n    getTopLeft(extent),\n  ];\n}\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customSourceOptions Some initial options.\n * @param {Object=} opt_customLayerOptions The layer opacity.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin,\n  opt_customSourceOptions, opt_customLayerOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customSourceOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  const layerOptions = Object.assign({}, opt_customLayerOptions, {source});\n  return new olLayerImage(layerOptions);\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bboxAsGETParam_ = options.bboxAsGETParam || false;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_,\n      bboxAsGETParam: this.bboxAsGETParam_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n  let secondResolution = undefined;\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n    secondResolution = gettextCatalog.getString('M/d/yyyy HH:MM:ss');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    case 'second':\n      if (secondResolution) {\n        return this.$filter_('date')(date, secondResolution, utc);\n      } else {\n        return date.toISOString().replace(/\\.\\d{3}/, '');\n      }\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <!-- With en-US localization -->\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *      <br/>\n *      <!-- With en-US localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\n/**\n * A filter used to remove the CDATA prefix and postfix.\n *\n * @return {function(string): string} Retult string\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nconst removeCDATA = function() {\n  return function(input) {\n    if (input) {\n      return input.replace(/<!\\[CDATA\\[(.*)\\]\\]>/, '$1');\n    }\n  };\n};\n\nexports.filter('removeCDATA', removeCDATA);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    const styles = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n        const style = (treeCtrl.node.style !== undefined) ? treeCtrl.node.style : '';\n        styles.push(style);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(','),\n      'STYLES': styles.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n\n    const opt_params = {STYLES: gmfLayerWMS.style};\n\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      opt_params, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(null, [mainFilter, dimensionsFilter]);\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        endValue = beginValue;\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(expression)\n          .add(30, 'years')\n          .format('YYYY-MM-DD');\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(expression)\n          .format('YYYY-MM-DD');\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).utc().format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.utc().format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GPX. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    url = service['OnlineResource'] || url;\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML({extractStyles: false}).readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *         gmf-editfeature-closeaftersave=\"::ctrl.closeaftersave\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @htmlAttribute {boolean} gmf-editfeatureselector-closeaftersave If true,\n *     immediately return to the main edit panel after save. Default is false.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector',\n      'closeAfterSave': '=?gmfEditfeatureCloseaftersave'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.closeAfterSave = false;\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n      this.gmfSnapping_.refresh();\n      if (this.closeAfterSave) {\n        this.cancel();\n      }\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n\n/**\n * @param {string} themeName wanted theme name.\n * @param {string} fallbackThemeName fallback theme name.\n * @export\n */\nexports.prototype.updateCurrentTheme = function(themeName, fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    if (!themeName && this.modeFlush) {\n      // In flush mode load current theme private groups\n      const fallbackTheme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (fallbackThemeName));\n      if (fallbackTheme) {\n        this.gmfTreeManager_.addFirstLevelGroups(fallbackTheme.children, false, false);\n      }\n    }\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.addTheme(theme, true);\n      }\n    } else {\n      this.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n    }));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      if (options.bboxAsGETParam && bbox) {\n        params['bbox'] = bbox.join(',');\n      }\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery';\nimport 'jquery-ui';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $postLink() {\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable({\n      'handle': '.modal-header'\n    });\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-info-message=\"mainCtrl.loginInfoMessage\"\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n * @htmlAttribute {string} gmf-authentication-info-message Message to show above the authentication form.\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange',\n    'infoMessage': '=?gmfAuthenticationInfoMessage'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.infoMessage = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.userMustChangeItsPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n    this.userMustChangeItsPassword = (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd)\n          .then(() => {\n            this.changePasswordReset();\n            this.setError_(\n              [gettextCatalog.getString('Your password has successfully been changed.')],\n              ngeoMessageMessage.Type.INFORMATION\n            );\n          })\n          .catch((err) => {\n            this.setError_(gettextCatalog.getString('Incorrect old password.'));\n          });\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @param {ngeoMessageMessage.Type} [messageType] Type.\n   * @private\n   */\n  setError_(errors, messageType) {\n    if (messageType == undefined) {\n      messageType = ngeoMessageMessage.Type.ERROR;\n    }\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: messageType\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n  const previous = bgGroup.getLayers().remove(this.getOpacityBgLayer(map));\n  const ZIndex = -100;\n  layer.setOpacity(previous ? previous.getOpacity() : 0);\n  layer.setVisible(previous ? previous.getVisible() : true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val !== undefined) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensionsFilters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    if (dataSource.gmfLayer == undefined) {\n      return;\n    }\n    const id = olBase.getUid(dataSource.gmfLayer);\n    if (id == undefined) {\n      return;\n    }\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(source instanceof olSourceImageWMS ||\n          source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (const wmsLayerName of layersList) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layer.get('querySourceIds').indexOf(dataSource.id) >= 0 &&\n            dataSource.gmfLayer.layers.split(',').indexOf(wmsLayerName) >= 0)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer === undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minDefValue = newVal || this.createDate_();\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minDefValue = newVal || this.createWeekAgoDate_();\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxDefValue = newVal || this.createDate_();\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_.bind(this));\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      this.updateContentTemplate_();\n    }\n\n    this.scope_.$watch(\n      () => this.contentTemplate,\n      () => this.updateContentTemplate_()\n    );\n  }\n\n  /**\n   *  @private\n   */\n  updateContentTemplate_() {\n    const scope = googAsserts.assert(this.contentScope || this.scope_);\n    const compiled = this.compile_(this.contentTemplate)(scope);\n    const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container .content-template-container');\n    displayWindow.empty();\n    displayWindow.append(/** @type {?} */ (compiled));\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '=?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * Url to redirect to after login success.\n   * @type {?string}\n   */\n  this.loginRedirectUrl = null;\n\n  /**\n   * Information message for the login form.\n   * @type {?string}\n   */\n  this.loginInfoMessage = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.userMustChangeItsPassword = false;\n\n  $scope.$on('authenticationrequired', (event, args) => {\n    /** @type {angularGettext.Catalog} */\n    const gettextCatalog = $injector.get('gettextCatalog');\n    this.loginInfoMessage = gettextCatalog.getString(\n      'Some layers in this link are not accessible to unauthenticated users. ' +\n      'Please log in to see whole data.');\n    this.loginRedirectUrl = args.url;\n    this.loginActive = true;\n\n    const unbind = $scope.$watch(() => this.loginActive, () => {\n      if (!this.loginActive) {\n        this.loginInfoMessage = null;\n        this.loginRedirectUrl = null;\n        unbind();\n      }\n    });\n  });\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    if (this.loginRedirectUrl) {\n      window.location = this.loginRedirectUrl;\n      return;\n    }\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    const functionalities = this.gmfUser.functionalities;\n\n    // Enable filter tool in toolbar\n    if (functionalities &&\n        'filterable_layers' in functionalities &&\n        functionalities['filterable_layers'].length > 0) {\n      this.filterSelectorEnabled = true;\n    }\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n\n    // Reload themes and background layer when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n\n    if (evt.type !== 'ready') {\n      const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n      this.gmfThemeManager.updateCurrentTheme(themeName, previousThemeName);\n    }\n    this.setDefaultBackground_(null);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorEnabled = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n  $scope.$watch(\n    () => this.gmfUser.is_password_changed,\n    (value) => {\n      this.userMustChangeItsPassword = value === false;\n    }\n  );\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {gmfx.User} gmfUser User.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation, gmfUser) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = gmfPermalinkOptions.pointRecenterZoom;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  /**\n   * @type {gmfx.User}\n   * @private\n   */\n  this.user_ = gmfUser;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleIcon({\n        src: require('gmf/permalink/crosshair.svg')\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  const geom = typeof oeFeature !== 'undefined' && oeFeature !== null ? oeFeature.getGeometry() : undefined;\n  if (geom) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    let maxZoom;\n    if (geom instanceof olGeomPoint || geom instanceof olGeomMultiPoint) {\n      maxZoom = this.pointRecenterZoom_;\n    }\n    view.fit(geom.getExtent(), {\n      size,\n      maxZoom\n    });\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  const initialUri = window.location.href;\n  let authenticationRequired = false;\n\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        } else {\n          authenticationRequired = true;\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        if (authenticationRequired && this.user_.role_id === null) {\n          this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n        }\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers == '' ? [] : groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                if (enable) {\n                  groupLayersArray.splice(groupLayersArray.indexOf(treeCtrl.node.name), 1);\n                }\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n            if (groupLayersArray.length > 0) {\n              authenticationRequired = true;\n            }\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n\n      if (authenticationRequired && this.user_.role_id === null) {\n        this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n      }\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @param {angular.$injector} $injector Angular injector service.\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster, $injector) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.gmfContextualdataOptions_ = $injector.has('gmfContextualdataOptions') ?\n    $injector.get('gmfContextualdataOptions') : {};\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate, this.gmfContextualdataOptions_.rasterParams).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\"\n *         gmf-editfeatureselector-tree=\"ctrl.selectedEditableTreeCtrl\"\n *         gmf-editfeatureselector-closeaftersave=\"::true\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeatureselector-tree The\n *     layertree controller handling the selectable editable layers list.\n * @htmlAttribute {boolean} gmf-editfeatureselector-closeaftersave If true,\n *     immediately return to the main edit panel after save. Default is false.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector',\n      'selectedEditableTreeCtrl': '=?gmfEditfeatureselectorTree',\n      'closeAfterSave': '=?gmfEditfeatureselectorCloseaftersave'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.closeAfterSave;\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    const styleFunction = originalFeature.getStyleFunction() || layer.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(layer, originalFeature, resolution);\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = new URL(imageStyle.getSrc(), window.location.href).href;\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @protected\n   */\n  this.vectorEncoder = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  this.vectorEncoder.encodeVectorLayer(arr, layer, resolution);\n};\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer, url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer The layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, layer, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    /** @type {Object} */ (url_url.searchParams).forEach((value, key) => {\n      customParams[key] = value;\n    });\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: this.getOpacityOrInherited_(layer),\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: this.getOpacityOrInherited_(layer),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer, source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n/**\n * Return an opacity value for the specified layer.\n * @param {ol.layer.Base} layer Layer.\n * @returns {number} opacity Opacity value.\n * @private\n */\nexports.prototype.getOpacityOrInherited_ = function(layer) {\n  if (layer.get('inheritedOpacity') !== undefined) {\n    return layer.get('inheritedOpacity');\n  }\n  return layer.getOpacity();\n};\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.hasError = false;\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file, (success) => {\n      if (!success) {\n        this.hasError = true;\n      }\n    });\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return ele !== null ? `${Math.round(ele)} m` : '';\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        // Get min/max values (extent) of each lines.\n        for (const name in linesConfiguration) {\n          const extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          // only include defined extent\n          if (extent.every(Number.isFinite)) {\n            elevationsValues = elevationsValues.concat(extent);\n          }\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)))\n          .defined(d => linesConfiguration[name].zExtractor(d) !== null);\n\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      if (Number.isFinite(elevation)) {\n        elevations.push(elevation);\n        elevationsRef[lineName] = elevation;\n        g.select(`.y.grid-hover.${lineName}`)\n          .style('display', 'inline')\n          .select('line')\n          .attr('x1', x(0))\n          .attr('y1', y(elevation))\n          .attr('x2', width)\n          .attr('y2', y(elevation));\n      } else {\n        // no data for this line: hide it\n        g.select(`.y.grid-hover.${lineName}`)\n          .style('display', 'none');\n      }\n    }\n\n    const y2 = y(Math.max.apply(null, elevations));\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', Number.isFinite(y2) ? y2 : 0);\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      const text = elevations[0] === null ? 'no value' : formatter.yhover(elevations[0], 'm');\n      g.select('.y.grid-hover text')\n        .text(text)\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef, yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return [`translate(${x(pe.dist(d))},${y(pe.z(d)) - 10})`];\n        } else {\n          return [`translate(${x(pe.dist(d))},${y(pe.z(d)) - 20}) rotate(${poiLabelAngle})`];\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl : 'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits, elevationsRef, yUnits) {\n  // Update information point.\n  const coordinate = [point.x, point.y];\n\n  this.currentPoint.elevations = elevationsRef;\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A text formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const separator = '&nbsp;: ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  const value = number(this.currentPoint.distance, DistDecimal);\n  innerHTML.push(`${this.profileLabels_.xAxis} ${separator} ${value}&nbsp;${this.currentPoint.xUnits}`);\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = gettextCatalog.getString(elevationName);\n    const int_value = this.currentPoint.elevations[elevationName];\n    const value = int_value === null ?\n      gettextCatalog.getString('no value') :\n      `${number(int_value, 0)}&nbsp;${this.currentPoint.yUnits}`;\n    innerHTML.push(`${translatedElevationName} ${separator} ${value}`);\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the styler value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {object} The object representation of the style.\n * @export\n */\nexports.Controller_.prototype.getStyle = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return {};\n  }\n  return {\n    'color': lineConfiguration.color || '#F00'\n  };\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values'] && item['values'][layerName]) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return null;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-layersconfig=\"::mainCtrl.elevationLayersConfig\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue}}\n *      </span>\n *\n *  For value in meter `elevationLayersConfig` can be an empty object, complex example:\n *\n *      elevationLayersConfig = {\n *          '<layer>': {\n *              'filter': 'ngeoUnitPrefix',\n *              'args': ['m²', 'square'],\n *              'postfix': '<notice>',\n *              'separator': ''\n *          }\n *      };\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {Object.<string, gmf.raster.component.LayerConfig>} gmf-elevation-layersconfig Elevation layer configurations.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'layersconfig': '=gmfElevationLayersconfig',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {!gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, $filter, ngeoDebounce, gmfRaster, gettextCatalog) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {!Object.<string, gmf.raster.component.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  const value = resp[this.layer];\n  if (value !== undefined && value !== null) {\n    const options = this.layersconfig[this.layer] || {};\n    const filter = options.filter || 'number';\n    const custom_args = options.args || [];\n    const postfix = options.hasOwnProperty('postfix') ? options.postfix : 'm';\n    const separator = postfix.length > 0 ?\n      (options.hasOwnProperty('separator') ? options.separator : '\\u00a0') : '';\n    const args = Array.prototype.concat([value], custom_args);\n    this.elevation = this.filter_(filter)(...args) + separator + postfix;\n  } else {\n    const gettextCatalog = this.gettextCatalog;\n    this.elevation = gettextCatalog.getString('No value');\n  }\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-layersconfig=\"::mainCtrl.elevationLayersConfig\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'layersconfig': '=gmfElevationwidgetLayersconfig',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {!Object.<string, gmf.raster.component.LayerConfig>}\n   * @private\n   */\n  this.layersconfig;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController', exports.WidgetController_);\n\n/**\n * @typedef {{\n *     filter: (string|undefined),\n *     args: (Array.<string>|undefined),\n *     postfix: (string|undefined),\n *     separator: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n/**\n * @typedef {{\n *     useBbox: (boolean|undefined),\n *     label: (Object.<string, boolean>),\n *     params: (Object.<string, Object.<string, string>>)\n * }}\n */\nexports.optionsLegendType;\n\n/**\n * @typedef {{\n *     scaleInput: (boolean|undefined),\n *     legend: (optionsLegendType|undefined)\n * }}\n */\nexports.optionsType;\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    /**\n     * @type optionsLegendType\n     * @private\n     */\n    this.gmfLegendOptions_ = {\n      useBbox: true,\n      label: {},\n      params: {},\n    };\n\n    if ($injector.has('gmfPrintOptions')) {\n      /**\n       * @type optionsType\n       */\n      const options = $injector.get('gmfPrintOptions');\n      if (options.scaleInput) {\n        this.scaleInput = options.scaleInput;\n      }\n      if (options.legend) {\n        Object.assign(this.gmfLegendOptions_, options.legend);\n      }\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n    // Workaround for IE11\n    this.rotationInput_.on('change', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n\n    olEvents.listen(this.map.getView(), 'change:rotation', (event) => {\n      this.updateRotation_(Math.round(olMath.toDegrees(event.target.getRotation())));\n    });\n\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    this.layoutInfo.legend = this.fieldValues['legend'] !== false;\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    if (!this.layoutInfo.attributes) {\n      this.layoutInfo.attributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      this.layoutInfo.attributes.push(attribute.name);\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.updateRotation_(rotation);\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n  /**\n   * Set the current rotation value.\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  updateRotation_(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n  }\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {};\n\n    if (this.layoutInfo.attributes.indexOf('datasource') >= 0) {\n      customAttributes['datasource'] = datasource;\n    }\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const center = this.map.getView().getCenter();\n      const deltaX = this.paperSize_[0] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const deltaY = this.paperSize_[1] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const bbox = [\n        center[0] - deltaX,\n        center[1] - deltaY,\n        center[0] + deltaX,\n        center[1] + deltaY,\n      ];\n      const legend = this.getLegend_(scale, this.layoutInfo.dpi, bbox);\n      if (legend !== null) {\n        customAttributes['legend'] = legend;\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              {opacity: ol_layers.opacity}\n            );\n            layer.setZIndex(-200);\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @param {number} dpi The DPI.\n   * @param {Array.number} bbox The bbox.\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale, dpi, bbox) {\n    const legend = {'classes': []};\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      const classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          const layerName = `${layer.get('layerNodeName')}`;\n          let icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          const layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            let icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale, undefined, undefined, undefined, source.serverType_, dpi,\n                this.gmfLegendOptions_.useBbox ? bbox : undefined,\n                this.map.getView().getProjection().getCode(),\n                this.gmfLegendOptions_.params[layer.getSource().serverType_]\n              );\n            }\n            const type = icons ? 'image' : source.serverType_;\n\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push(Object.assign({\n                'name': this.gmfLegendOptions_.label[type] === false ? '' :\n                  gettextCatalog.getString(name),\n                'icons': [icons]\n              }, type === 'qgis' ? {\n                'dpi': dpi,\n              } : {}));\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport 'jquery-ui-touch-punch';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.coordinate\n */\nconst exports = {};\n\n\n/**\n * Convert a given coordinate or list of coordinates of any 'nesting' level\n * to XY, i.e. remove any extra dimensions to the coordinates and keep only 2.\n *\n * @param {Array.<ol.Coordinate>|ol.Coordinate} coordinates Coordinates\n * @param {number} nesting Nesting level.\n * @return {Array.<ol.Coordinate>|ol.Coordinate} Converted coordinates.\n */\nexports.toXY = function(coordinates, nesting) {\n  if (nesting === 0) {\n    if (coordinates.length > 2) {\n      coordinates = [coordinates[0], coordinates[1]];\n    }\n  } else {\n    for (let i = 0, ii = coordinates.length; i < ii; i++) {\n      coordinates[i] = exports.toXY(coordinates[i], nesting - 1);\n    }\n  }\n  return coordinates;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.geom\n */\nconst exports = {};\nimport gmfObjecteditingCoordinate from 'gmf/objectediting/coordinate.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\n\n\n/**\n * Determines whether a given geometry is empty or not. A null or undefined\n * value can be given for convenience, i.e. when using methods than can\n * return a geometry or not, for example:\n * `gmf.objectediting.geom.isEmpty(feature.getGeometry())`.\n *\n * @param {?ol.geom.Geometry|undefined} geom Geometry.\n * @return {boolean} Whether the given geometry is empty or not. A null or\n *     undefined geometry is considered empty.\n */\nexports.isEmpty = function(geom) {\n  let isEmpty = true;\n  if (geom && geom instanceof olGeomSimpleGeometry) {\n    isEmpty = geom.getFlatCoordinates().length === 0;\n  }\n  return isEmpty;\n};\n\n\n/**\n * Convert all coordinates within a geometry object to XY, i.e. remove any\n * extra dimension other than X and Y to the coordinates of a geometry.\n *\n * @param {ol.geom.Geometry} geom Geometry\n */\nexports.toXY = function(geom) {\n  if (geom instanceof olGeomPoint) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 0)\n    );\n  } else if (geom instanceof olGeomMultiPoint ||\n             geom instanceof olGeomLineString\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 1)\n    );\n  } else if (geom instanceof olGeomMultiLineString ||\n             geom instanceof olGeomPolygon\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 2)\n    );\n  } else if (geom instanceof olGeomMultiPolygon) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 3)\n    );\n  } else {\n    throw 'gmf.objectediting.geom.toXY - unsupported geometry type';\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Query\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n/**\n * A service that collects all queryable layer nodes from all themes, stores\n * them and use them to make WMS GetFeatureInfo queries. Queries can be made\n * regardless of the associated layer visibility. The layer nodes are also\n * loaded only once.\n *\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($http, $q, gmfThemes) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {?angular.$q.Deferred}\n   * @private\n   */\n  this.getQueryableLayerNodesDefered_ = null;\n\n};\n\n\n/**\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getQueryableLayersInfo = function() {\n\n  if (!this.getQueryableLayerNodesDefered_) {\n    this.getQueryableLayerNodesDefered_ = this.q_.defer();\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      this.gmfThemes_.getThemesObject().then((themes) => {\n        if (!themes) {\n          return;\n        }\n\n        // Get all queryable nodes\n        const allQueryableLayersInfo =\n            exports.getQueryableLayersInfoFromThemes(\n              themes,\n              ogcServers\n            );\n\n        // Narrow down to only those that have the 'copyable' metadata set\n        const queryableLayersInfo = [];\n        for (let i = 0, ii = allQueryableLayersInfo.length; i < ii; i++) {\n          if (allQueryableLayersInfo[i].layerNode.metadata.copyable) {\n            queryableLayersInfo.push(allQueryableLayersInfo[i]);\n          }\n        }\n\n        this.getQueryableLayerNodesDefered_.resolve(queryableLayersInfo);\n      });\n    });\n  }\n\n  return this.getQueryableLayerNodesDefered_.promise;\n\n};\n\n\n/**\n * From a list of theme nodes, collect all WMS layer nodes that are queryable.\n * A list of OGC servers is given in order to bind each queryable layer node\n * to its associated server and be able to build requests.\n *\n * @param {Array.<gmfThemes.GmfTheme>} themes List of theme nodes.\n * @param {gmfThemes.GmfOgcServers} ogcServers List of ogc servers\n * @return {Array.<gmfx.ObjectEditingQueryableLayerInfo>} List of\n *     queryable layers information.\n * @export\n */\nexports.getQueryableLayersInfoFromThemes = function(\n  themes, ogcServers\n) {\n  const queryableLayersInfo = [];\n  let theme;\n  let group;\n  let nodes;\n  let node;\n\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    theme = /** @type {gmfThemes.GmfTheme} */ (themes[i]);\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      group = /** @type {gmfThemes.GmfGroup} */ (theme.children[j]);\n\n      // Skip groups that don't have an ogcServer set\n      if (!group.ogcServer) {\n        continue;\n      }\n\n      nodes = [];\n      gmfThemeThemes.getFlatNodes(group, nodes);\n\n      for (let k = 0, kk = nodes.length; k < kk; k++) {\n        node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayerWMS} */ (\n          nodes[k]);\n\n        // Skip groups within groups\n        if (node.children && node.children.length) {\n          continue;\n        }\n\n        if (node.childLayers &&\n          node.childLayers[0] &&\n          node.childLayers[0].queryable\n        ) {\n          queryableLayersInfo.push({\n            layerNode: node,\n            ogcServer: ogcServers[group.ogcServer]\n          });\n        }\n      }\n    }\n  }\n\n  return queryableLayersInfo;\n};\n\n\n/**\n * From a queryable layer (WMS layer node), use its associated OGC server\n * to issue a single WMS GetFeatureInfo request at a specific location on a\n * specific map to fetch a single feature. If no feature is found, a `null`\n * value is returned.\n *\n * @param {gmfx.ObjectEditingQueryableLayerInfo} layerInfo Queryable layer\n *     information.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Map} map Map.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeatureInfo = function(layerInfo, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n  const infoFormat = ngeoDatasourceOGC.WMSInfoFormat.GML;\n  const layerNode = layerInfo.layerNode;\n  const layersParam = layerNode.layers.split(',');\n  const ogcServer = layerInfo.ogcServer;\n\n  const format = new olFormatWMSGetFeatureInfo({\n    layers: layersParam\n  });\n\n  const wmsSource = new olSourceImageWMS({\n    url: ogcServer.url,\n    params: {\n      layers: layersParam\n    }\n  });\n\n  const url = /** @type {string} */ (\n    wmsSource.getGetFeatureInfoUrl(coordinate, resolution, projCode, {\n      'INFO_FORMAT': infoFormat,\n      'FEATURE_COUNT': 1,\n      'QUERY_LAYERS': layersParam\n    })\n  );\n\n  return this.http_.get(url).then(\n    (response) => {\n      const features = format.readFeatures(response.data);\n      return (features && features[0]) ? features[0] : null;\n    }\n  );\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingQuery', [\n  gmfThemeThemes.module.name,\n]);\nexports.module.service('gmfObjectEditingQuery', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.getWMSFeatureComponent\n */\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingGetWMSFeatureComponent', [\n  gmfObjecteditingQuery.module.name,\n]);\n\n\n/**\n * When activated, this directive registers clicks on an OL3 map and use the\n * clicked coordinate to fetch a feature using the ObjectEditing query service.\n * A feature returned is pushed to a collection.\n *\n * Example:\n *\n *     <gmf-objecteditinggetwmsfeature\n *         gmf-objecteditinggetwmsfeature-active=\"ctrl.active\"\n *         gmf-objecteditinggetwmsfeature-features=\"ctrl.features\"\n *         gmf-objecteditinggetwmsfeature-layerinfo=\"ctrl.layerInfo\"\n *         gmf-objecteditinggetwmsfeature-map=\"::ctrl.map\">\n *     </gmf-objecteditinggetwmsfeature>\n *\n * @htmlAttribute {boolean} gmf-objecteditinggetwmsfeature-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Collection} gmf-objecteditinggetwmsfeature-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objecteditinggetwmsfeature-layerinfo Queryable layer info.\n * @htmlAttribute {ol.Map} gmf-objecteditinggetwmsfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditinggetwmsfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'gmfObjecteditinggetwmsfeatureController',\n    scope: {\n      'active': '=gmfObjecteditinggetwmsfeatureActive',\n      'features': '<gmfObjecteditinggetwmsfeatureFeatures',\n      'layerInfo': '=gmfObjecteditinggetwmsfeatureLayerinfo',\n      'map': '<gmfObjecteditinggetwmsfeatureMap'\n    },\n    bindToController: true\n  };\n};\n\nexports.directive('gmfObjecteditinggetwmsfeature',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.objectediting.Query} gmfObjectEditingQuery GMF ObjectEditing\n *     query service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditinggetwmsfeatureController\n */\nexports.Controller_ = function($scope,\n  gmfObjectEditingQuery) {\n\n  // Scope properties\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.layerInfo;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n\n  // Injected properties\n\n  /**\n   * @type {gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n};\n\n\n/**\n * @param {boolean} active Active.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (active) {\n    olEvents.listen(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  } else {\n    olEvents.unlisten(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  this.gmfObjectEditingQuery_.getFeatureInfo(\n    this.layerInfo,\n    evt.coordinate,\n    this.map\n  ).then((feature) => {\n    if (feature) {\n      this.features.push(feature);\n    }\n  });\n};\n\nexports.controller('gmfObjecteditinggetwmsfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawRegularPolygonFromClick\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\n\n/**\n * @classdesc\n * This interactions allows drawing regular polygons of a pre-determined number\n * of sides and size a a clicked location on the map.\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.DrawRegularPolygonFromClickOptions} options Options\n */\nconst exports = function(options) {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.radius_ = options.radius;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sides_ = options.sides !== undefined ? options.sides : 3;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(\n  exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n\n  if (this.getMap()) {\n    if (active) {\n      this.enable_();\n    } else {\n      this.disable_();\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const active = this.getActive();\n\n  const currentMap = this.getMap();\n  if (currentMap && active) {\n    this.disable_();\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map && active) {\n    this.enable_();\n  }\n\n};\n\n\n/**\n * Enable the interaction. Called when added to a map AND active.\n * @private\n */\nexports.prototype.enable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.push(\n    olEvents.listen(map, 'click', this.handleMapClick_, this)\n  );\n};\n\n\n/**\n * Disable the interaction. Called when removed from a map or deactivated.\n * @private\n */\nexports.prototype.disable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\n/**\n * Called the the map is clicked. Create a regular polygon at the clicked\n * location using the configuration\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @private\n */\nexports.prototype.handleMapClick_ = function(evt) {\n  const center = evt.coordinate;\n  const geometry = olGeomPolygon.fromCircle(\n    new olGeomCircle(center), this.sides_\n  );\n\n  olGeomPolygon.makeRegular(geometry, center, this.radius_, this.angle_);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: new olFeature(geometry)});\n  this.dispatchEvent(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createregularpolygonfromclickComponent\n */\nimport ngeoInteractionDrawRegularPolygonFromClick from 'ngeo/interaction/DrawRegularPolygonFromClick.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\n\nconst exports = angular.module('ngeoCreateregularpolygonfromclick', [\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createregularpolygonfromclick\n *       ngeo-createregularpolygonfromclick-active=\"ctrl.active\"\n *       ngeo-createregularpolygonfromclick-angle=\"::ctrl.angle\"\n *       ngeo-createregularpolygonfromclick-features=\"ctrl.features\"\n *       ngeo-createregularpolygonfromclick-map=\"::ctrl.map\"\n *       ngeo-createregularpolygonfromclick-radius=\"::ctrl.radius\"\n *       ngeo-createregularpolygonfromclick-sides=\"::ctrl.sides\"\n *       class=\"btn btn-default ngeo-createregularpolygonfromclick\"\n *       ng-class=\"{active: ctrl.active}\"\n *       ng-model=\"ctrl.active\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createregularpolygonfromclick-active Whether\n *     the directive is active or not.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-angle\n *     Angle in radians. A value of 0 will have one of the shape's point\n *     facing up. Default value is 0.\n * @htmlAttribute {ol.Collection} ngeo-createregularpolygonfromclick-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {ol.Map} ngeo-createregularpolygonfromclick-map The map.\n * @htmlAttribute {number} ngeo-createregularpolygonfromclick-radius Radius\n *     size in map units.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-sides\n *     The number of sides for the regular polygon. Default value is 3.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreateregularpolygonfromclick\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreateregularpolygonfromclickController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreateregularpolygonfromclickActive',\n      'angle': '<?ngeoCreateregularpolygonfromclickAngle',\n      'features': '=ngeoCreateregularpolygonfromclickFeatures',\n      'map': '=ngeoCreateregularpolygonfromclickMap',\n      'radius': '<ngeoCreateregularpolygonfromclickRadius',\n      'sides': '<?ngeoCreateregularpolygonfromclickSides'\n    }\n  };\n};\n\nexports.directive(\n  'ngeoCreateregularpolygonfromclick',\n  exports.directive_\n);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreateregularpolygonfromclickController\n */\nexports.Controller_ = function($scope) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.angle;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.sides;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {ngeo.interaction.DrawRegularPolygonFromClick}\n   * @private\n   */\n  this.interaction_;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.interactionListenerKey_;\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n\n  this.interaction_ = new ngeoInteractionDrawRegularPolygonFromClick({\n    angle: this.angle,\n    radius: this.radius,\n    sides: this.sides\n  });\n  this.interaction_.setActive(this.active);\n\n  this.interactionListenerKey_ = olEvents.listen(\n    this.interaction_,\n    'drawend',\n    this.handleDrawEnd_,\n    this\n  );\n\n  this.map.addInteraction(this.interaction_);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(evt) {\n  const feature = new olFeature(evt.feature.getGeometry());\n  this.features.push(feature);\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  olEvents.unlistenByKey(this.interactionListenerKey_);\n  this.interaction_.setActive(false);\n  this.map.removeInteraction(this.interaction_);\n};\n\n\nexports.controller(\n  'ngeoCreateregularpolygonfromclickController',\n  exports.Controller_\n);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.toolsComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreateregularpolygonfromclickComponent from 'ngeo/editing/createregularpolygonfromclickComponent.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingToolsComponent', [\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoEditingCreateregularpolygonfromclickComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting/toolsComponent', require('./toolsComponent.html'));\n});\n\n\n/**\n * A list of additional options for this directive that are not defined as\n * html attributes. All keys of this hash are optional. For the complete list\n * of keys and their possible values, see in gmfx.js, under:\n * `gmfx.ObjectEditingToolsOptions`.\n */\nexports.value('gmfObjectEditingToolsOptions', {});\n\n\n/**\n * Directive used to edit the geometry of a single feature using advanced\n * tools.\n *\n * Example:\n *\n *     <gmf-objecteditingtools\n *         gmf-objecteditingtools-active=\"ctrl.objectEditingActive\"\n *         gmf-objecteditingtools-copyfromactive=\"ctrl.objectEditingCopyFromActive\"\n *         gmf-objecteditingtools-deletefromactive=\"ctrl.objectEditingDeleteFromActive\"\n *         gmf-objecteditingtools-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objecteditingtools-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objecteditingtools-map=\"::ctrl.map\"\n *         gmf-objecteditingtools-process=\"::ctrl.process\"\n *         gmf-objecteditingtools-queryablelayerinfo=\"::ctrl.queryableLayerInfo\"\n *         gmf-objecteditingtools-requireslayer=\"ctrl.requiresLayer\"\n *         gmf-objecteditingtools-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objecteditingtools>\n *\n * @htmlAttribute {boolean} gmf-objecteditingtools-active Whether the\n *     directive is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-copyfromactive Whether the\n *     'Copy from' tool is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-deletefromactive Whether the\n *     'Delete from' tool is active or not.\n * @htmlAttribute {ol.Feature} gmf-objecteditingtools-feature The feature to\n *     edit.\n * @htmlAttribute {string} gmf-objecteditingtools-geomtype The geometry type.\n * @htmlAttribute {ol.Map} gmf-objecteditingtools-map The map.\n * @htmlAttribute {string} gmf-objectediting-process Determines the\n *     behavior to adopt when sketch features are added.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objectediting-queryablelayerinfo\n *     Queryable layer information.\n * @htmlAttribute {boolean} gmf-objectediting-requireslayer Flag that determines\n *     if the currently active tool requires a queryable layer or not.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditingtools\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfObjecteditingtoolsController as oetCtrl',\n    scope: {\n      'active': '=gmfObjecteditingtoolsActive',\n      'copyFromActive': '=gmfObjecteditingtoolsCopyfromactive',\n      'deleteFromActive': '=gmfObjecteditingtoolsDeletefromactive',\n      'feature': '<gmfObjecteditingtoolsFeature',\n      'geomType': '<gmfObjecteditingtoolsGeomtype',\n      'map': '<gmfObjecteditingtoolsMap',\n      'process': '=gmfObjecteditingtoolsProcess',\n      'queryableLayerInfo': '=gmfObjecteditingtoolsQueryablelayerinfo',\n      'requiresLayer': '=gmfObjecteditingtoolsRequireslayer',\n      'sketchFeatures': '<gmfObjecteditingtoolsSketchfeatures'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/objectediting/toolsComponent'\n  };\n};\n\nexports.directive('gmfObjecteditingtools',\n  exports.directive_);\n\n\n/**\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingtoolsController\n */\nexports.Controller_ = function($injector, $scope, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.queryableLayerInfo;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.requiresLayer;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  // == Other properties ==\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomTypePolygon = ngeoGeometryType.POLYGON;\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.toolActiveNames_ = [];\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  this.registerTool_('drawActive',\n    exports.ProcessType.ADD);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.eraseActive = false;\n\n  this.registerTool_('eraseActive',\n    exports.ProcessType.DELETE);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawTriangleActive = false;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleAngle = Math.PI / 180 * 90; // 90 degrees\n\n  const oeToolsOptions = /** @type {gmfx.ObjectEditingToolsOptions} */ (\n    $injector.get('gmfObjectEditingToolsOptions'));\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleRadius = oeToolsOptions.regularPolygonRadius !== undefined ?\n    oeToolsOptions.regularPolygonRadius : 100;\n\n  this.registerTool_('drawTriangleActive',\n    exports.ProcessType.ADD);\n\n  this.registerTool_('copyFromActive',\n    exports.ProcessType.ADD, true);\n\n  this.registerTool_('deleteFromActive',\n    exports.ProcessType.DELETE, true);\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.scope_.$watch(\n    () => this.active,\n    (newVal, oldVal) => {\n      // if it's not active, deactive tools\n      if (!this.active) {\n        this.requiresLayer = false;\n        for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n          this[this.toolActiveNames_[i]] = false;\n        }\n      }\n    }\n  );\n};\n\n\n/**\n * Register a tool using its `active` property name and what behavior it should\n * have when it is active and a sketch feature is added\n *\n * This method:\n *  - registers a watcher on the tool active property to manage this directive\n *    main active property, i.e the directive is considered active when one\n *    of the tools is active,  otherwise it's not active.\n *\n *  - creates a `ngeo.misc.ToolActivate` object and registers it in a group so\n *    that only one tool can be active at a time\n *\n * @param {string} toolActiveName The name of the active property for the tool.\n * @param {string} process The behavior the tool should use when active\n *     and when sketch features are added.\n * @param {boolean=} opt_requiresLayer Whether the tool requires the queryable\n *     layer or not. Defaults to `false`.\n * @private\n */\nexports.Controller_.prototype.registerTool_ = function(\n  toolActiveName, process, opt_requiresLayer\n) {\n\n  const requiresLayer = opt_requiresLayer === true;\n\n  this.scope_.$watch(\n    () => this[toolActiveName],\n    this.handleToolActiveChange_.bind(this, process, requiresLayer)\n  );\n\n  const group = `${exports.Controller_.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolActivate = new ngeoMiscToolActivate(this, toolActiveName);\n  this.ngeoToolActivateMgr_.registerTool(group, toolActivate, false);\n\n  this.toolActiveNames_.push(toolActiveName);\n\n};\n\n\n/**\n * Called when any of the tool 'active' property changes.\n * @param {string} process The behavior the tool should use when active.\n * @param {boolean} requiresLayer Whether the tool requires the queryable\n *     layer or not.\n * @param {boolean|undefined} newVal New value.\n * @private\n */\nexports.Controller_.prototype.handleToolActiveChange_ = function(\n  process, requiresLayer, newVal\n) {\n\n  // Update process if a tool was activated.\n  if (newVal) {\n    this.process = process;\n    this.requiresLayer = requiresLayer;\n  }\n\n  // If one tool is active, update active property to true.\n  let active = false;\n  for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n    active = this[this.toolActiveNames_[i]];\n    if (active) {\n      break;\n    }\n  }\n  this.active = active;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {};\n\n\nexports.controller('GmfObjecteditingtoolsController',\n  exports.Controller_);\n\n\n/**\n * @const\n * @private\n */\nexports.Controller_.NAMESPACE_ = 'oet';\n\n\n/**\n * @enum {string}\n */\nexports.ProcessType = {\n  ADD: 'add',\n  DELETE: 'delete'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.component\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfObjecteditingGeom from 'gmf/objectediting/geom.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\n\n\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport Point from 'ol/geom/Point.js';\nimport LineString from 'ol/geom/LineString.js';\nimport LinearRing from 'ol/geom/LinearRing.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport MultiPoint from 'ol/geom/MultiPoint.js';\nimport MultiLineString from 'ol/geom/MultiLineString.js';\nimport MultiPolygon from 'ol/geom/MultiPolygon.js';\nimport GeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport OL3Parser from 'jsts/io/OL3Parser.js';\nimport 'jsts/monkey.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjectEditingComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/objectediting', require('./component.html'));\n});\n\n\nexports.value('gmfObjecteditingTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfObjecteditingTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/objectediting';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfObjecteditingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfObjecteditingTemplateUrl($element, $attrs, gmfObjecteditingTemplateUrl) {\n  return gmfObjecteditingTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Component used to edit the geometry of a single feature using advanced\n * tools. The geometry must be Multi.\n *\n * Example:\n *\n *     <gmf-objectediting\n *         gmf-objectediting-active=\"ctrl.objectEditingActive\"\n *         gmf-objectediting-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objectediting-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objectediting-layernodeid=\"ctrl.objectEditingLayerNodeId\"\n *         gmf-objectediting-map=\"::ctrl.map\"\n *         gmf-objectediting-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objectediting>\n *\n * @htmlAttribute {boolean} gmf-objectediting-active Whether the component is\n *     active or not.\n * @htmlAttribute {ol.Feature} gmf-objectediting-feature The feature to edit.\n * @htmlAttribute {string} gmf-objectediting-geomtype The geometry type.\n * @htmlAttribute {number} gmf-objectediting-layernodeid The GMF layer node id.\n * @htmlAttribute {ol.Map} gmf-objectediting-map The map.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @ngdoc component\n * @ngname gmfObjectediting\n */\nexports.component_ = {\n  controller: 'GmfObjecteditingController as oeCtrl',\n  bindings: {\n    'active': '=gmfObjecteditingActive',\n    'feature': '<gmfObjecteditingFeature',\n    'geomType': '<gmfObjecteditingGeomtype',\n    'layerNodeId': '<gmfObjecteditingLayernodeid',\n    'map': '<gmfObjecteditingMap',\n    'sketchFeatures': '<gmfObjecteditingSketchfeatures'\n  },\n  templateUrl: gmfObjecteditingTemplateUrl\n};\n\nexports.component('gmfObjectediting', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {!gmf.objectediting.Query} gmfObjectEditingQuery Gmf ObjectEditing\n *     query service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\ngoog.require('ngeo.map.LayerHelper');\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingController\n */\nexports.Controller = function($scope, $timeout, gettextCatalog,\n  gmfEditFeature, gmfObjectEditingQuery, gmfTreeManager,\n  ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.layerNodeId;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {!gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n  /**\n   * @type {Array.<!gmfx.ObjectEditingQueryableLayerInfo>}\n   * @export\n   */\n  this.queryableLayersInfo;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.selectedQueryableLayerInfo;\n\n  /**\n   * Whether to show or hide the queryable list of layers. It is shown only\n   * when a tool requires it, which is managed in the `gmf-objecteditingtools`\n   * component.\n   * @type {boolean}\n   * @export\n   */\n  this.queryableLayerListShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.featureHasGeom;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.skipGeometryChange_ = false;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process = gmfObjecteditingToolsComponent.ProcessType.ADD;\n\n  /**\n   * @type {?ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_ = null;\n\n  /**\n   * @type {!jsts.io.OL3Parser}\n   * @private\n   */\n  this.jstsOL3Parser_ = new OL3Parser(undefined, {\n    geom: {\n      Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection\n    }\n  });\n\n  /**\n   * The state of the feature determines whether the next 'save' request\n   * should be an 'insert' or 'update' one.\n   * @type {string|undefined}\n   * @private\n   */\n  this.state_;\n\n  /**\n   * @type {!Array.<?ol.geom.Geometry>}\n   * @private\n   */\n  this.geometryChanges_ = [];\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStylesWoVertice_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStylesWoVertice_ = {};\n\n  /**\n   * Flag that is toggled while a request is pending.\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ol.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features_,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.modifyToolActivate_ = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.toolsToolActivate_ = new ngeoMiscToolActivate(this, 'toolsActive');\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.gmfObjectEditingQuery_.getQueryableLayersInfo().then(\n    this.handleGetQueryableLayersInfo_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.active,\n    (newVal, oldVal) => {\n      if (newVal != oldVal) {\n        this.toggle_(newVal);\n      }\n    }\n  );\n\n  this.scope_.$watchCollection(\n    () => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    },\n    (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(\n            this.registerTreeCtrl_.bind(this)\n          );\n        }\n      });\n    }\n  );\n\n  const geometry = this.feature.getGeometry();\n  this.state_ = geometry ? exports.Controller.State.UPDATE :\n    exports.Controller.State.INSERT;\n\n  this.scope_.$watchCollection(\n    () => this.geometryChanges_,\n    (newVal, oldVal) => {\n      if (newVal.length) {\n        if (newVal.length === 1) {\n          this.dirty = false;\n        } else {\n          this.dirty = true;\n        }\n      }\n    }\n  );\n\n  const defaultColor = [39, 155, 145];\n  const dirtyColor = [153, 51, 51];\n  this.initializeStyles_(this.defaultStyles_, defaultColor);\n  this.initializeStyles_(this.defaultStylesWoVertice_, defaultColor, false);\n  this.initializeStyles_(this.dirtyStyles_, dirtyColor);\n  this.initializeStyles_(this.dirtyStylesWoVertice_, dirtyColor, false);\n\n  this.scope_.$watch(\n    () => this.dirty,\n    this.setFeatureStyle_.bind(this)\n  );\n\n  this.features_.push(this.feature);\n\n  this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geometry);\n\n  // Toggle on\n  this.initializeInteractions_();\n  this.toggle_(true);\n  this.resetGeometryChanges_();\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n// == API methods ==\n\n\n/**\n * Delete the feature after asking for a confirmation.\n * @export\n */\nexports.Controller.prototype.delete = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.dirty = false;\n    this.pending = true;\n\n    this.gmfEditFeature_.deleteFeature(\n      this.layerNodeId,\n      this.feature\n    ).then(\n      this.handleDeleteFeature_.bind(this)\n    );\n  }\n\n};\n\n\n/**\n * Save the current modifications.\n * @export\n */\nexports.Controller.prototype.save = function() {\n\n  this.pending = true;\n\n  // The geometry of the feature may contain Z in its coordinates, which\n  // GMF doesn't support.  This section ensures that the geometry gets purged\n  // of all Z from the coordinates before saving.\n  //\n  // Also, this is only done before saving on a clone of the feature. Doing\n  // it directly on the feature makes JSTS complain.\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    gmfObjecteditingGeom.toXY(geometry);\n  }\n\n  if (this.state_ === exports.Controller.State.INSERT) {\n    this.gmfEditFeature_.insertFeatures(\n      this.layerNodeId,\n      [feature]\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  } else if (this.state_ === exports.Controller.State.UPDATE) {\n    this.gmfEditFeature_.updateFeature(\n      this.layerNodeId,\n      feature\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  }\n};\n\n\n/**\n * Undo the latest modifications.\n * @export\n */\nexports.Controller.prototype.undo = function() {\n\n  if (this.geometryChanges_.length <= 1) {\n    return;\n  }\n\n  this.skipGeometryChange_ = true;\n\n  this.geometryChanges_.pop();\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[this.geometryChanges_.length - 1]);\n\n  this.feature.setGeometry(clone);\n\n  this.skipGeometryChange_ = false;\n};\n\n\n/**\n * @return {boolean} Whether the state is INSERT or not.\n * @export\n */\nexports.Controller.prototype.isStateInsert = function() {\n  return this.state_ === exports.Controller.State.INSERT;\n};\n\n\n// == Private methods ==\n\n\n/**\n * Called after a delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleDeleteFeature_ = function(resp) {\n  this.feature.setGeometry(null);\n  this.resetGeometryChanges_();\n  this.state_ = exports.Controller.State.INSERT;\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Called after an 'insert' or 'update' request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleEditFeature_ = function(resp) {\n  // (1) Update the id\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n  }\n  // (2) Reset geometry changes\n  this.resetGeometryChanges_();\n  // (3) Update state\n  if (this.feature.getGeometry()) {\n    this.state_ = exports.Controller.State.UPDATE;\n  } else {\n    this.state_ = exports.Controller.State.INSERT;\n  }\n  // (4) No longer pending\n  this.pending = false;\n  // (5) Refresh WMS layer\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. remove them from the map\n * @private\n */\nexports.Controller.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Activate or deactivate this component.\n * @param {boolean} active Whether to activate this component or not.\n * @private\n */\nexports.Controller.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const uid = `${exports.Controller.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    keys.push(\n      olEvents.listen(\n        this.feature,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'change:active',\n        this.setFeatureStyle_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'modifyend',\n        this.handleModifyInteractionModifyEnd_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        window,\n        'beforeunload',\n        this.handleWindowBeforeUnload_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.sketchFeatures,\n        'add',\n        this.handleSketchFeaturesAdd_,\n        this\n      )\n    );\n\n    toolMgr.registerTool(uid, this.modifyToolActivate_, true);\n    toolMgr.registerTool(uid, this.toolsToolActivate_, false);\n\n    this.registerInteractions_();\n\n  } else {\n\n    this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(uid, this.modifyToolActivate_);\n    toolMgr.unregisterTool(uid, this.toolsToolActivate_);\n\n  }\n\n  this.toolsActive = active;\n  this.modify_.setActive(active);\n};\n\n\n/**\n * Undo all current changes.\n * @private\n */\nexports.Controller.prototype.undoAllChanges_ = function() {\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[0]);\n  this.feature.setGeometry(clone);\n\n  this.resetGeometryChanges_();\n  this.dirty = false;\n  this.setFeatureStyle_();\n};\n\n\n/**\n * Reset the array of geometry changes.  If there are more than one changes,\n * reset them entirely. Then, if there's no changes, clone the current geometry\n * as the first entry. One entry means that there's no changes.\n * @private\n */\nexports.Controller.prototype.resetGeometryChanges_ = function() {\n  if (this.geometryChanges_.length > 1) {\n    this.geometryChanges_.length = 0;\n  }\n  if (this.geometryChanges_.length === 0) {\n    const geometry = this.feature.getGeometry();\n    const clone = exports.Controller.cloneGeometry_(geometry);\n    this.geometryChanges_.push(clone);\n  }\n};\n\n\n/**\n * Called after the modification interaction has completed modifying the\n * existing geometry. The new geometry is pushed in the changes array.\n * If the geometry type is `MultiPolygon`, we check if any of the inner\n * geometries intersects with one an other first. Those that does are merged\n * before being pushed to the changes.\n *\n * @param {ol.interaction.Modify.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleModifyInteractionModifyEnd_ = function(\n  evt\n) {\n  let geometry = this.feature.getGeometry();\n\n  if (geometry instanceof MultiPolygon) {\n    const jstsGeom = this.jstsOL3Parser_.read(geometry);\n    const jstsBuffered = jstsGeom.buffer(0);\n    geometry = ngeoUtils.toMulti(this.jstsOL3Parser_.write(jstsBuffered));\n    this.skipGeometryChange_ = true;\n    this.feature.setGeometry(geometry.clone());\n    this.skipGeometryChange_ = false;\n  }\n\n  const clone = exports.Controller.cloneGeometry_(geometry);\n  googAsserts.assert(clone);\n  this.geometryChanges_.push(clone);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {gmfx.StylesObject} styles Hash of style.\n * @param {ol.Color} color Color.\n * @param {boolean=} opt_incVertice Whether to include vertice or not. Defaults\n *     to `true`.\n * @private\n */\nexports.Controller.prototype.initializeStyles_ = function(\n  styles, color, opt_incVertice\n) {\n\n  const incVertice = opt_incVertice !== false;\n  const rgbaColor = color.slice();\n  rgbaColor.push(0.3);\n\n  const image = new olStyleCircle({\n    radius: 8,\n    stroke: new olStyleStroke({\n      color: color,\n      width: 1\n    }),\n    fill: new olStyleFill({color: rgbaColor})\n  });\n\n  styles['Point'] = new olStyleStyle({\n    image\n  });\n  styles['MultiPoint'] = new olStyleStyle({\n    image\n  });\n\n  styles['LineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['LineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiLineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiLineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n  styles['Polygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['Polygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiPolygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiPolygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n};\n\n\n/**\n * Set the style of the feature depending on:\n *  - the geometry type\n *  - the dirty state of the component\n *  - whether the modify control is active or not\n *\n * @private\n */\nexports.Controller.prototype.setFeatureStyle_ = function() {\n  const geometry = this.feature.getGeometry();\n  if (geometry) {\n    const geomType = geometry.getType();\n    const modifyActive = this.modify_.getActive();\n    let style;\n    if (this.dirty) {\n      if (modifyActive) {\n        style = this.dirtyStyles_[geomType];\n      } else {\n        style = this.dirtyStylesWoVertice_[geomType];\n      }\n    } else {\n      if (modifyActive) {\n        style = this.defaultStyles_[geomType];\n      } else {\n        style = this.defaultStylesWoVertice_[geomType];\n      }\n    }\n    this.feature.setStyle(style);\n  }\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf', i.e. groups are\n * excluded.\n *\n * If the Layertree controller node id is equal to the `layerNodeId` configured\n * with this component, then find the WMS layer associated with it for\n * for refresh purpose.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.Controller.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (\n    treeCtrl.node);\n  if (node.children && node.children.length) {\n    return;\n  }\n\n  // Set editable WMS layer for refresh purpose\n  if (node.id === this.layerNodeId) {\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage || layer instanceof olLayerTile);\n    this.editableWMSLayer_ = layer;\n  }\n\n};\n\n\n/**\n * Unregisters all currently registered Layertree controllers.\n *\n * Unset the WMS layer associated with the `layerNodeId` configured with\n * this component.\n *\n * @private\n */\nexports.Controller.prototype.unregisterAllTreeCtrl_ = function() {\n  this.editableWMSLayer_ = null;\n};\n\n\n/**\n * Refresh the WMS layer, if set.\n * @private\n */\nexports.Controller.prototype.refreshWMSLayer_ = function() {\n  if (this.editableWMSLayer_) {\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n};\n\n\n/**\n * Called before the window unloads. Show a confirmation message if there are\n * unsaved modifications.\n * @param {Event} e Event.\n * @return {string|undefined} Message\n * @private\n */\nexports.Controller.prototype.handleWindowBeforeUnload_ = function(e) {\n  const gettextCatalog = this.gettextCatalog_;\n  if (this.dirty) {\n    const msg = gettextCatalog.getString('There are unsaved changes.');\n    (e || window.event).returnValue = msg;\n    return msg;\n  }\n  return undefined;\n};\n\n\n/**\n * Called when a feature is added to the collection of sketch features.\n * Depending on the current behaviour, use the added sketch feature to process\n * the existing geometry.\n *\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleSketchFeaturesAdd_ = function(evt) {\n  const sketchFeature = /** @type {ol.Feature} */ (evt.element);\n  const sketchGeom = /** @type {ol.geom.Geometry} */ (\n    sketchFeature.getGeometry());\n\n  const geom = this.feature.getGeometry();\n\n  if (geom) {\n    const jstsGeom = this.jstsOL3Parser_.read(geom);\n    const jstsSketchGeom = this.jstsOL3Parser_.read(sketchGeom);\n    let jstsProcessedGeom;\n\n    if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n      jstsProcessedGeom = jstsGeom.union(jstsSketchGeom);\n    } else {\n      if (jstsGeom.intersects(jstsSketchGeom)) {\n        jstsProcessedGeom = jstsGeom.difference(jstsSketchGeom);\n      }\n    }\n\n    if (jstsProcessedGeom) {\n      const processedGeom = this.jstsOL3Parser_.write(jstsProcessedGeom);\n      const multiGeom = ngeoUtils.toMulti(processedGeom);\n      this.feature.setGeometry(multiGeom.clone());\n    }\n\n  } else if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n    this.feature.setGeometry(ngeoUtils.toMulti(sketchGeom.clone()));\n  }\n\n  this.sketchFeatures.clear();\n};\n\n\n/**\n * Called when the geometry property of the feature changes, i.e. not when the\n * geometry itself changes but when a new geometry is set to the feature.\n *\n * This happens either when resetting the geometry to null, in which case\n * there's nothing to do here. Otherwise, it happens after the combinaison\n * of a sketch geometry with the existing feature geometry. This new geom\n * is pushed in the `geometryChanges_` array.\n *\n * @private\n */\nexports.Controller.prototype.handleFeatureGeometryChange_ = function() {\n  const geom = this.feature.getGeometry();\n  this.timeout_(() => {\n    this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geom);\n  });\n\n  if (this.skipGeometryChange_) {\n    return;\n  }\n\n  if (geom) {\n    // Use a timeout here, because there can be a scope digest already in\n    // progress. For example, with tools that requires the user to draw\n    // features on the map, we would need to manually call:\n    // this.scope_.$apply();\n    // For tools that use promises instead, such as the \"copy/delete\" from,\n    // a scope is already in progress so we must not invoke it again.\n    this.timeout_(() => {\n      this.geometryChanges_.push(geom.clone());\n    });\n  }\n};\n\n\n/**\n * @param {Array.<gmfx.ObjectEditingQueryableLayerInfo>} layersInfo List\n *     of queryable layers information, which contains the node and ogcServer.\n * @private\n */\nexports.Controller.prototype.handleGetQueryableLayersInfo_ = function(layersInfo) {\n  this.queryableLayersInfo = layersInfo;\n  if (this.queryableLayersInfo.length) {\n    this.selectedQueryableLayerInfo = this.queryableLayersInfo[0];\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller.prototype.handleDestroy_ = function() {\n  this.features_.clear();\n  this.toggle_(false);\n  this.undoAllChanges_();\n};\n\n\n// == Static methods and type definitions ==\n\n\n/**\n * Utility method that gets the clone of a geometry, which can be null or\n * undefined. In the latter case, a null value is returned instead of a\n * geometry.\n * @param {?ol.geom.Geometry|undefined} geometry A geometry, undefined or\n *     null value.\n * @return {?ol.geom.Geometry} A geometry clone or null value.\n * @private\n */\nexports.Controller.cloneGeometry_ = function(geometry) {\n  let clone = null;\n  if (geometry) {\n    clone = geometry.clone();\n  }\n  return clone;\n};\n\n\n/**\n * @const\n * @private\n */\nexports.Controller.NAMESPACE_ = 'oe';\n\n\n/**\n * @enum {string}\n */\nexports.Controller.State = {\n  INSERT: 'insert',\n  UPDATE: 'update'\n};\n\n\nexports.controller('GmfObjecteditingController',\n  exports.Controller);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.Manager\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * A service that looks for certain parameters in the url and use them to fetch\n * a feature using the GMF protocol.\n *\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($q, gmfEditFeature, ngeoLocation) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.getFeatureDefered_ = null;\n\n};\n\n\n/**\n * Use the EditFeature service to fetch a single feature using parameters in\n * the url. The method returns a promise that has the feature as argument in\n * the callback method. If any parameter in the url is missing, `null` is\n * returned, otherwise the query is made. If the query returns a feature, it\n * is returned, otherwise one is created with empty geometry and with the\n * property set.\n *\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeature = function() {\n\n  if (!this.getFeatureDefered_) {\n    this.getFeatureDefered_ = this.q_.defer();\n\n    const geomType = this.ngeoLocation_.getParam(\n      exports.Param.GEOM_TYPE);\n    const id = this.ngeoLocation_.getParam(\n      exports.Param.ID);\n    const layer = this.ngeoLocation_.getParam(\n      exports.Param.LAYER);\n    const property = this.ngeoLocation_.getParam(\n      exports.Param.PROPERTY);\n    const theme = this.ngeoLocation_.getParam(\n      exports.Param.THEME);\n\n    if (geomType && id && layer && property && theme) {\n      this.gmfEditFeature_.getFeaturesWithComparisonFilters(\n        [layer],\n        [{\n          operator: 'eq',\n          property: property,\n          value: id\n        }]\n      ).then(this.handleGetFeatures_.bind(this, property, id));\n    } else {\n      this.getFeatureDefered_.resolve(null);\n    }\n  }\n\n  return this.getFeatureDefered_.promise;\n\n};\n\n\n/**\n * @return {string|undefined} The geometry type.\n * @export\n */\nexports.prototype.getGeomType = function() {\n  return this.ngeoLocation_.getParam(\n    exports.Param.GEOM_TYPE);\n};\n\n\n/**\n * @return {number|undefined} The gmf layer node id.\n * @export\n */\nexports.prototype.getLayerNodeId = function() {\n  return this.ngeoLocation_.getParamAsInt(\n    exports.Param.LAYER);\n};\n\n\n/**\n * Called after getting features with comparison filters. Resolve the deferred\n * promise with the first returned feature (if any), otherwise resolve it\n * with a feature created with an empty geometry and the property key + value\n * that was used in the attempt to fetch it.\n *\n * @param {string} key Property key.\n * @param {string} value Property value.\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(key, value, features) {\n  let feature;\n\n  if (features.length) {\n    feature = features[0];\n  } else {\n    const featureProperties = {};\n    featureProperties[key] = value;\n    featureProperties['geometry'] = null;\n    feature = new olFeature(featureProperties);\n  }\n\n  this.getFeatureDefered_.resolve(feature);\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Param = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GEOM_TYPE: 'objectediting_geomtype',\n  /**\n   * @type {string}\n   * @export\n   */\n  ID: 'objectediting_id',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAYER: 'objectediting_layer',\n  /**\n   * @type {string}\n   * @export\n   */\n  PROPERTY: 'objectediting_property',\n  /**\n   * @type {string}\n   * @export\n   */\n  THEME: 'objectediting_theme'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingManager', [\n  gmfEditingEditFeature.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\nexports.module.service('gmfObjectEditingManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.objectediting.module\n */\nimport gmfObjecteditingComponent from 'gmf/objectediting/component.js';\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\nimport gmfObjecteditingManager from 'gmf/objectediting/Manager.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingModule', [\n  gmfObjecteditingComponent.name,\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  gmfObjecteditingManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.oeedit.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfObjecteditingModule from 'gmf/objectediting/module.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, $timeout) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.oeEditActive = false;\n\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  ngeoToolActivateMgr.unregisterGroup('mapTools');\n\n  const oeEditToolActivate = new ngeoMiscToolActivate(this, 'oeEditActive');\n  ngeoToolActivateMgr.registerTool('mapTools', oeEditToolActivate, true);\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool('mapTools', queryToolActivate, false);\n\n  // Set edit tool as default active one\n  $timeout(() => {\n    this.oeEditActive = true;\n  });\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    wrapX: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures = new olCollection();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      features: this.sketchFeatures,\n      wrapX: false\n    })\n  });\n\n  /**\n   * @type {gmf.theme.Themes} gmfObjectEditingManager The gmf theme service\n   */\n  const gmfThemes = $injector.get('gmfThemes');\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      // Add layer vector after\n      this.map.addLayer(this.vectorLayer_);\n      this.map.addLayer(this.sketchLayer_);\n    }\n  });\n\n  /**\n   * @type {gmf.objectediting.Manager} gmfObjectEditingManager The gmf\n   *     ObjectEditing manager service.\n   */\n  const gmfObjectEditingManager = $injector.get('gmfObjectEditingManager');\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.oeGeomType = gmfObjectEditingManager.getGeomType();\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.oeLayerNodeId = gmfObjectEditingManager.getLayerNodeId();\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.oeFeature = null;\n\n  gmfObjectEditingManager.getFeature().then((feature) => {\n    this.oeFeature = feature;\n    if (feature) {\n      this.vectorSource_.addFeature(feature);\n    }\n  });\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appoeedit', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfObjecteditingModule.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.value('gmfPermalinkOptions', /** @type {gmfx.PermalinkOptions} */ ({\n  pointRecenterZoom: 10\n}));\n\nexports.module.controller('OEEditController', exports);\n\nexport default exports;\n","module.exports = \"<table> <tr> <td translate> Swiss grid (LV03) </td> <td> {{coord_21781|ngeoNumberCoordinates:0:'{x} / {y}'}} </td> </tr> <tr> <td translate> Wgs Coord. </td> <td> {{coord_4326|ngeoNumberCoordinates:2:'{y} / {x}'}} </td> </tr> <tr> <td translate> Wgs Coord. DMS </td> <td> {{coord_4326|ngeoDMSCoordinates:0:'{y} {x}'}} </td> </tr> <tr> <td translate> Elevation (SRTM) </td> <td ng-if=srtm> {{srtm | number}} [m] </td> </tr> <tr> <td translate> Elevation (Aster) </td> <td ng-if=aster> {{aster | number}} [m] </td> </tr> </table> <a ng-href=\\\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\\\" target=_blank>Google StreetView</a> \";","module.exports = \"<gmf-objecteditingtools gmf-objecteditingtools-active=oeCtrl.toolsActive gmf-objecteditingtools-copyfromactive=oeCtrl.copyFromActive gmf-objecteditingtools-deletefromactive=oeCtrl.deleteFromActive gmf-objecteditingtools-feature=oeCtrl.feature gmf-objecteditingtools-geomtype=::oeCtrl.geomType gmf-objecteditingtools-map=::oeCtrl.map gmf-objecteditingtools-process=oeCtrl.process gmf-objecteditingtools-queryablelayerinfo=oeCtrl.selectedQueryableLayerInfo gmf-objecteditingtools-requireslayer=oeCtrl.queryableLayerListShown gmf-objecteditingtools-sketchfeatures=::oeCtrl.sketchFeatures> </gmf-objecteditingtools> <div class=form-group ng-show=oeCtrl.queryableLayerListShown> <label ng-show=\\\"oeCtrl.copyFromActive === true\\\" class=control-label>{{'Copy from:' | translate}}</label> <label ng-show=\\\"oeCtrl.deleteFromActive === true\\\" class=control-label>{{'Cut from:' | translate}}</label> <select class=form-control ng-model=oeCtrl.selectedQueryableLayerInfo ng-options=\\\"layerInfo.layerNode.name | translate for layerInfo in oeCtrl.queryableLayersInfo\\\"> </select> </div> <form novalidate name=form class=\\\"form gmf-objectediting-form\\\"> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-objectediting-btn-save\\\" ng-click=\\\"form.$valid && oeCtrl.save()\\\" ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending || !oeCtrl.featureHasGeom\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-undo\\\" ng-click=oeCtrl.undo() ng-disabled=\\\"!oeCtrl.dirty || oeCtrl.pending\\\" title=\\\"{{'Undo latest modifications' | translate}}\\\" href>{{'Undo' | translate}}</a> <a class=\\\"btn btn-sm btn-link gmf-objectediting-btn-delete\\\" ng-click=oeCtrl.delete() ng-disabled=\\\"oeCtrl.isStateInsert() || oeCtrl.pending\\\" title=\\\"{{'Delete the feature' | translate}}\\\" href>{{'Delete' | translate}}</a> </form> \";","module.exports = \"<div class=btn-group role=group aria-label=\\\"\\\"> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPoint')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a point to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiLineString')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a linestring to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.drawActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomType ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.drawActive}\\\" ng-if=\\\"::(oetCtrl.geomType === 'MultiPolygon')\\\" ng-model=oetCtrl.drawActive title=\\\"{{'Add a polygon to the geometry' | translate}}\\\"> <span class=\\\"fa fa-plus-square-o gmf-icon-oe-draw\\\"> </span> </a> <a href ngeo-btn ngeo-createfeature ngeo-createfeature-active=oetCtrl.eraseActive ngeo-createfeature-features=::oetCtrl.sketchFeatures ngeo-createfeature-geom-type=::oetCtrl.geomTypePolygon ngeo-createfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default\\\" ng-class=\\\"{active: oetCtrl.eraseActive}\\\" ng-model=oetCtrl.eraseActive title=\\\"{{'Erase geometry' | translate}}\\\"> <span class=\\\"fa fa-minus-square-o gmf-icon-oe-erase\\\"> </span> </a> <a href ng-if=\\\"::oetCtrl.geomType === 'MultiPolygon'\\\" ngeo-btn ngeo-createregularpolygonfromclick ngeo-createregularpolygonfromclick-active=oetCtrl.drawTriangleActive ngeo-createregularpolygonfromclick-angle=oetCtrl.triangleAngle ngeo-createregularpolygonfromclick-features=::oetCtrl.sketchFeatures ngeo-createregularpolygonfromclick-map=::oetCtrl.map ngeo-createregularpolygonfromclick-radius=::oetCtrl.triangleRadius class=\\\"btn btn-sm btn-default ngeo-createregularpolygonfromclick\\\" ng-class=\\\"{active: oetCtrl.drawTriangleActive}\\\" ng-model=oetCtrl.drawTriangleActive title=\\\"{{'Draw a triangle' | translate}}\\\"> <span class=\\\"fa fa-play fa-rotate-270 gmf-icon-oe-triangle\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.copyFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-add\\\" ng-class=\\\"{active: oetCtrl.copyFromActive}\\\" ng-model=oetCtrl.copyFromActive title=\\\"{{'Copy from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-clone gmf-icon-oe-copyfrom\\\"> </span> </a> <a href ngeo-btn gmf-objecteditinggetwmsfeature gmf-objecteditinggetwmsfeature-active=oetCtrl.deleteFromActive gmf-objecteditinggetwmsfeature-features=::oetCtrl.sketchFeatures gmf-objecteditinggetwmsfeature-layerinfo=oetCtrl.queryableLayerInfo gmf-objecteditinggetwmsfeature-map=::oetCtrl.map class=\\\"btn btn-sm btn-default gmf-objecteditinggetwmsfeature-delete\\\" ng-class=\\\"{active: oetCtrl.deleteFromActive}\\\" ng-model=oetCtrl.deleteFromActive title=\\\"{{'Cut from external WMS feature' | translate}}\\\"> <span class=\\\"fa fa-scissors gmf-icon-oe-deletefrom\\\"> </span> </a> </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\" ng-click=\\\"$ctrl.hasError = false\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=input-group> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined || $ctrl.hasError\\\"> <span ng-if=!$ctrl.hasError>{{'Load local file' | translate}}</span> <span ng-if=$ctrl.hasError>{{'Unable to load the file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-layersconfig=ctrl.layersconfig gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue}} <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" ng-style=ctrl.getStyle(name)></i> {{name | translate}} <span ng-if=\\\"ctrl.currentPoint.elevations[name] != null\\\"> {{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </span> </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer gmf-editfeature-closeaftersave=::efsCtrl.closeAfterSave> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{efCtrl.serverErrorType}}<br> {{efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style title=\\\"\\\"> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> <div class=content-template-container></div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open> <button class=collapse-button type=button ng-show=::!ctrl.desktop ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr ng-if=::$ctrl.enableEmail> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <div> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </div> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children> <span ng-switch=\\\"layertreeCtrl.node.children && !layertreeCtrl.layer.loading\\\"> <i ng-switch-when=true class=\\\"fa fa-fw gmf-layertree-state\\\"></i> <i ng-switch-when=false class=\\\"fa fa-fw fa-refresh fa-spin\\\"></i> </span> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = __webpack_public_path__ + \"crosshair.3aa99e.svg\";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> </div> <div ng-if=!$ctrl.gmfUser.username> <div class=\\\"alert alert-warning\\\" ng-show=$ctrl.infoMessage> <span>{{ $ctrl.infoMessage }}</span> </div> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}