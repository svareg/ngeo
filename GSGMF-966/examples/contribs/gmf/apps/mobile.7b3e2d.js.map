{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/format/AttributeType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/layertree/Controller.js","webpack:///./src/utils.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/statemanager/Service.js","webpack:///./src/message/Notification.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/Time.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/Group.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/statemanager/Location.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/draw/features.js","webpack:///./src/misc/File.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/mobile/navigation/component.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/Menu.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/format/Attribute.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/misc/filters.js","webpack:///./src/download/service.js","webpack:///./src/GeometryType.js","webpack:///./src/interaction/Measure.js","webpack:///./src/interaction/common.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/rule/Rule.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/map/component.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/download/Csv.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./contribs/gmf/src/mobile/measure/module.js","webpack:///./contribs/gmf/src/mobile/navigation/module.js","webpack:///./src/geolocation/mobile.js","webpack:///./contribs/gmf/src/controllers/AbstractMobileController.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/mobile/Controller.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.html","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/permalink/crosshair.svg","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","assert","condition","opt_message","var_args","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","assertInstanceof","type","assertObjectPrototypeIsIntact","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","undefined","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","olBase","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","olArray","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","getIds","item","array","forEach","child","callback","layer","set","metadata","dimensions","ids","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","opt_params","STYLES","styles","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref","key","createBasicWMSLayer","layers","credential","fail","layerGroupCreationFn","orderedChildren","map","x","reverse","promises","all","collection","filter","olCollection","createBasicGroup","promiseSuccessFn","background_layers","itemType","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","config","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeoMapLayerHelper","service","_inherits","_ngeoDatasourceDataSo","options","_classCallCheck","_possibleConstructorReturn","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","ogcLayer","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","maxRes","minRes","inMinRange","inMaxRange","inRange","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeoFormatAttributeType","share","myActive","activeDimensions","itsActive","_createClass","time","range","lower","upper","end","start","active","timeRangeValue","supportsOGCQueries","_iterator5","_isArray5","_i5","_ref5","ngeoDatasourceDataSource","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","DATALAYERGROUP_NAME","EXTERNALLAYERGROUP_NAME","COORDINATES_LAYER_NAME","PermalinkParam","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","detail","olEventsEvent","showMessage","show","msgObjects","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObject","defaultType","msg","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","index","indexOf","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","addLayer","getLayers","getArray","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","Visitor","traverseDepthFirst","visitor","decision","stop","controller","toMulti","geometry","multiGeom","olGeomPoint","olGeomMultiPoint","appendPoint","olGeomLineString","olGeomMultiLineString","appendLineString","olGeomPolygon","olGeomMultiPolygon","appendPolygon","isSafari","navigator","userAgent","colorZeroPadding","hex","rgbArrayToHex","rgb","g","b","Error","hexR","toString","hexG","hexB","decodeQueryString","queryString","queryData","pairs","substring","split","pair","indexOfEquals","decodeURIComponent","encodeQueryString","queryItem","encodeURIComponent","deleteCondition","event","olEventsCondition","extentToRectangle","extent","getTopLeft","getTopRight","getBottomRight","getBottomLeft","featureUidToGroupIndex_","groups_","source_","olSourceVector","useSpatialIndex","layer_","olLayerVector","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","features","removeFeature","clear","olObj","getLayer","getFeatureOverlay","styleFunction","olStyleDefaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","olStyleStyle","defaultFunction","toStyleFunction","resolution","$filter","$filter_","gettextCatalog_","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","secondResolution","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","mode","interaction","olInteractionInteraction","getActive","setActive","olLayerBase","getVisible","setVisible","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","decrementLoadCount_","decrement_","on","olEvent","newLayer","element","getSource","olSourceTile","olSourceImage","$applyAsync","load_count","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","id","rootChild","grp","cancel","unshift","addGroupByName","groupName","_this4","gmfThemeThemes","addGroupByLayerName","layerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","removeGroup","found","removeAll","cloneGroupNode_","names","clone","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeoMessageMessage","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeoMessageNotification","ngeoStatemanagerService","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","opt_customSourceOptions","opt_customLayerOptions","FORMAT","LAYERS","olServerType","assign","serverType","crossOrigin","olSourceImageWMS","updateParams","layerOptions","olLayerImage","createBasicWMSLayerFromDataSource","visible","capabilitiesURL","opt_matrixSet","opt_dimensions","opt_customOptions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","olSourceWMTS","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","Infinity","opt_layers","OlLayerGroup","setLayers","getGroupFromMap","getLayerGroup","existingGroup","getFlatLayers","sublayers","hasGroupLayer","sublayer","getFlatLayers_","computedOpacity","opacity","getLayerByName","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","Math","round","olUri","isLayerVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","setZIndexToFirstLevelChildren","ZIndex","innerGroupLayers","innerLayer","setZIndex","updateWMSLayerState","getQuerySourceIds","NOT","OR","collection_","map_","listenerKeys_","handleDataSourcesAdd_","bindMap_","view","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","evt","target","olView","syncDataSourceToResolution_","supportsDynamicInRange","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","updateCurrentTheme","fallbackThemeName","fallbackTheme","$emit","EventType","THEME_NAME_SET","gmfLayertreeTreeManager","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","parseInt","classNames","el","html","addClass","delay","CacheItem","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","inAMixedGroup","isOneParentNotMixed_","layerGroup","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","ngeoMiscWMSTime","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","dataSourcesCollection_","dataSources","title_","title","destroy","getDataSourceState","VisibilityState","ON","OFF","addDataSource","removeDataSource","remove","toggleVisibilityState","visibleToSet","visibilityState","otherState","INDETERMINATE","factory_","func","wait","invokeApply","timeout","_len","args","_key","context","later","factory","addListenerKey","initListenerKey_","clearListenerKey","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","search","fragment_","hash","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","locationMock","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","$inject","_olEventsEventTarget","authenticationBaseUrl","gmfUser","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","resp","respData","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","setUser_","ngeoCustomEvent","user","emitEvent","username","role_name","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","short_url","status","postShortUrl_","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","featuresCollection_","wrapX","getExtent","FileGroup_inherits","_ngeoDatasourceGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","injector","unregister_","ngeoDatasourceFile","registerDataSource_","handleDataSourceVisibleChange_","oldValue","unregisterDataSource_","ngeoDatasourceGroup","OGCGroup_inherits","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_createClass","WMSGroup_inherits","_ngeoDatasourceOGCGro","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGC","updateLayer_","concat","unregister","WMSGroup_createClass","ngeoDatasourceOGCGroup","ngeoDataSources","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","formats","imagePngType","includes","infoFormats","ngeoDatasourceWMSGroup","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","isEmpty","fit","rejections","content","readOptions","featureProjection","getProjection","isKml","olFormatKML","extractStyles","readFeatures","isGpx","olFormatGPX","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","ngeoMiscFile","ngeoDatasourceDataSources","proj4","Proj","projections","add","somerc","epsg21781def","epsg21781extent","defs","olProjProj4","olProj","setExtent","stringToCoordinates","str","coords","y","getProjectionList","projectionsCodes","code","proj","projection","toUpperCase","substr","tryProjections","coordinates","viewProjection","opt_projections","olExtent","e","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","run","$templateCache","put","require","templateUrl","gmfLayertreeDatasourceGroupTreeTemplateUrl","Controller_","_class","scope_","getGroupUid","toggle","toggleDataSource","component","bindings","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","pointRecenterZoom_","pointRecenterZoom","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","image","olStyleIcon","src","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","getGeometry","getType","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","stateName","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","center","targetProjection","reprojectedCenter","getMapZoom","zoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","olFeature","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","class","text","removeOverlay","ngeoPopover","addOverlay","f","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","geom","size","getSize","maxZoom","enabled3d","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","refreshFirstLevelGroups","groupNodes","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","initialUri","href","authenticationRequired","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","writeFeatures","wfsLayer","numGroups","WFS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","showFeatures","wfsType","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","_ret","responses","wmsFindLayerCapability","_iterator6","_isArray6","_i6","_ref6","wmtsFindLayerCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iterator7","_isArray7","_i7","_ref7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iterator8","_isArray8","_i8","_ref8","wmsGroupLayerNames","_iterator10","_isArray10","_i10","_ref10","wmsDataSource","_iterator9","_isArray9","_i9","_ref9","wmtsGroupLayerNames","_iterator11","_isArray11","_i11","_ref11","wmtsDataSource","_iterator12","_isArray12","_i12","_ref12","startsWith","_iterator14","_isArray14","_i14","_ref14","_iterator15","_isArray15","_i15","_ref15","_iterator13","_isArray13","_i13","_ref13","ngeoDrawFeatures","ngeoMiscDebounce","ngeoMiscEventHelper","ngeoStatemanagerModule","OpenLayersLayerProperties","regexp","key1","key2","attrs","component_","ngeoDatePickerTemplateUrl","scope","onDateSelected","bindToController","restrict","link","lang","getCurrentLanguage","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","find","datepicker","edateOptions","dp","css","stopPropagation","directive","ngeoTime","ngeoTime_","isModeRange","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","sDate","eDate","isDate","initialOptions_","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","reason","onprogress","readAsText","load","opt_cancelP","LINE_STRING","POINT","POLYGON","opt_options","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeStyleFill_","opt_propertyName","propertyName","getColor","fillColorRgba","olColor","fillColorHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","font","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","lineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","point","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","polygon","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","parts","part","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","dx","dy","encodedCoordinates","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadDatasets","typeahead","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","$apply","open","close","suggestion","dataset","cursorchange","select","autocomplete","empty","datasetsempty","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","geojsonFormat","olFormatGeoJSON","bloodhoundOptions","remote","prepare","settings","transform","parsedResponse","featureCollection","dataProjection","datumTokenizer","queryTokenizer","Bloodhound","tokenizers","whitespace","remoteOptions","Function","sourceProjection","ngeoProjEPSG21781","parseBbox","bbox","regex","exec","removeHtmlTags","extractName","limit","origins","results","geom_st_box2d","setId","featureId","bhOptions","ngeoSearchSearchDirective","ngeoSearchCreateGeoJSONBloodhound","ngeoSearchCreateLocationSearchBloodhound","navCtrl","slid_","active_","header_","backButton_","back","back_","cls","ClassName_","ACTIVE","SLIDE","GO_BACK","slideOut","currentTarget","parents","SLIDE_OUT","removeClass","slideIn","attr","updateNavigationHeader_","click","toggleClass","BACK","nav","setTimeout","slideBack","pop","backIfActive","backDirective","backOnClickDirective","sortable","resetUpDragDrop","optionsObject","callbackFn","callbackCtx","sortableElement","off","sortableOptions","axis","classes","ui-sortable-helper","ui","oldIndex","newIndex","ret","defaultHandleClassName","handleClassName","elem","ngeoPopoverCtrl","anchorElm","popover","bodyElm","shown","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","gmfSearchFulltextSearch","ngeoMiscAutoProjection","ngeoMiscColorpickerComponent","ngeoSearchModule","ngeoMapFeatureOverlayMgr","ngeoMessagePopoverComponent","gmfSearchTemplateUrl_","gmfSearchTemplateUrl","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","$compile","ngeoAutoProjection","element_","compile_","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","highlight","datasets","displayColorPicker","listeners","$onInit","coordProj","initStyles_","getSearchStyle_","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","obj","datasource","groupValues","groupActions","filterLayername_","action","filterAction_","createDataset_","datasetTitle","groupsKey","labelKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","header","componentScope","compile","bloodhoundEngine","createAndInitBloodhound_","typeaheadDataset","ttAdapter","$new","act","opt_layerName","featureLayerName","mapProjectionCode","getCode","getBloodhoudRemoteOptions_","bloodhound","initialize","rateLimitWait","currentLanguage","xhrFields","suggestions","tt_source","olStyleRegularShape","points","radius2","angle","customStyles","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","layer_name","leaveSearch_","selectFromGMF_","actions","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","fitOptions","directive_","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeoLayertreeTemplateUrl","__webpack_exports__","originalEl","closeEl_","contentEl_","olOverlay","getElement","currentMap","getMap","contentEl","template","one","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfPermalinkPermalink","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","ngeoLayertreeComponent","subTemplateUrl","gmfLayertreeTemplate","openLinksInNewWindow","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfPermalink","gmfSyncLayertreeMap","gmfPermalink_","gmfSyncLayertreeMap_","groupNodeStates_","dataLayerGroup_","ngeoMiscSyncArrays","render","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","layersNames","scale","getScale_","getNumberOfLegendsObject","mpu","getMetersPerUnit","dpi","displayMetadata","metadataURL","gmfx","openIframePopup","afterReorder","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","ds","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","legend","parentNode","menuOptions","opt_overlayOptions","positioning","olOverlayPositioning","TOP_LEFT","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","coordinate","setPosition","documentElement","handleClickOut_","closest","originalEvent","Element","contains","pixel","ngModel","transclude","resizable","closable","$element_","$scope_","modal_","$postLink","dialog","draggable","handle","$render","modal","$viewValue","$setViewValue","$onDestroy","gmfAuthenticationService","ngeoMessageModalComponent","gmfAuthenticationTemplateUrl_","gmfAuthenticationTemplateUrl","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","infoMessage","AuthenticationController_","component_classCallCheck","gmfAuthenticationService_","notification_","changingPassword","userMustChangeItsPassword","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","messageType","gmfAuthenticationComponent","olObservable","mapUids_","mapUid","BACKGROUNDLAYERGROUP_NAME","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","hasUpdates","updatedDimensions","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","handleDestroy_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","gmfLayersUrl","EnumerateAttribute_classCallCheck","http_","promises_","getAttributeValues","promiseId","handleGetAttributeValues_","items","setGeometryType","geomRegex","geomType","olFormatXML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","alias","nillable","required","ngeoFormatAttribute","setAttributeByXsdType_","enumerations","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","numType","NumberType","FLOAT","INTEGER","getGeometryAttribute","geomAttribute","WFSAttribute_classCallCheck","complexTypeElements","readFromComplexTypeElement_","ngeoFormatXSDAttribute","Scalify","numberFilter","filterFn","$locale","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","olMath","dms","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","duration","output","remainder","removeCDATA","download","fileName","opt_fileType","fileType","blob","Blob","saveAs","CIRCLE","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","RECTANGLE","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","getFormattedArea","area","olSphere","getFormattedCircleArea","circle","PI","getFormattedLength","getCoordinates","c1","c2","getFormattedPoint","dragging","helpMsg","olDom","appendChild","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","getDefaultDrawStyleFunction","createEditingStyle","getDefaultModifyStyleFunction","olInteractionPointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","ngeoInteractionCommon","downPx","clickPx","squaredDistance","pass","handlePointerMove_","startDrawing_","finishDrawing_","mapBrowserEvent","pointerHandleEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","line","olGeomCircle","olGeomGeometryCollection","setGeometry","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","olFunctions","unitPrefixFormat","numberFormat","ngeoInteractionMeasure","ngeoInteractionDrawAzimut","getGeometries","getFormattedAzimutRadius","olProjProjection","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","azimut","getAzimut","rad","acos","sqrt","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","point_to_px","offsetY","optNumber","attrib","getNumber","getOpacityProperty","getRadiusLine","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","mimeType","export_","opt_mimeType","clones","writeOptions","rotation","ngeoInteractionMeasureAzimut","panMapToFeature","opt_panDuration","panDuration","calculateExtent","intersectsExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","Rule_classCallCheck","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","type_","listenerKeys","getExpression","setExpression","reset","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_ngeoRuleRule","Date_classCallCheck","ngeoRuleRule","Geometry_inherits","Geometry_classCallCheck","Geometry_possibleConstructorReturn","featureProperties","feature_","format_","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","handleGeometryChange_","olGeomGeometry","Geometry_createClass","Select_inherits","Select_classCallCheck","Select_possibleConstructorReturn","choices_","Select_createClass","selectedChoices","stringExpression","Text_inherits","Text_classCallCheck","Text_possibleConstructorReturn","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleGeometry","ngeoRuleSelect","ngeoRuleText","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializedRule","serializeRule","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","olFormatFilter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","writeFilter","xmlSerializer","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","selectedChoice","numericExpression","field","momentEnd","subtract","startValue","ngeoMiscFeatureHelper","olXml","PARSERS_","readElement_","objectStack","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","ngeoRuleHelper","Querent_classCallCheck","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","queryableDataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","layerCapabilities","layerCapability","baseUrl","opt_cache","olFormatWMSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","wfsCount","tolerancePx","tolerance","getFeatureCommonOptions","bboxAsGETParam","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","registerCanceler_","meta","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","FEATURE_COUNT","projCode","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","combined","combinableDataSource","ogcDS","CombinedDataSources","ngeoFilterRuleHelper","Helper_classCallCheck","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","ngeoFormatWFSAttribute","Helper_createClass","ngeoQueryQuerent","gmfEnumerateAttribute","ngeoDataSourcesHelper","datasource_Helper_classCallCheck","gmfEnumerateAttribute_","ngeoDataSourcesHelper_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","choice","datasource_Helper_createClass","ngeoDatasourceHelper","gmfEditingEnumerateAttribute","OGC_inherits","_ngeoDatasourceOGC","OGC_classCallCheck","OGC_possibleConstructorReturn","gmfLayer_","OGC_createClass","WFSAliases_classCallCheck","describe","gmfWFSAliases","Manager_classCallCheck","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","treeCtrlsUnregister_","handleNgeoBackgroundLayerChange_","setDatasourceMap","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","newTreeCtrl","cacheItem","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","queryLayers","wmsLayers","childLayers","childLayer","ogcServerName","isSingleTile","wfsSupport","urlWfs","edge","vertex","dimensionsFilters","identifierAttributeField","timeAttribute","gmfDatasourceOGC","stateWatcherUnregister","handleTreeCtrlStateChange_","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","treeDataSource","_source$updateParams","layersParam","layersList","filterParam","hasFilter","wmsLayerName","dsLayer","currentTimeParam","previousBackgroundLayer","currentBackgroundLayer","gmfDatasourceWFSAliases","gmfDatasourceHelper","gmfDatasourceManager","ngeoPopupTemplateUrl","preventDefault","autoDestroy_","sce_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","ngeoMessagePopupComponent","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","showInPopup","popup","button","ngeoMessagePopup","ngeoMessageDisclaimer","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","save","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","ngeoQueryResult","MapQuerent_classCallCheck","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","bboxAsGETParam_","dataSourceNames_","pending","handleResult_","total","sources","queried","tooManyResults","idStr","querentResultItem","typeSeparatedFeatures","filteredProperties","unset","featuresByType","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","prop","ngeoMiscBtnComponent","drawFeatureCtrl","olInteractionDraw","geometryFunction","maxPoints","br","verticesCount","ngeoDrawController","contMsg","ngeoInteractionMeasureArea","fromCircle","ngeoInteractionMeasureLength","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","handleDragEvent","handleDragEvent_","vertexFeature_","lastPixel_","modified_","rBush_","olStructsRBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","addFeature_","writeCircleGeometry_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","olCoordinate","setGeometryCoordinates_","olMapBrowserPointerEvent","handled","getInteracting","handlingDownUpSequence","pixelCoordinate","getCoordinateFromPixel","sortByDistance","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","min","vertexSegments","handleDown_","handleDrag_","handleUp_","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","forEachFeatureAtPixel","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyParams","otherFeatures_","olInteractionModify","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","setState_","interactions","handleFeaturesAdd_","handleFeaturesRemove_","getFeatureCollection_","isRectangle","keyPressListenerKey_","coordinate_","centerCoordinate_","centerFeatures_","handleKeyUp_","getCenterCoordinate_","centerFeature","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","a1","rotate","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","getTargetElement","cursor","getGeometryCenterPoint_","toolContext","activePropertyName","registerTool","tool","opt_defaultActivate","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoDrawComponent","ngeoMiscDatepickerComponent","ngeoMiscToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","ngeoToolActivateMgr","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","ngeoToolActivateMgr_","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ngeoMiscToolActivate","drawnFeatures","menu_","selectedFeatures","modify_","ngeoInteractionModify","rotate_","ngeoInteractionRotate","translate_","ngeoInteractionTranslate","initializeInteractions_","modifyToolActivate","rotateToolActivate","translateToolActivate","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggleChoiceSelection","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","toolMgr","ruleFeature","cloneFeature","mapDiv","getViewport","handleMapContextMenu_","handleTranslateEnd_","handleRotateEnd_","registerInteractions_","unregisterInteractions_","drawnFeature","getRuleGeometryType","removeMenu_","getEventPixel","ngeoMenu","handleMenuActionClick_","ngeoFilterRuleComponent","ngeoQueryMapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","FilterController_","ngeoMapQuerent","filter_component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","ngeoFilterComponent","gmfFiltersSavedFilters","gmfFilterselectorTemplateUrl","gmfDataSourcesHelper","gmfSavedFilters","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","confirm","saveFilterLoadItem","filterItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","gmfFiltersFilterselectorComponent","pre","preLink","sliderOptions","onSliderReleased_","computeDates_","sliderUi","wmstime","getClosestValue_","dates","timeValueList","getTimeValueList_","max","maxNbValues","endDate","setFullYear","getFullYear","setMonth","getMonth","getDate","setSeconds","getSeconds","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","gmfLayertreeComponent","gmfLayertreeTimeSliderComponent","gmfPermalinkShareService","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","shareComponent_classCallCheck","gmfShareService_","shortLink","permalink_","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","gmfPermalinkShareComponent","mapViewChangePromise_","ensureSnapInteractionsOnTop","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","requestDeferred","deactivateItem_","firstTreeCtrl","firstNode","activateItem_","olInteractionSnap","loadItemFeatures_","loadAllItems_","Cache","WFSConfig","olMap","setTarget","manageResizeAttr","manageResizeProp","manageResize","resizeTransitionAttr","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","ngeoMapComponent","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","gmfPermalinkModule","gmfEditingSnapping","ngeoMapModule","gmfSnapping","ngeoFeatureOverlayMgr_","gmfSnapping_","gmfMapMousepositionTemplateUrl","control_","initOlControl_","removeControl","formatFn","filterAndArgs","olControlMousePosition","className","coordinateFormat","undefinedHTML","addControl","gmfMapComponent","gmfMapMousepositionComponent","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","columnDefs","translatedColumnHeaders","columnHeader","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","startDownload","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","isSelected","selectAll","unselectAll","rowId","invertSelection","ngeoGridConfig","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","targetUid","posClickedRow","posSelectedRows","currentRow","currentUid","posClosestRow","currentPos","currentDistance","rangeStart","rangeEnd","preventTextSelection","altKey","olHas","metaKey","ctrlKey","ngeoDownloadCsv","ngeoGridComponent","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSource","getMergedSource_","mergedSourceId","mergeSourceId","currentMergeSourceId","sourceLabels","containsSource","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","gridCreated","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","columns","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","downloadCsv","MOVE_BUFFER_RADIUS","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","events","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","validSwipe","deltaY","deltaX","isDefined","triggerHandler","$event","ngeoMiscSwipe","$animateProvider","classNameFilter","gmfDisplayquerywindowTemplateUrl","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","positionMax","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","gmfQueryGridComponent","gmfQueryWindowComponent","gmfSearchComponent","gmfThemeSelectorTemplateUrl","setThemes_","setTheme","gmfThemeSelectorComponent","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","updateContentTemplate_","compiled","displayWindow","clear_","displaywindowComponent_createClass","trustAsResourceUrl","control","olControlControl","changeEvent","files","availableLanguages","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","arr","supportedLanguages","ngeoMiscControlComponent","ngeoMiscFilereaderComponent","ngeoMiscGetBrowserLanguage","ngeoMiscSortableComponent","clickEventKey_","pointerMoveEventKey_","handleMapClick_","sourceids","hit","forEachLayerAtPixel","activate_","cursorHover","deactivate_","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","clearResult_","typeName","createFilters_","issueRequest_","padding","getExtent_","resultSource","reduce","createFiltersForGroup","filterDef","or_","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","gmfAuthentication","updateHasEditableLayers_","loginRedirectUrl","loginInfoMessage","loginActive","userChange","roleId","filterSelectorEnabled","open_panel","filterSelectorActive","previousThemeName","setDefaultBackground_","searchDatasources","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","getBrowserLanguage","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapTools","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","updateCurrentBackgroundLayer_","skipPermalink","background","defaultBasemapArray","default_basemap","defaultBasemapLabel","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","getLocationIcon","arrow","arrowWrapper","gmfAuthenticationModule","gmfBackgroundlayerselectorComponent","gmfDatasourceModule","gmfDisclaimerComponent","gmfFiltersModule","gmfLayertreeModule","gmfMapModule","gmfQueryExtraModule","gmfSearchModule","gmfThemeModule","ngeoMessageDisplaywindowComponent","ngeoMiscExtraModule","ngeoQueryMapQueryComponent","ngeoStatemanagerWfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","minPoints_","minPoints","sketchPoints_","handleViewCenterChange_","getDirty","getDrawing","getValid","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","olGeomSimpleGeometry","dirty","clearDrawing","finishDrawing","getCenter_","overlaySource","ngeoInteractionMobileDraw","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","drawInteraction","ngeoInteractionMeasureLengthMobile","addPoint","finish","deactivate","gmfRasterUrl","getRaster","Param","X","Y","handleGetRaster_","coordFormat","coordFormat_","dec","gmfRasterRasterService","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","gmfRaster_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","ngeoInteractionMeasurePointMobile","translate","getMeasure_","ctn","childEl","previousCtn","getElementsByClassName","LayerConfig","gmfMobileMeasureLengthComponent","gmfMobileMeasurePointComponent","gmfMobileNavigationComponent","GeolocationEventType","getMobileMapFn","getMobileGeolocationOptionsFn","toggleTracking","geolocation_","olGeolocation","trackingOptions","enableHighAccuracy","autorotate","autorotateListener","untrack_","positionFeature_","positionFeatureStyle","accuracyFeature_","accuracyFeatureStyle","zoom_","follow_","viewChangedByMe_","getAccuracyGeometry","setPosition_","getTracking","currentPosition","getPosition","diff","track_","setTracking","currentAlpha","addEventListener","handleRotate_","alpha","webkitCompassHeading","eventAlpha","radAlpha","easing","olEasing","searchOverlayVisible","searchListeners","mobileGeolocationOptions","geolocationZoom","viewConfig","mapViewConfig","gmfControllersAbstractAppController","pixelRatio","mapPixelRatio","controls","mapControls","olControlScaleLine","olControlZoom","zoomInTipLabel","zoomOutTipLabel","olControlRotate","tipLabel","mapInteractions","olInteraction","pinchRotate","navIsVisible","redirectUrl","toggleLeftNavVisibility","toggleRightNavVisibility","hideNav","hideSearchOverlay","leftNavIsVisible","rightNavIsVisible","openNavMenu","navElements","gmfMobileMeasureModule","gmfMobileNavigationModule","ngeoGeolocationMobile","$compileProvider","debugInfoEnabled","epsg2056def","epsg2056extent","gmfControllersAbstractMobileController","resolutions","elevationLayersConfig","searchCoordinatesProjections","ngeoProjEPSG2056","raven","Raven","addPlugin","RavenPluginsAngular","install","appBase"],"mappings":"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","file":"mobile.7b3e2d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([294,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n\n      // Manage WMS styles\n      const opt_params = {STYLES: gmfLayerWMS.styles};\n      if (gmfLayer.dimensions) {\n        for (const [key, value] of Object.entries(gmfLayer.dimensions)) {\n          opt_params[key] = value;\n        }\n      }\n\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        opt_params,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport {getTopLeft, getTopRight, getBottomLeft, getBottomRight} from 'ol/extent.js';\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexport function extentToRectangle(extent) {\n  return [\n    getTopLeft(extent),\n    getTopRight(extent),\n    getBottomRight(extent),\n    getBottomLeft(extent),\n    getTopLeft(extent),\n  ];\n}\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n  let secondResolution = undefined;\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n    secondResolution = gettextCatalog.getString('M/d/yyyy HH:MM:ss');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    case 'second':\n      if (secondResolution) {\n        return this.$filter_('date')(date, secondResolution, utc);\n      } else {\n        return date.toISOString().replace(/\\.\\d{3}/, '');\n      }\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customSourceOptions Some initial options.\n * @param {Object=} opt_customLayerOptions The layer opacity.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin,\n  opt_customSourceOptions, opt_customLayerOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customSourceOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  const layerOptions = Object.assign({}, opt_customLayerOptions, {source});\n  return new olLayerImage(layerOptions);\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n\n/**\n * @param {string} themeName wanted theme name.\n * @param {string} fallbackThemeName fallback theme name.\n * @export\n */\nexports.prototype.updateCurrentTheme = function(themeName, fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    if (!themeName && this.modeFlush) {\n      // In flush mode load current theme private groups\n      const fallbackTheme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (fallbackThemeName));\n      if (fallbackTheme) {\n        this.gmfTreeManager_.addFirstLevelGroups(fallbackTheme.children, false, false);\n      }\n    }\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.addTheme(theme, true);\n      }\n    } else {\n      this.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    const styles = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n        const style = (treeCtrl.node.style !== undefined) ? treeCtrl.node.style : '';\n        styles.push(style);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(','),\n      'STYLES': styles.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n\n    const opt_params = {STYLES: gmfLayerWMS.style};\n\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      opt_params, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n    }));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GPX. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    url = service['OnlineResource'] || url;\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML({extractStyles: false}).readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {gmfx.User} gmfUser User.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation, gmfUser) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = gmfPermalinkOptions.pointRecenterZoom;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  /**\n   * @type {gmfx.User}\n   * @private\n   */\n  this.user_ = gmfUser;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleIcon({\n        src: require('gmf/permalink/crosshair.svg')\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  const geom = typeof oeFeature !== 'undefined' && oeFeature !== null ? oeFeature.getGeometry() : undefined;\n  if (geom) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    let maxZoom;\n    if (geom instanceof olGeomPoint || geom instanceof olGeomMultiPoint) {\n      maxZoom = this.pointRecenterZoom_;\n    }\n    view.fit(geom.getExtent(), {\n      size,\n      maxZoom\n    });\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  const initialUri = window.location.href;\n  let authenticationRequired = false;\n\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        } else {\n          authenticationRequired = true;\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        if (authenticationRequired && this.user_.role_id === null) {\n          this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n        }\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers == '' ? [] : groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                if (enable) {\n                  groupLayersArray.splice(groupLayersArray.indexOf(treeCtrl.node.name), 1);\n                }\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n            if (groupLayersArray.length > 0) {\n              authenticationRequired = true;\n            }\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n\n      if (authenticationRequired && this.user_.role_id === null) {\n        this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n      }\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.component\n */\nimport googAsserts from 'goog/asserts.js';\nconst exports = angular.module('gmfMobileNav', []);\n\n\n/**\n * An \"gmf-mobile-nav\" directive defining the behavior of a tree-structured menu.\n *\n * The directive is to be placed on a `nav` element, with the following\n * structure:\n * <nav gmf-mobile-nav>\n *   <header>\n *     <a class=\"gmf-mobile-nav-go-back\" href=\"#\"></a>\n *   </header>\n *   <div class=\"gmf-mobile-nav-active gmf-mobile-nav-slide\">\n *     <ul>\n *       <li>\n *         <a href data-target=\"#devices\">Devices</a>\n *       </li>\n *       <li>\n *         <a href data-target=\"#vehicles\">Vehicles</a>\n *       </li>\n *     </ul>\n *   </div>\n *   <div id=\"devices\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Devices\">\n *     <ul>\n *       <li>Mobile Phones</li>\n *       <li>Televisions</li>\n *     </ul>\n *   </div>\n *   <div id=\"vehicles\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Vehicles\">\n *     <ul>\n *       <li>Cars</li>\n *       <li>Planes</li>\n *       <li>Bicycles</li>\n *     </ul>\n *   </div>\n * </nav>\n *\n * When an element slides in the directive changes the text in the header.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'gmfMobileNavController as navCtrl',\n    bindToController: true,\n    scope: true,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      navCtrl.init(element);\n    }\n  };\n};\n\nexports.directive('gmfMobileNav', exports.component_);\n\n\n/**\n* @constructor\n* @private\n* @ngInject\n* @ngdoc controller\n* @ngname gmfMobileNavController\n*/\nexports.Controller_ = function() {\n  /**\n   * Stack of slid-in items.\n   * @private\n   * @type {Array.<!jQuery>}\n   */\n  this.slid_ = [];\n\n  /**\n   * Currently active sliding box.\n   * @private\n   * @type {jQuery}\n   */\n  this.active_ = null;\n\n  /**\n   * The navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.header_ = null;\n\n  /**\n   * The back button in the navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.backButton_ = null;\n\n  /**\n   * Export the back function already bound to `this`. This makes sure that\n   * the function is called on the right context, when it is passed to an\n   * attribute in a template\n   * @export\n   */\n  this.back = this.back_.bind(this);\n};\n\nexports.controller('gmfMobileNavController', exports.Controller_);\n\n\n/**\n * Initialize the directive with the linked element.\n * @param {angular.JQLite} element Element.\n */\nexports.Controller_.prototype.init = function(element) {\n  const cls = exports.Controller_.ClassName_;\n  this.active_ = $(element.find(`.${cls.ACTIVE}.${cls.SLIDE}`));\n  this.header_ = $(element.find('> header'));\n  this.backButton_ = $(element.find(`header > .${cls.GO_BACK}`));\n\n  // watch for clicks on \"slide-in\" elements\n  element.find('[data-toggle=slide-in]').on('click', (evt) => {\n\n    const cls = exports.Controller_.ClassName_;\n\n    // the element to slide out is the div.slide parent\n    const slideOut = $(evt.currentTarget).parents(`.${cls.SLIDE}`);\n    googAsserts.assert(slideOut.length === 1);\n\n    // push the item to the selected stack\n    this.slid_.push(slideOut);\n\n    // slide the \"old\" element out\n    slideOut.addClass(cls.SLIDE_OUT).removeClass(cls.ACTIVE);\n\n    // element to slide in\n    const slideIn = $($(evt.currentTarget).attr('data-target'));\n    googAsserts.assert(slideIn.length === 1);\n\n    // slide the \"new\" element in\n    slideIn.addClass(cls.ACTIVE);\n\n    // update the navigation header\n    this.updateNavigationHeader_(slideIn, false);\n\n    this.active_ = slideIn;\n  });\n\n  // watch for clicks on the header \"go-back\" link\n  this.backButton_.click(this.back.bind(this));\n};\n\n\n/**\n * @param {!jQuery} active The currently active sliding box.\n * @param {boolean} back Whether to move back.\n * @private\n */\nexports.Controller_.prototype.updateNavigationHeader_ = function(\n  active, back) {\n  const cls = exports.Controller_.ClassName_;\n  this.header_.toggleClass(cls.BACK, back);\n\n  // remove any inactive nav\n  this.header_.find(`nav:not(.${cls.ACTIVE} +)`).remove();\n\n  // deactivate the currently active nav\n  this.header_.find(`nav.${cls.ACTIVE}`).removeClass(cls.ACTIVE)\n    .addClass(cls.SLIDE_OUT);\n\n  // show the back button when relevant\n  this.backButton_.toggleClass(cls.ACTIVE, this.slid_.length > 0);\n\n  // create a new nav\n  const nav = $('<nav>');\n  nav.append($('<span>', {\n    text: active.attr('data-header-title')\n  }));\n  this.header_.append(nav);\n\n  // Delay the activation of the new navigation so that the previous\n  // one is properly deactivated. This prevents weird animation\n  // effects.\n  window.setTimeout(() => {\n    // fix for safari: the following 3 lines force that the position\n    // of the newly inserted element is calculated.\n    // see http://stackoverflow.com/a/3485654/119937\n    nav.css('display', 'none');\n    nav.offset();\n    nav.css('display', '');\n\n    window.setTimeout(() => {\n      // fix: calling `position()` makes sure that the animation\n      // is always run\n      nav.position();\n      nav.addClass(exports.Controller_.ClassName_.ACTIVE);\n    }, 0);\n  }, 0);\n};\n\n\n/**\n * Return to the previous slide.\n * @private\n */\nexports.Controller_.prototype.back_ = function() {\n  if (this.slid_.length <= 0) {\n    return;\n  }\n\n  const cls = exports.Controller_.ClassName_;\n\n  // slide active item to the right\n  this.active_.removeClass(cls.ACTIVE);\n\n  // get the previously active item\n  const slideBack = this.slid_.pop();\n\n  // slide previous item to the right\n  slideBack.addClass(cls.ACTIVE).removeClass(cls.SLIDE_OUT);\n\n  // update the navigation header\n  this.updateNavigationHeader_(slideBack, true);\n\n  this.active_ = slideBack;\n};\n\n\n/**\n * Return to the previous slide if the given element is active.\n *\n * @param {Element} element The element to check.\n */\nexports.Controller_.prototype.backIfActive = function(element) {\n  if (this.active_ !== null && this.active_.is(element)) {\n    this.back_();\n  }\n};\n\n\n/**\n * CSS class names toggled by the controller.\n * @enum {string}\n * @private\n */\n\nexports.Controller_.ClassName_ = {\n  ACTIVE: 'gmf-mobile-nav-active',\n  BACK: 'gmf-mobile-nav-back',\n  GO_BACK: 'gmf-mobile-nav-go-back',\n  SLIDE: 'gmf-mobile-nav-slide',\n  SLIDE_OUT: 'gmf-mobile-nav-slide-out'\n};\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}\n * with an expression. When the value of the expression changes and becomes\n * true, the navigation returns to the previous slide, if the slide is\n * currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-authentication class=\"gmf-mobile-nav-slide\"\n *         gmf-mobile-nav-back=\"authCtrl.gmfUser.username !== null\">\n *      </gmf-authentication>\n *\n * If `mainCtrl.gmfUser.username` becomes true and the login-slide is currently\n * active, the navigation will go back to the last slide.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      scope.$watch(attrs['gmfMobileNavBack'], (newVal, oldVal) => {\n        if (newVal === true) {\n          navCtrl.backIfActive(element[0]);\n        }\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBack', exports.backDirective);\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}.\n * When the element is clicked, the navigation returns to the previous slide if\n * the slide is currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-themeselector\n *         gmf-mobile-nav-back-on-click\n *         gmf-themeselector-currenttheme=\"mainCtrl.theme\">\n *      </gmf-themeselector>\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backOnClickDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      element.on('click', () => {\n        navCtrl.backIfActive(element[0]);\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBackOnClick', exports.backOnClickDirective);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport 'jquery-ui-touch-punch';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery';\nimport 'jquery-ui';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $postLink() {\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable({\n      'handle': '.modal-header'\n    });\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-info-message=\"mainCtrl.loginInfoMessage\"\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n * @htmlAttribute {string} gmf-authentication-info-message Message to show above the authentication form.\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange',\n    'infoMessage': '=?gmfAuthenticationInfoMessage'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.infoMessage = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.userMustChangeItsPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n    this.userMustChangeItsPassword = (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd)\n          .then(() => {\n            this.changePasswordReset();\n            this.setError_(\n              [gettextCatalog.getString('Your password has successfully been changed.')],\n              ngeoMessageMessage.Type.INFORMATION\n            );\n          })\n          .catch((err) => {\n            this.setError_(gettextCatalog.getString('Incorrect old password.'));\n          });\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @param {ngeoMessageMessage.Type} [messageType] Type.\n   * @private\n   */\n  setError_(errors, messageType) {\n    if (messageType == undefined) {\n      messageType = ngeoMessageMessage.Type.ERROR;\n    }\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: messageType\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n  const previous = bgGroup.getLayers().remove(this.getOpacityBgLayer(map));\n  const ZIndex = -100;\n  layer.setOpacity(previous ? previous.getOpacity() : 0);\n  layer.setVisible(previous ? previous.getVisible() : true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val !== undefined) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <!-- With en-US localization -->\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *      <br/>\n *      <!-- With en-US localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\n/**\n * A filter used to remove the CDATA prefix and postfix.\n *\n * @return {function(string): string} Retult string\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nconst removeCDATA = function() {\n  return function(input) {\n    if (input) {\n      return input.replace(/<!\\[CDATA\\[(.*)\\]\\]>/, '$1');\n    }\n  };\n};\n\nexports.filter('removeCDATA', removeCDATA);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(null, [mainFilter, dimensionsFilter]);\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        endValue = beginValue;\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(expression)\n          .add(30, 'years')\n          .format('YYYY-MM-DD');\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(expression)\n          .format('YYYY-MM-DD');\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).utc().format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.utc().format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      if (options.bboxAsGETParam && bbox) {\n        params['bbox'] = bbox.join(',');\n      }\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensionsFilters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    if (dataSource.gmfLayer == undefined) {\n      return;\n    }\n    const id = olBase.getUid(dataSource.gmfLayer);\n    if (id == undefined) {\n      return;\n    }\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(source instanceof olSourceImageWMS ||\n          source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (const wmsLayerName of layersList) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layer.get('querySourceIds').indexOf(dataSource.id) >= 0 &&\n            dataSource.gmfLayer.layers.split(',').indexOf(wmsLayerName) >= 0)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer === undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bboxAsGETParam_ = options.bboxAsGETParam || false;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_,\n      bboxAsGETParam: this.bboxAsGETParam_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minDefValue = newVal || this.createDate_();\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minDefValue = newVal || this.createWeekAgoDate_();\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxDefValue = newVal || this.createDate_();\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_.bind(this));\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      this.updateContentTemplate_();\n    }\n\n    this.scope_.$watch(\n      () => this.contentTemplate,\n      () => this.updateContentTemplate_()\n    );\n  }\n\n  /**\n   *  @private\n   */\n  updateContentTemplate_() {\n    const scope = googAsserts.assert(this.contentScope || this.scope_);\n    const compiled = this.compile_(this.contentTemplate)(scope);\n    const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container .content-template-container');\n    displayWindow.empty();\n    displayWindow.append(/** @type {?} */ (compiled));\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '=?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * Url to redirect to after login success.\n   * @type {?string}\n   */\n  this.loginRedirectUrl = null;\n\n  /**\n   * Information message for the login form.\n   * @type {?string}\n   */\n  this.loginInfoMessage = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.userMustChangeItsPassword = false;\n\n  $scope.$on('authenticationrequired', (event, args) => {\n    /** @type {angularGettext.Catalog} */\n    const gettextCatalog = $injector.get('gettextCatalog');\n    this.loginInfoMessage = gettextCatalog.getString(\n      'Some layers in this link are not accessible to unauthenticated users. ' +\n      'Please log in to see whole data.');\n    this.loginRedirectUrl = args.url;\n    this.loginActive = true;\n\n    const unbind = $scope.$watch(() => this.loginActive, () => {\n      if (!this.loginActive) {\n        this.loginInfoMessage = null;\n        this.loginRedirectUrl = null;\n        unbind();\n      }\n    });\n  });\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    if (this.loginRedirectUrl) {\n      window.location = this.loginRedirectUrl;\n      return;\n    }\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    const functionalities = this.gmfUser.functionalities;\n\n    // Enable filter tool in toolbar\n    if (functionalities &&\n        'filterable_layers' in functionalities &&\n        functionalities['filterable_layers'].length > 0) {\n      this.filterSelectorEnabled = true;\n    }\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n\n    // Reload themes and background layer when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n\n    if (evt.type !== 'ready') {\n      const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n      this.gmfThemeManager.updateCurrentTheme(themeName, previousThemeName);\n    }\n    this.setDefaultBackground_(null);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorEnabled = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n  $scope.$watch(\n    () => this.gmfUser.is_password_changed,\n    (value) => {\n      this.userMustChangeItsPassword = value === false;\n    }\n  );\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, gettextCatalog, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, gettextCatalog, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/lengthComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/lengthComponent', require('./lengthComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter, gettextCatalog) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), this.gettextCatalog_, {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    'change:dirty',\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:drawing',\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:valid',\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, coordFormat, options = /** @type {ngeox.interaction.MeasureOptions} */ ({})) {\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */(options));\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/pointComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/pointComponent', require('./pointComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ = function() {\n  if (this.measure.getActive()) {\n    const view = this.map.getView();\n    this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n      view,\n      'propertychange',\n      this.ngeoDebounce_(\n        this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n      this);\n    this.getMeasure_();\n  } else if (this.mapViewPropertyChangeEventKey_) {\n    olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n    this.mapViewPropertyChangeEventKey_ = null;\n  }\n};\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.module\n */\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileMeasureModule', [\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.module\n */\nimport gmfMobileNavigationComponent from 'gmf/mobile/navigation/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileNavigationModule', [\n  gmfMobileNavigationComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.geolocation.mobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport * as olEasing from 'ol/easing.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMobileGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'mobile-geolocation-error'\n};\n\n/**\n * Provide a \"mobile geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-mobile-geolocation\n *        ngeo-mobile-geolocation-map=\"ctrl.map\"\n *        ngeo-mobile-geolocation-options=\"ctrl.mobileGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/mobilegeolocation.html](../examples/mobilegeolocation.html)\n *\n * @htmlAttribute {ol.Map} ngeo-mobile-geolocation-map The map.\n * @htmlAttribute {ngeox.MobileGeolocationDirectiveOptions} ngeo-mobile-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMobileGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getMobileMapFn': '&ngeoMobileGeolocationMap',\n      'getMobileGeolocationOptionsFn': '&ngeoMobileGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationMobileController'\n  };\n};\n\n\nexports.directive('ngeoMobileGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoMobileGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  gettextCatalog, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggleTracking.bind(this));\n\n  const map = $scope['getMobileMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getMobileGeolocationOptionsFn']() || {};\n  googAsserts.assertObject(options);\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection(),\n    trackingOptions: /** @type {GeolocationPositionOptions} */ ({\n      enableHighAccuracy: true\n    })\n  });\n\n  if (options.autorotate) {\n    this.autorotateListener();\n  }\n\n  // handle geolocation error.\n  this.geolocation_.on('error', (error) => {\n    this.untrack_();\n    let msg;\n    switch (error.code) {\n      case 1:\n        msg = gettextCatalog.getString('User denied the request for Geolocation.');\n        break;\n      case 2:\n        msg = gettextCatalog.getString('Location information is unavailable.');\n        break;\n      case 3:\n        msg = gettextCatalog.getString('The request to get user location timed out.');\n        break;\n      default:\n        msg = gettextCatalog.getString('Geolocation: An unknown error occurred.');\n        break;\n    }\n    this.notification_.error(msg);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  });\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * Whether to recenter the map at the position it gets updated\n   * @type {boolean}\n   * @private\n   */\n  this.follow_ = false;\n\n  /**\n   * A flag used to determine whether the view was changed by me or something\n   * else. In the latter case, stop following.\n   * @type {boolean}\n   * @private\n   */\n  this.viewChangedByMe_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n    this.setPosition_();\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', () => {\n    this.setPosition_();\n  });\n\n  const view = map.getView();\n\n  olEvents.listen(view, 'change:center', this.handleViewChange_, this);\n\n  olEvents.listen(view, 'change:resolution', this.handleViewChange_, this);\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggleTracking = function() {\n  if (this.geolocation_.getTracking()) {\n    // if map center is different than geolocation position, then track again\n    const currentPosition = this.geolocation_.getPosition();\n    // if user is using Firefox and selects the \"not now\" option, OL geolocation\n    // doesn't return an error\n    if (currentPosition === undefined) {\n      this.untrack_();\n      this.$scope_.$emit(exports.GeolocationEventType.ERROR, null);\n      return;\n    }\n    googAsserts.assert(currentPosition !== undefined);\n    // stop tracking if the position is close to the center of the map.\n    const center = this.map_.getView().getCenter();\n    const diff = Math.abs(currentPosition[0] - center[0]) + Math.abs(currentPosition[1] - center[1]);\n    if (diff < 2) {\n      this.untrack_();\n    } else {\n      this.untrack_();\n      this.track_();\n    }\n  } else {\n    this.track_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.track_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.follow_ = true;\n  this.geolocation_.setTracking(true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.untrack_ = function() {\n  this.featureOverlay_.clear();\n  this.follow_ = false;\n  this.geolocation_.setTracking(false);\n  this.notification_.clear();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function() {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  const accuracy = this.accuracyFeature_.getGeometry();\n\n  if (this.follow_) {\n    this.viewChangedByMe_ = true;\n    if (this.zoom_ !== undefined) {\n      this.map_.getView().setCenter(position);\n      this.map_.getView().setZoom(this.zoom_);\n    } else if (accuracy) {\n      const size = /** @type {!ol.Size} */ (this.map_.getSize());\n      this.map_.getView().fit(/** @type {!ol.geom.Polygon} */ (accuracy), size);\n    }\n    this.viewChangedByMe_ = false;\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleViewChange_ = function(event) {\n  if (this.follow_ && !this.viewChangedByMe_) {\n    this.follow_ = false;\n  }\n};\n\n\n// Orientation control events\nexports.Controller_.prototype.autorotateListener = function() {\n  let currentAlpha = 0;\n  if (window.hasOwnProperty('ondeviceorientationabsolute')) {\n    window.addEventListener('deviceorientationabsolute', (evt) => {\n      currentAlpha = this.handleRotate_(evt.alpha, currentAlpha);\n    }, true);\n  } else if (window.hasOwnProperty('ondeviceorientation')) {\n    window.addEventListener('deviceorientation', (evt) => {\n      if (evt.webkitCompassHeading) { // check for iOS property\n        currentAlpha = this.handleRotate_(-evt.webkitCompassHeading, currentAlpha);\n      } else { // non iOS\n        currentAlpha = this.handleRotate_(evt.alpha - 270, currentAlpha);\n      }\n    }, true);\n  } else {\n    console.error('Orientation is not supported on this device');\n  }\n};\n\n/**\n * Handle rotation.\n * @param {number} eventAlpha .\n * @param {number} currentAlpha .\n * @return {number} .\n * @private\n */\nexports.Controller_.prototype.handleRotate_ = function(eventAlpha, currentAlpha) {\n  if (this.geolocation_.getTracking() && Math.abs(eventAlpha - currentAlpha) > 0.2) {\n    currentAlpha = eventAlpha;\n    const radAlpha = currentAlpha * Math.PI / 180;\n    this.map_.getView().animate({\n      rotation: radAlpha,\n      duration: 350,\n      easing: olEasing.linear\n    });\n  }\n  return currentAlpha;\n};\n\n\nexports.controller('ngeoGeolocationMobileController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractMobileController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfMobileMeasureModule from 'gmf/mobile/measure/module.js';\nimport gmfMobileNavigationModule from 'gmf/mobile/navigation/module.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\nimport ngeoGeolocationMobile from 'ngeo/geolocation/mobile.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Mobile application abstract controller.\n *\n * This file includes `goog.require`'s mobile components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.searchOverlayVisible = false;\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.searchListeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    open: function() {\n      this.searchOverlayVisible = true;\n    }.bind(this),\n    close: function() {\n      this.searchOverlayVisible = false;\n    }.bind(this)\n  });\n\n  const positionFeatureStyle = config.positionFeatureStyle || new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = config.accuracyFeatureStyle || new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.MobileGeolocationDirectiveOptions}\n   * @export\n   */\n  this.mobileGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: config.geolocationZoom,\n    autorotate: config.autorotate\n  };\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine(),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions:\n        config.mapInteractions ||\n        olInteraction.defaults({pinchRotate: true})\n  });\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  this.manageResize = true;\n  this.resizeTransition = 500;\n\n  // Close right nave on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.navIsVisible()) {\n      this.rightNavVisible = false;\n    }\n  });\n\n  /**\n   * @const {string}\n   * @export\n   */\n  this.redirectUrl = $injector.get('redirectUrl');\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\n\n/**\n * @export\n */\nexports.prototype.toggleLeftNavVisibility = function() {\n  this.leftNavVisible = !this.leftNavVisible;\n};\n\n\n/**\n * @export\n */\nexports.prototype.toggleRightNavVisibility = function() {\n  this.rightNavVisible = !this.rightNavVisible;\n};\n\n\n/**\n * Hide both navigation menus.\n * @export\n */\nexports.prototype.hideNav = function() {\n  this.leftNavVisible = this.rightNavVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if one of the navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.navIsVisible = function() {\n  return this.leftNavVisible || this.rightNavVisible;\n};\n\n\n/**\n * Hide search overlay.\n * @export\n */\nexports.prototype.hideSearchOverlay = function() {\n  this.searchOverlayVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if the left navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.leftNavIsVisible = function() {\n  return this.leftNavVisible;\n};\n\n\n/**\n * @return {boolean} Return true if the right navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.rightNavIsVisible = function() {\n  return this.rightNavVisible;\n};\n\n\n/**\n * Open the menu with corresponding to the data-target attribute value.\n * @param {string} target the data-target value.\n * @export\n */\nexports.prototype.openNavMenu = function(target) {\n  const navElements = document.getElementsByClassName('gmf-mobile-nav-button');\n  for (let i = 0; i < navElements.length; i++) {\n    const element = navElements[i];\n    if (element.dataset && element.dataset.target === target) {\n      element.click();\n    }\n  }\n};\n\n\nexports.module = angular.module('GmfAbstractMobileControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfMobileMeasureModule.name,\n  gmfMobileNavigationModule.name,\n  gmfQueryWindowComponent.name,\n  ngeoGeolocationMobile.name,\n]);\n\nexports.module.controller('AbstractMobileController', exports);\n\nexports.module.value('isMobile', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'tolerance': 10\n});\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.mobile.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractMobileController from 'gmf/controllers/AbstractMobileController.js';\nimport 'gmf/controllers/mobile.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractMobileController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractMobileController.call(this, {\n    autorotate: false,\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = [\n    {name: 'aster', unit: 'm'},\n    {name: 'srtm', unit: 'm'}\n  ];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractMobileController);\n\nexports.module = angular.module('Appmobile', [\n  appBase.module.name,\n  gmfControllersAbstractMobileController.module.name,\n]);\n\nexports.module.controller('MobileController', exports);\n\nexport default exports;\n","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && (!ctrl.valid)\\\" ng-click=ctrl.addPoint()> <span class=\\\"fa fa-check\\\"></span> {{'Set as starting point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.dirty ng-click=ctrl.addPoint()> <span class=\\\"fa fa-plus\\\"></span> {{'Add new point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && ctrl.valid && !ctrl.dirty\\\" ng-click=ctrl.finish()> <span class=\\\"fa fa-check\\\"></span> {{'Terminate' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.valid ng-click=ctrl.clear()> <span class=\\\"fa fa-repeat\\\"></span> {{'Clear' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style title=\\\"\\\"> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> <div class=content-template-container></div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open> <button class=collapse-button type=button ng-show=::!ctrl.desktop ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr ng-if=::$ctrl.enableEmail> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <div> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </div> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children> <span ng-switch=\\\"layertreeCtrl.node.children && !layertreeCtrl.layer.loading\\\"> <i ng-switch-when=true class=\\\"fa fa-fw gmf-layertree-state\\\"></i> <i ng-switch-when=false class=\\\"fa fa-fw fa-refresh fa-spin\\\"></i> </span> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = __webpack_public_path__ + \"crosshair.3aa99e.svg\";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> </div> <div ng-if=!$ctrl.gmfUser.username> <div class=\\\"alert alert-warning\\\" ng-show=$ctrl.infoMessage> <span>{{ $ctrl.infoMessage }}</span> </div> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}