{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/backgroundlayer.js","webpack:///./examples/partials/backgroundlayer.html"],"names":["module","angular","ngeoMapModule","name","run","$templateCache","put","require","backgroundlayerComponent","bindings","templateUrl","controller","component","BackgroundlayerController","$http","ngeoBackgroundLayerMgr","map","bgLayers","undefined","bgLayer","get","then","resp","data","backgroundLayerMgr_","prototype","change","layerSpec","layer","getLayer_","set","layerName","olLayerTile","source","ngeoSourceAsitVD","MainController","$scope","olMap","view","olView","projection","EPSG21781","resolutions","center","zoom","overlay","olLayerImage","olSourceImageWMS","url","params","serverType","addLayer"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAMA,MAAM,GAAGC,8CAAO,CAACD,MAAR,CAAe,KAAf,EAAsB,CACnC,SADmC,EAEnCE,0DAAa,CAACC,IAFqB,CAAtB,CAAf;AAMAH,MAAM,CAACI,GAAP,oBAA2B,UAACC,cAAD,EAAoB;AAE7CA,gBAAc,CAACC,GAAf,CAAmB,0BAAnB,EAA+CC,mBAAO,CAAC,iFAAD,CAAtD;AACD,CAHD;AAmBA,IAAMC,wBAAwB,GAAG;AAC/BC,UAAQ,EAAE;AACR,WAAO;AADC,GADqB;AAI/BC,aAAW,EAAE,0BAJkB;AAK/BC,YAAU,EAAE;AALmB,CAAjC;AASAX,MAAM,CAACY,SAAP,CAAiB,oBAAjB,EAAuCJ,wBAAvC;;AAUA,SAASK,yBAAT,CAAmCC,KAAnC,EAA0CC,sBAA1C,EAAkE;AAAA;;AAKhE,OAAKC,GAAL;AAKA,OAAKC,QAAL,GAAgBC,SAAhB;AAKA,OAAKC,OAAL,GAAe,IAAf;AAEAL,OAAK,CAACM,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CACE,UAACC,IAAD,EAAU;AACR,SAAI,CAACL,QAAL,GAAgBK,IAAI,CAACC,IAArB;AAEA,SAAI,CAACJ,OAAL,GAAe,KAAI,CAACF,QAAL,CAAc,CAAd,CAAf;AACD,GALH;AAWA,OAAKO,mBAAL,GAA2BT,sBAA3B;AACD;;AAQDF,yBAAyB,CAACY,SAA1B,CAAoCC,MAApC,GAA6C,YAAW;AACtD,MAAMC,SAAS,GAAG,KAAKR,OAAvB;AACA,MAAMS,KAAK,GAAG,KAAKC,SAAL,CAAeF,SAAS,CAAC,MAAD,CAAxB,CAAd;AACA,OAAKH,mBAAL,CAAyBM,GAAzB,CAA6B,KAAKd,GAAlC,EAAuCY,KAAvC;AACD,CAJD;;AAYAf,yBAAyB,CAACY,SAA1B,CAAoCI,SAApC,GAAgD,UAASE,SAAT,EAAoB;AAClE,MAAIA,SAAS,KAAK,OAAlB,EAA2B;AACzB,WAAO,IAAIC,wDAAJ,EAAP;AACD;;AAED,MAAMC,MAAM,GAAG,IAAIC,6DAAJ,CAAqB;AAClCN,SAAK,EAAEG;AAD2B,GAArB,CAAf;AAGA,SAAO,IAAIC,wDAAJ,CAAgB;AAACC,UAAM,EAANA;AAAD,GAAhB,CAAP;AACD,CATD;;AAYAjC,MAAM,CAACW,UAAP,CAAkB,8BAAlB,EACEE,yBADF;;AASA,SAASsB,cAAT,CAAwBC,MAAxB,EAAgC;AAK9B,OAAKpB,GAAL,GAAW,IAAIqB,iDAAJ,CAAU;AACnBC,QAAI,EAAE,IAAIC,kDAAJ,CAAW;AACfC,gBAAU,EAAEC,yEADG;AAEfC,iBAAW,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,CAAlC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,GAAhD,CAFE;AAGfC,YAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CAHO;AAIfC,UAAI,EAAE;AAJS,KAAX;AADa,GAAV,CAAX;AAaA,MAAMC,OAAO,GAAG,IAAIC,yDAAJ,CAAiB;AAC/Bb,UAAM,EAAE,IAAIc,6DAAJ,CAAqB;AAC3BP,gBAAU,EAAEtB,SADe;AAE3B8B,SAAG,EAAE,0BAFsB;AAG3BC,YAAM,EAAE;AAAC,kBAAU;AAAX,OAHmB;AAI3BC,gBAAU,EAAE;AAJe,KAArB;AADuB,GAAjB,CAAhB;AASA,OAAKlC,GAAL,CAASmC,QAAT,CAAkBN,OAAlB;AAED;;AAGD7C,MAAM,CAACW,UAAP,CAAkB,gBAAlB,EAAoCwB,cAApC;AAGenC,qEAAf,E;;;;;;;;;;;ACnKA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA,C","file":"backgroundlayer.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"backgroundlayer\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([3,\"commons\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import './backgroundlayer.css';\nimport angular from 'angular';\nimport ngeoSourceAsitVD from 'ngeo/source/AsitVD.js';\n\nimport EPSG21781 from '@geoblocks/proj/src/EPSG_21781.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.IModule} **/\nconst module = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name\n]);\n\n\nmodule.run(/* @ngInject */ ($templateCache) => {\n  // @ts-ignore: webpack\n  $templateCache.put('partials/backgroundlayer', require('./partials/backgroundlayer.html'));\n});\n\n\n/**\n * The application-specific background layer component.\n *\n * The component is based on Angular's select, ngOptions, ngModel, and\n * ngChange components. ngChange is used to avoid adding a watcher on\n * the ngModel expression.\n *\n * Note: we don't need two-way binding for ngModel here, but using ::\n * for the ngModel expression doesn't actually make a difference. This\n * is because ngModel doesn't actually watch the ngModel expression.\n *\n * @type {!angular.IComponentOptions}\n */\nconst backgroundlayerComponent = {\n  bindings: {\n    'map': '=appBackgroundlayerMap'\n  },\n  templateUrl: 'partials/backgroundlayer',\n  controller: 'AppBackgroundlayerController'\n};\n\n\nmodule.component('appBackgroundlayer', backgroundlayerComponent);\n\n\n/**\n * @constructor\n * @param {angular.IHttpService} $http Angular http service.\n * @param {import(\"ngeo/map/BackgroundLayerMgr.js\").MapBackgroundLayerManager} ngeoBackgroundLayerMgr\n *    Background layer manager.\n * @ngInject\n */\nfunction BackgroundlayerController($http, ngeoBackgroundLayerMgr) {\n\n  /**\n   * @type {import(\"ol/Map.js\").default}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<Object>|undefined}\n   */\n  this.bgLayers = undefined;\n\n  /**\n   * @type {Object}\n   */\n  this.bgLayer = null;\n\n  $http.get('data/backgroundlayers.json').then(\n    (resp) => {\n      this.bgLayers = resp.data;\n      // use the first layer by default\n      this.bgLayer = this.bgLayers[0];\n    });\n\n  /**\n   * @type {import(\"ngeo/map/BackgroundLayerMgr.js\").MapBackgroundLayerManager}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n}\n\n\n/**\n * Function called when the user selects a new background layer through\n * the select element. The ngChange directive used in the partial calls\n * it.\n */\nBackgroundlayerController.prototype.change = function() {\n  const layerSpec = this.bgLayer;\n  const layer = this.getLayer_(layerSpec['name']);\n  this.backgroundLayerMgr_.set(this.map, layer);\n};\n\n\n/**\n * @param {string} layerName Layer name.\n * @return {import(\"ol/layer/Tile.js\").default} The layer.\n * @private\n */\nBackgroundlayerController.prototype.getLayer_ = function(layerName) {\n  if (layerName === 'blank') {\n    return new olLayerTile();\n  }\n\n  const source = new ngeoSourceAsitVD({\n    layer: layerName\n  });\n  return new olLayerTile({source});\n};\n\n\nmodule.controller('AppBackgroundlayerController',\n  BackgroundlayerController);\n\n\n/**\n * @constructor\n * @param {angular.IScope} $scope Controller scope.\n * @ngInject\n */\nfunction MainController($scope) {\n\n  /**\n   * @type {import(\"ol/Map.js\").default}\n   */\n  this.map = new olMap({\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [1000, 500, 200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 1\n    })\n  });\n\n  /**\n   * An overlay layer.\n   * @type {import(\"ol/layer/Image.js\").default}\n   */\n  const overlay = new olLayerImage({\n    source: new olSourceImageWMS({\n      projection: undefined, // should be removed in next OL version\n      url: 'https://wms.geo.admin.ch',\n      params: {'LAYERS': 'ch.swisstopo.dreiecksvermaschung'},\n      serverType: 'mapserver'\n    })\n  });\n\n  this.map.addLayer(overlay);\n\n}\n\n\nmodule.controller('MainController', MainController);\n\n\nexport default module;\n","module.exports = function(obj) {\nobj || (obj = {});\nvar __t, __p = '';\nwith (obj) {\n__p += '<select class=\"form-control backgroundlayer-selector\"\\n  ng-options=\"layer.name for layer in ::$ctrl.bgLayers\"\\n  ng-model=\"$ctrl.bgLayer\" ng-change=\"$ctrl.change()\">\\n</select>\\n';\n\n}\nreturn __p\n}"],"sourceRoot":""}