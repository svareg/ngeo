{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/format/AttributeType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/CustomEvent.js","webpack:///./src/message/Message.js","webpack:///./src/layertree/Controller.js","webpack:///./src/utils.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/statemanager/Service.js","webpack:///./src/message/Notification.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/misc/Time.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/Group.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/statemanager/Location.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/draw/features.js","webpack:///./src/misc/File.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/mobile/navigation/component.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/Menu.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/format/Attribute.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/misc/filters.js","webpack:///./src/download/service.js","webpack:///./src/GeometryType.js","webpack:///./src/interaction/Measure.js","webpack:///./src/interaction/common.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/rule/Rule.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/map/component.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/download/Csv.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./contribs/gmf/src/mobile/measure/module.js","webpack:///./contribs/gmf/src/mobile/navigation/module.js","webpack:///./src/geolocation/mobile.js","webpack:///./contribs/gmf/src/controllers/AbstractMobileController.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/mobile/Controller.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.html","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/permalink/crosshair.svg","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","assert","condition","opt_message","var_args","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","assertInstanceof","type","assertObjectPrototypeIsIntact","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","undefined","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","olBase","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","olArray","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","getIds","item","array","forEach","child","callback","layer","set","metadata","dimensions","ids","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","opt_params","STYLES","styles","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref","key","createBasicWMSLayer","layers","credential","fail","layerGroupCreationFn","orderedChildren","map","x","reverse","promises","all","collection","filter","olCollection","createBasicGroup","promiseSuccessFn","background_layers","itemType","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","config","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeoMapLayerHelper","service","_inherits","_ngeoDatasourceDataSo","options","_classCallCheck","_possibleConstructorReturn","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","ogcLayer","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","maxRes","minRes","inMinRange","inMaxRange","inRange","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeoFormatAttributeType","share","myActive","activeDimensions","itsActive","_createClass","time","range","lower","upper","end","start","active","timeRangeValue","supportsOGCQueries","_iterator5","_isArray5","_i5","_ref5","ngeoDatasourceDataSource","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","DATALAYERGROUP_NAME","EXTERNALLAYERGROUP_NAME","COORDINATES_LAYER_NAME","PermalinkParam","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","detail","olEventsEvent","showMessage","show","msgObjects","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObject","defaultType","msg","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","index","indexOf","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","addLayer","getLayers","getArray","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","Visitor","traverseDepthFirst","visitor","decision","stop","controller","toMulti","geometry","multiGeom","olGeomPoint","olGeomMultiPoint","appendPoint","olGeomLineString","olGeomMultiLineString","appendLineString","olGeomPolygon","olGeomMultiPolygon","appendPolygon","isSafari","navigator","userAgent","colorZeroPadding","hex","rgbArrayToHex","rgb","g","b","Error","hexR","toString","hexG","hexB","decodeQueryString","queryString","queryData","pairs","substring","split","pair","indexOfEquals","decodeURIComponent","encodeQueryString","queryItem","encodeURIComponent","deleteCondition","event","olEventsCondition","extentToRectangle","extent","getTopLeft","getTopRight","getBottomRight","getBottomLeft","featureUidToGroupIndex_","groups_","source_","olSourceVector","useSpatialIndex","layer_","olLayerVector","source","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","featureUid","features","removeFeature","clear","olObj","getLayer","getFeatureOverlay","styleFunction","olStyleDefaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","olStyleStyle","defaultFunction","toStyleFunction","resolution","$filter","$filter_","gettextCatalog_","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","secondResolution","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","mode","interaction","olInteractionInteraction","getActive","setActive","olLayerBase","getVisible","setVisible","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","decrementLoadCount_","decrement_","on","olEvent","newLayer","element","getSource","olSourceTile","olSourceImage","$applyAsync","load_count","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","id","rootChild","grp","cancel","unshift","addGroupByName","groupName","_this4","gmfThemeThemes","addGroupByLayerName","layerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","removeGroup","found","removeAll","cloneGroupNode_","names","clone","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeoMessageMessage","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeoMessageNotification","ngeoStatemanagerService","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","opt_customSourceOptions","opt_customLayerOptions","FORMAT","LAYERS","olServerType","assign","serverType","crossOrigin","olSourceImageWMS","updateParams","layerOptions","olLayerImage","createBasicWMSLayerFromDataSource","visible","capabilitiesURL","opt_matrixSet","opt_dimensions","opt_customOptions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","olSourceWMTS","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","Infinity","opt_layers","OlLayerGroup","setLayers","getGroupFromMap","getLayerGroup","existingGroup","getFlatLayers","sublayers","hasGroupLayer","sublayer","getFlatLayers_","computedOpacity","opacity","getLayerByName","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","Math","round","olUri","isLayerVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","setZIndexToFirstLevelChildren","ZIndex","innerGroupLayers","innerLayer","setZIndex","updateWMSLayerState","getQuerySourceIds","NOT","OR","collection_","map_","listenerKeys_","handleDataSourcesAdd_","bindMap_","view","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","evt","target","olView","syncDataSourceToResolution_","supportsDynamicInRange","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmfLayertreeTreeManager","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","parseInt","classNames","el","html","addClass","delay","CacheItem","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","inAMixedGroup","isOneParentNotMixed_","layerGroup","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","ngeoMiscWMSTime","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","dataSourcesCollection_","dataSources","title_","title","destroy","getDataSourceState","VisibilityState","ON","OFF","addDataSource","removeDataSource","remove","toggleVisibilityState","visibleToSet","visibilityState","otherState","INDETERMINATE","factory_","func","wait","invokeApply","timeout","_len","args","_key","context","later","factory","addListenerKey","initListenerKey_","clearListenerKey","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","search","fragment_","hash","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","keys","getFragmentParamKeys","getParamKeysWithPrefix","prefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","locationMock","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","$inject","_olEventsEventTarget","authenticationBaseUrl","gmfUser","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","resp","respData","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","setUser_","ngeoCustomEvent","user","emitEvent","username","role_name","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","short_url","status","postShortUrl_","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","featuresCollection_","wrapX","getExtent","FileGroup_inherits","_ngeoDatasourceGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","injector","unregister_","ngeoDatasourceFile","registerDataSource_","handleDataSourceVisibleChange_","oldValue","unregisterDataSource_","ngeoDatasourceGroup","OGCGroup_inherits","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_createClass","WMSGroup_inherits","_ngeoDatasourceOGCGro","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGC","updateLayer_","concat","unregister","WMSGroup_createClass","ngeoDatasourceOGCGroup","ngeoDataSources","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","formats","imagePngType","includes","infoFormats","ngeoDatasourceWMSGroup","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","isEmpty","fit","rejections","content","readOptions","featureProjection","getProjection","isKml","olFormatKML","extractStyles","readFeatures","isGpx","olFormatGPX","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","ngeoMiscFile","ngeoDatasourceDataSources","proj4","Proj","projections","add","somerc","epsg21781def","epsg21781extent","defs","olProjProj4","olProj","setExtent","stringToCoordinates","str","coords","y","getProjectionList","projectionsCodes","code","proj","projection","toUpperCase","substr","tryProjections","coordinates","viewProjection","opt_projections","olExtent","e","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","catch","run","$templateCache","put","require","templateUrl","gmfLayertreeDatasourceGroupTreeTemplateUrl","Controller_","_class","scope_","getGroupUid","toggle","toggleDataSource","component","bindings","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","pointRecenterZoom_","pointRecenterZoom","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","image","olStyleIcon","src","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","getGeometry","getType","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","stateName","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","center","targetProjection","reprojectedCenter","getMapZoom","zoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","olFeature","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","class","text","removeOverlay","ngeoPopover","addOverlay","f","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","geom","size","getSize","maxZoom","enabled3d","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","refreshFirstLevelGroups","groupNodes","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","initialUri","href","authenticationRequired","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","writeFeatures","wfsLayer","numGroups","WFS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","showFeatures","wfsType","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","_ret","responses","wmsFindLayerCapability","_iterator6","_isArray6","_i6","_ref6","wmtsFindLayerCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iterator7","_isArray7","_i7","_ref7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iterator8","_isArray8","_i8","_ref8","wmsGroupLayerNames","_iterator10","_isArray10","_i10","_ref10","wmsDataSource","_iterator9","_isArray9","_i9","_ref9","wmtsGroupLayerNames","_iterator11","_isArray11","_i11","_ref11","wmtsDataSource","_iterator12","_isArray12","_i12","_ref12","startsWith","_iterator14","_isArray14","_i14","_ref14","_iterator15","_isArray15","_i15","_ref15","_iterator13","_isArray13","_i13","_ref13","ngeoDrawFeatures","ngeoMiscDebounce","ngeoMiscEventHelper","ngeoStatemanagerModule","OpenLayersLayerProperties","regexp","key1","key2","attrs","component_","ngeoDatePickerTemplateUrl","scope","onDateSelected","bindToController","restrict","link","lang","getCurrentLanguage","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","find","datepicker","edateOptions","dp","css","stopPropagation","directive","ngeoTime","ngeoTime_","isModeRange","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","sDate","eDate","isDate","initialOptions_","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","reason","onprogress","readAsText","load","opt_cancelP","LINE_STRING","POINT","POLYGON","opt_options","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeStyleFill_","opt_propertyName","propertyName","getColor","fillColorRgba","olColor","fillColorHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","font","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","lineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","point","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","polygon","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","parts","part","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","dx","dy","encodedCoordinates","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadDatasets","typeahead","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","$apply","open","close","suggestion","dataset","cursorchange","select","autocomplete","empty","datasetsempty","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","geojsonFormat","olFormatGeoJSON","bloodhoundOptions","remote","prepare","settings","transform","parsedResponse","featureCollection","dataProjection","datumTokenizer","queryTokenizer","Bloodhound","tokenizers","whitespace","remoteOptions","Function","sourceProjection","ngeoProjEPSG21781","parseBbox","bbox","regex","exec","removeHtmlTags","extractName","limit","origins","results","geom_st_box2d","setId","featureId","bhOptions","ngeoSearchSearchDirective","ngeoSearchCreateGeoJSONBloodhound","ngeoSearchCreateLocationSearchBloodhound","navCtrl","slid_","active_","header_","backButton_","back","back_","cls","ClassName_","ACTIVE","SLIDE","GO_BACK","slideOut","currentTarget","parents","SLIDE_OUT","removeClass","slideIn","attr","updateNavigationHeader_","click","toggleClass","BACK","nav","setTimeout","slideBack","pop","backIfActive","backDirective","backOnClickDirective","sortable","resetUpDragDrop","optionsObject","callbackFn","callbackCtx","sortableElement","off","sortableOptions","axis","classes","ui-sortable-helper","ui","oldIndex","newIndex","ret","defaultHandleClassName","handleClassName","elem","ngeoPopoverCtrl","anchorElm","popover","bodyElm","shown","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","gmfSearchFulltextSearch","ngeoMiscAutoProjection","ngeoMiscColorpickerComponent","ngeoSearchModule","ngeoMapFeatureOverlayMgr","ngeoMessagePopoverComponent","gmfSearchTemplateUrl_","gmfSearchTemplateUrl","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","$compile","ngeoAutoProjection","element_","compile_","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","highlight","datasets","displayColorPicker","listeners","$onInit","coordProj","initStyles_","getSearchStyle_","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","obj","datasource","groupValues","groupActions","filterLayername_","action","filterAction_","createDataset_","datasetTitle","groupsKey","labelKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","header","componentScope","compile","bloodhoundEngine","createAndInitBloodhound_","typeaheadDataset","ttAdapter","$new","act","opt_layerName","featureLayerName","mapProjectionCode","getCode","getBloodhoudRemoteOptions_","bloodhound","initialize","rateLimitWait","currentLanguage","xhrFields","suggestions","tt_source","olStyleRegularShape","points","radius2","angle","customStyles","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","layer_name","leaveSearch_","selectFromGMF_","actions","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","fitOptions","directive_","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeoLayertreeTemplateUrl","__webpack_exports__","originalEl","closeEl_","contentEl_","olOverlay","getElement","currentMap","getMap","contentEl","template","one","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfPermalinkPermalink","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","ngeoLayertreeComponent","subTemplateUrl","gmfLayertreeTemplate","openLinksInNewWindow","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfPermalink","gmfSyncLayertreeMap","gmfPermalink_","gmfSyncLayertreeMap_","groupNodeStates_","dataLayerGroup_","ngeoMiscSyncArrays","render","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","layersNames","scale","getScale_","getNumberOfLegendsObject","mpu","getMetersPerUnit","dpi","displayMetadata","metadataURL","gmfx","openIframePopup","afterReorder","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","ds","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","legend","parentNode","menuOptions","opt_overlayOptions","positioning","olOverlayPositioning","TOP_LEFT","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","coordinate","setPosition","documentElement","handleClickOut_","closest","originalEvent","Element","contains","pixel","ngModel","transclude","resizable","closable","$element_","$scope_","modal_","$postLink","dialog","draggable","handle","$render","modal","$viewValue","$setViewValue","$onDestroy","gmfAuthenticationService","ngeoMessageModalComponent","gmfAuthenticationTemplateUrl_","gmfAuthenticationTemplateUrl","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","infoMessage","AuthenticationController_","component_classCallCheck","gmfAuthenticationService_","notification_","changingPassword","userMustChangeItsPassword","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","messageType","gmfAuthenticationComponent","olObservable","mapUids_","mapUid","BACKGROUNDLAYERGROUP_NAME","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","hasUpdates","updatedDimensions","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","handleDestroy_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","gmfLayersUrl","EnumerateAttribute_classCallCheck","http_","promises_","getAttributeValues","promiseId","handleGetAttributeValues_","items","setGeometryType","geomRegex","geomType","olFormatXML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","alias","nillable","required","ngeoFormatAttribute","setAttributeByXsdType_","enumerations","choices","restrictions","restrictionNode","maxLengths","maxLength","Number","numType","NumberType","FLOAT","INTEGER","getGeometryAttribute","geomAttribute","WFSAttribute_classCallCheck","complexTypeElements","readFromComplexTypeElement_","ngeoFormatXSDAttribute","Scalify","numberFilter","filterFn","$locale","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","olMath","dms","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","duration","output","remainder","removeCDATA","download","fileName","opt_fileType","fileType","blob","Blob","saveAs","CIRCLE","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","RECTANGLE","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","getFormattedArea","area","olSphere","getFormattedCircleArea","circle","PI","getFormattedLength","getCoordinates","c1","c2","getFormattedPoint","dragging","helpMsg","olDom","appendChild","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","getDefaultDrawStyleFunction","createEditingStyle","getDefaultModifyStyleFunction","olInteractionPointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","ngeoInteractionCommon","downPx","clickPx","squaredDistance","pass","handlePointerMove_","startDrawing_","finishDrawing_","mapBrowserEvent","pointerHandleEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","line","olGeomCircle","olGeomGeometryCollection","setGeometry","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","olFunctions","unitPrefixFormat","numberFormat","ngeoInteractionMeasure","ngeoInteractionDrawAzimut","getGeometries","getFormattedAzimutRadius","olProjProjection","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","azimut","getAzimut","rad","acos","sqrt","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","point_to_px","offsetY","optNumber","attrib","getNumber","getOpacityProperty","getRadiusLine","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","mimeType","export_","opt_mimeType","clones","writeOptions","rotation","ngeoInteractionMeasureAzimut","panMapToFeature","opt_panDuration","panDuration","calculateExtent","intersectsExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","Rule_classCallCheck","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","type_","listenerKeys","getExpression","setExpression","reset","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_ngeoRuleRule","Date_classCallCheck","ngeoRuleRule","Geometry_inherits","Geometry_classCallCheck","Geometry_possibleConstructorReturn","featureProperties","feature_","format_","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","handleGeometryChange_","olGeomGeometry","Geometry_createClass","Select_inherits","Select_classCallCheck","Select_possibleConstructorReturn","choices_","Select_createClass","selectedChoices","stringExpression","Text_inherits","Text_classCallCheck","Text_possibleConstructorReturn","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleGeometry","ngeoRuleSelect","ngeoRuleText","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializedRule","serializeRule","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","olFormatFilter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","writeFilter","xmlSerializer","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","selectedChoice","numericExpression","field","momentEnd","subtract","startValue","ngeoMiscFeatureHelper","olXml","PARSERS_","readElement_","objectStack","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","ngeoRuleHelper","Querent_classCallCheck","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","queryableDataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","layerCapabilities","layerCapability","baseUrl","opt_cache","olFormatWMSCapabilities","combinedHash","dataSourceIdStr","dataSourceId","handleQueryResult_","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","wfsCount","tolerancePx","tolerance","getFeatureCommonOptions","bboxAsGETParam","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","registerCanceler_","meta","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","FEATURE_COUNT","projCode","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","combined","combinableDataSource","ogcDS","CombinedDataSources","ngeoFilterRuleHelper","Helper_classCallCheck","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","ngeoFormatWFSAttribute","Helper_createClass","ngeoQueryQuerent","gmfEnumerateAttribute","ngeoDataSourcesHelper","datasource_Helper_classCallCheck","gmfEnumerateAttribute_","ngeoDataSourcesHelper_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","choice","datasource_Helper_createClass","ngeoDatasourceHelper","gmfEditingEnumerateAttribute","OGC_inherits","_ngeoDatasourceOGC","OGC_classCallCheck","OGC_possibleConstructorReturn","gmfLayer_","OGC_createClass","WFSAliases_classCallCheck","describe","gmfWFSAliases","Manager_classCallCheck","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","treeCtrlsUnregister_","handleNgeoBackgroundLayerChange_","setDatasourceMap","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","newTreeCtrl","cacheItem","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","queryLayers","wmsLayers","childLayers","childLayer","ogcServerName","isSingleTile","wfsSupport","urlWfs","edge","vertex","dimensionsFilters","identifierAttributeField","timeAttribute","gmfDatasourceOGC","stateWatcherUnregister","handleTreeCtrlStateChange_","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","treeDataSource","_source$updateParams","layersParam","layersList","filterParam","hasFilter","wmsLayerName","dsLayer","currentTimeParam","previousBackgroundLayer","currentBackgroundLayer","gmfDatasourceWFSAliases","gmfDatasourceHelper","gmfDatasourceManager","ngeoPopupTemplateUrl","preventDefault","autoDestroy_","sce_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","ngeoMessagePopupComponent","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","showInPopup","popup","button","ngeoMessagePopup","ngeoMessageDisclaimer","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","save","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","ngeoQueryResult","MapQuerent_classCallCheck","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","bboxAsGETParam_","dataSourceNames_","pending","handleResult_","total","sources","queried","tooManyResults","idStr","querentResultItem","typeSeparatedFeatures","filteredProperties","unset","featuresByType","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","prop","ngeoMiscBtnComponent","drawFeatureCtrl","olInteractionDraw","geometryFunction","maxPoints","br","verticesCount","ngeoDrawController","contMsg","ngeoInteractionMeasureArea","fromCircle","ngeoInteractionMeasureLength","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","handleDragEvent","handleDragEvent_","vertexFeature_","lastPixel_","modified_","rBush_","olStructsRBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","addFeature_","writeCircleGeometry_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","olCoordinate","setGeometryCoordinates_","olMapBrowserPointerEvent","handled","getInteracting","handlingDownUpSequence","pixelCoordinate","getCoordinateFromPixel","sortByDistance","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","min","vertexSegments","handleDown_","handleDrag_","handleUp_","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","forEachFeatureAtPixel","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyParams","otherFeatures_","olInteractionModify","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","setState_","interactions","handleFeaturesAdd_","handleFeaturesRemove_","getFeatureCollection_","isRectangle","keyPressListenerKey_","coordinate_","centerCoordinate_","centerFeatures_","handleKeyUp_","getCenterCoordinate_","centerFeature","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","a1","rotate","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","getTargetElement","cursor","getGeometryCenterPoint_","toolContext","activePropertyName","registerTool","tool","opt_defaultActivate","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoDrawComponent","ngeoMiscDatepickerComponent","ngeoMiscToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","ngeoToolActivateMgr","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","ngeoToolActivateMgr_","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ngeoMiscToolActivate","drawnFeatures","menu_","selectedFeatures","modify_","ngeoInteractionModify","rotate_","ngeoInteractionRotate","translate_","ngeoInteractionTranslate","initializeInteractions_","modifyToolActivate","rotateToolActivate","translateToolActivate","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggleChoiceSelection","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","toolMgr","ruleFeature","cloneFeature","mapDiv","getViewport","handleMapContextMenu_","handleTranslateEnd_","handleRotateEnd_","registerInteractions_","unregisterInteractions_","drawnFeature","getRuleGeometryType","removeMenu_","getEventPixel","ngeoMenu","handleMenuActionClick_","ngeoFilterRuleComponent","ngeoQueryMapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","FilterController_","ngeoMapQuerent","filter_component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","ngeoFilterComponent","gmfFiltersSavedFilters","gmfFilterselectorTemplateUrl","gmfDataSourcesHelper","gmfSavedFilters","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","confirm","saveFilterLoadItem","filterItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","gmfFiltersFilterselectorComponent","pre","preLink","sliderOptions","onSliderReleased_","computeDates_","sliderUi","wmstime","getClosestValue_","dates","timeValueList","getTimeValueList_","max","maxNbValues","endDate","setFullYear","getFullYear","setMonth","getMonth","getDate","setSeconds","getSeconds","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","gmfLayertreeComponent","gmfLayertreeTimeSliderComponent","gmfPermalinkShareService","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","shareComponent_classCallCheck","gmfShareService_","shortLink","permalink_","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","gmfPermalinkShareComponent","mapViewChangePromise_","ensureSnapInteractionsOnTop","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","requestDeferred","deactivateItem_","firstTreeCtrl","firstNode","activateItem_","olInteractionSnap","loadItemFeatures_","loadAllItems_","Cache","WFSConfig","olMap","setTarget","manageResizeAttr","manageResizeProp","manageResize","resizeTransitionAttr","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","ngeoMapComponent","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","gmfPermalinkModule","gmfEditingSnapping","ngeoMapModule","gmfSnapping","ngeoFeatureOverlayMgr_","gmfSnapping_","gmfMapMousepositionTemplateUrl","control_","initOlControl_","removeControl","formatFn","filterAndArgs","olControlMousePosition","className","coordinateFormat","undefinedHTML","addControl","gmfMapComponent","gmfMapMousepositionComponent","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","columnDefs","translatedColumnHeaders","columnHeader","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","startDownload","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","isSelected","selectAll","unselectAll","rowId","invertSelection","ngeoGridConfig","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","targetUid","posClickedRow","posSelectedRows","currentRow","currentUid","posClosestRow","currentPos","currentDistance","rangeStart","rangeEnd","preventTextSelection","altKey","olHas","metaKey","ctrlKey","ngeoDownloadCsv","ngeoGridComponent","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSource","getMergedSource_","mergedSourceId","mergeSourceId","currentMergeSourceId","sourceLabels","containsSource","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","gridCreated","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","columns","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","downloadCsv","MOVE_BUFFER_RADIUS","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","events","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","validSwipe","deltaY","deltaX","isDefined","triggerHandler","$event","ngeoMiscSwipe","$animateProvider","classNameFilter","gmfDisplayquerywindowTemplateUrl","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","positionMax","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","gmfQueryGridComponent","gmfQueryWindowComponent","gmfSearchComponent","gmfThemeSelectorTemplateUrl","setThemes_","setTheme","gmfThemeSelectorComponent","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","updateContentTemplate_","compiled","displayWindow","clear_","displaywindowComponent_createClass","trustAsResourceUrl","control","olControlControl","changeEvent","files","availableLanguages","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","arr","supportedLanguages","ngeoMiscControlComponent","ngeoMiscFilereaderComponent","ngeoMiscGetBrowserLanguage","ngeoMiscSortableComponent","clickEventKey_","pointerMoveEventKey_","handleMapClick_","sourceids","hit","forEachLayerAtPixel","activate_","cursorHover","deactivate_","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","clearResult_","typeName","createFilters_","issueRequest_","padding","getExtent_","resultSource","reduce","createFiltersForGroup","filterDef","or_","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","gmfAuthentication","updateHasEditableLayers_","loginRedirectUrl","loginInfoMessage","loginActive","userChange","roleId","filterSelectorEnabled","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","setDefaultBackground_","searchDatasources","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","getBrowserLanguage","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapTools","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","updateCurrentBackgroundLayer_","skipPermalink","background","defaultBasemapArray","default_basemap","defaultBasemapLabel","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","getLocationIcon","arrow","arrowWrapper","gmfAuthenticationModule","gmfBackgroundlayerselectorComponent","gmfDatasourceModule","gmfDisclaimerComponent","gmfFiltersModule","gmfLayertreeModule","gmfMapModule","gmfQueryExtraModule","gmfSearchModule","gmfThemeModule","ngeoMessageDisplaywindowComponent","ngeoMiscExtraModule","ngeoQueryMapQueryComponent","ngeoStatemanagerWfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","minPoints_","minPoints","sketchPoints_","handleViewCenterChange_","getDirty","getDrawing","getValid","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","olGeomSimpleGeometry","dirty","clearDrawing","finishDrawing","getCenter_","overlaySource","ngeoInteractionMobileDraw","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","drawInteraction","ngeoInteractionMeasureLengthMobile","addPoint","finish","deactivate","gmfRasterUrl","getRaster","Param","X","Y","handleGetRaster_","coordFormat","coordFormat_","dec","gmfRasterRasterService","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","gmfRaster_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","ngeoInteractionMeasurePointMobile","translate","getMeasure_","ctn","childEl","previousCtn","getElementsByClassName","LayerConfig","gmfMobileMeasureLengthComponent","gmfMobileMeasurePointComponent","gmfMobileNavigationComponent","GeolocationEventType","getMobileMapFn","getMobileGeolocationOptionsFn","toggleTracking","geolocation_","olGeolocation","trackingOptions","enableHighAccuracy","autorotate","autorotateListener","untrack_","positionFeature_","positionFeatureStyle","accuracyFeature_","accuracyFeatureStyle","zoom_","follow_","viewChangedByMe_","getAccuracyGeometry","setPosition_","getTracking","currentPosition","getPosition","diff","track_","setTracking","currentAlpha","addEventListener","handleRotate_","alpha","webkitCompassHeading","eventAlpha","radAlpha","easing","olEasing","searchOverlayVisible","searchListeners","mobileGeolocationOptions","geolocationZoom","viewConfig","mapViewConfig","gmfControllersAbstractAppController","pixelRatio","mapPixelRatio","controls","mapControls","olControlScaleLine","olControlZoom","zoomInTipLabel","zoomOutTipLabel","olControlRotate","tipLabel","mapInteractions","olInteraction","pinchRotate","navIsVisible","redirectUrl","toggleLeftNavVisibility","toggleRightNavVisibility","hideNav","hideSearchOverlay","leftNavIsVisible","rightNavIsVisible","openNavMenu","navElements","gmfMobileMeasureModule","gmfMobileNavigationModule","ngeoGeolocationMobile","$compileProvider","debugInfoEnabled","epsg2056def","epsg2056extent","gmfControllersAbstractMobileController","resolutions","elevationLayersConfig","searchCoordinatesProjections","ngeoProjEPSG2056","raven","Raven","addPlugin","RavenPluginsAngular","install","appBase"],"mappings":"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","file":"mobile.ace19a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([294,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n\n      // Manage WMS styles\n      const opt_params = {STYLES: gmfLayerWMS.styles};\n      if (gmfLayer.dimensions) {\n        for (const [key, value] of Object.entries(gmfLayer.dimensions)) {\n          opt_params[key] = value;\n        }\n      }\n\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        opt_params,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport {getTopLeft, getTopRight, getBottomLeft, getBottomRight} from 'ol/extent.js';\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexport function extentToRectangle(extent) {\n  return [\n    getTopLeft(extent),\n    getTopRight(extent),\n    getBottomRight(extent),\n    getBottomLeft(extent),\n    getTopLeft(extent),\n  ];\n}\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n  let secondResolution = undefined;\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n    secondResolution = gettextCatalog.getString('M/d/yyyy HH:MM:ss');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    case 'second':\n      if (secondResolution) {\n        return this.$filter_('date')(date, secondResolution, utc);\n      } else {\n        return date.toISOString().replace(/\\.\\d{3}/, '');\n      }\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customSourceOptions Some initial options.\n * @param {Object=} opt_customLayerOptions The layer opacity.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin,\n  opt_customSourceOptions, opt_customLayerOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customSourceOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  const layerOptions = Object.assign({}, opt_customLayerOptions, {source});\n  return new olLayerImage(layerOptions);\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    const styles = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n        const style = (treeCtrl.node.style !== undefined) ? treeCtrl.node.style : '';\n        styles.push(style);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(','),\n      'STYLES': styles.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n\n    const opt_params = {STYLES: gmfLayerWMS.style};\n\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      opt_params, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n    }));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GPX. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    url = service['OnlineResource'] || url;\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML({extractStyles: false}).readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {gmfx.User} gmfUser User.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation, gmfUser) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = gmfPermalinkOptions.pointRecenterZoom;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  /**\n   * @type {gmfx.User}\n   * @private\n   */\n  this.user_ = gmfUser;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleIcon({\n        src: require('gmf/permalink/crosshair.svg')\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  const geom = typeof oeFeature !== 'undefined' && oeFeature !== null ? oeFeature.getGeometry() : undefined;\n  if (geom) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    let maxZoom;\n    if (geom instanceof olGeomPoint || geom instanceof olGeomMultiPoint) {\n      maxZoom = this.pointRecenterZoom_;\n    }\n    view.fit(geom.getExtent(), {\n      size,\n      maxZoom\n    });\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  const initialUri = window.location.href;\n  let authenticationRequired = false;\n\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        } else {\n          authenticationRequired = true;\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        if (authenticationRequired && this.user_.role_id === null) {\n          this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n        }\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers == '' ? [] : groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                if (enable) {\n                  groupLayersArray.splice(groupLayersArray.indexOf(treeCtrl.node.name), 1);\n                }\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n            if (groupLayersArray.length > 0) {\n              authenticationRequired = true;\n            }\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n\n      if (authenticationRequired && this.user_.role_id === null) {\n        this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n      }\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport Bloodhound from 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport Bloodhound from 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.component\n */\nimport googAsserts from 'goog/asserts.js';\nconst exports = angular.module('gmfMobileNav', []);\n\n\n/**\n * An \"gmf-mobile-nav\" directive defining the behavior of a tree-structured menu.\n *\n * The directive is to be placed on a `nav` element, with the following\n * structure:\n * <nav gmf-mobile-nav>\n *   <header>\n *     <a class=\"gmf-mobile-nav-go-back\" href=\"#\"></a>\n *   </header>\n *   <div class=\"gmf-mobile-nav-active gmf-mobile-nav-slide\">\n *     <ul>\n *       <li>\n *         <a href data-target=\"#devices\">Devices</a>\n *       </li>\n *       <li>\n *         <a href data-target=\"#vehicles\">Vehicles</a>\n *       </li>\n *     </ul>\n *   </div>\n *   <div id=\"devices\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Devices\">\n *     <ul>\n *       <li>Mobile Phones</li>\n *       <li>Televisions</li>\n *     </ul>\n *   </div>\n *   <div id=\"vehicles\" class=\"gmf-mobile-nav-slide\" data-header-title=\"Vehicles\">\n *     <ul>\n *       <li>Cars</li>\n *       <li>Planes</li>\n *       <li>Bicycles</li>\n *     </ul>\n *   </div>\n * </nav>\n *\n * When an element slides in the directive changes the text in the header.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'gmfMobileNavController as navCtrl',\n    bindToController: true,\n    scope: true,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      navCtrl.init(element);\n    }\n  };\n};\n\nexports.directive('gmfMobileNav', exports.component_);\n\n\n/**\n* @constructor\n* @private\n* @ngInject\n* @ngdoc controller\n* @ngname gmfMobileNavController\n*/\nexports.Controller_ = function() {\n  /**\n   * Stack of slid-in items.\n   * @private\n   * @type {Array.<!jQuery>}\n   */\n  this.slid_ = [];\n\n  /**\n   * Currently active sliding box.\n   * @private\n   * @type {jQuery}\n   */\n  this.active_ = null;\n\n  /**\n   * The navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.header_ = null;\n\n  /**\n   * The back button in the navigation header.\n   * @private\n   * @type {jQuery}\n   */\n  this.backButton_ = null;\n\n  /**\n   * Export the back function already bound to `this`. This makes sure that\n   * the function is called on the right context, when it is passed to an\n   * attribute in a template\n   * @export\n   */\n  this.back = this.back_.bind(this);\n};\n\nexports.controller('gmfMobileNavController', exports.Controller_);\n\n\n/**\n * Initialize the directive with the linked element.\n * @param {angular.JQLite} element Element.\n */\nexports.Controller_.prototype.init = function(element) {\n  const cls = exports.Controller_.ClassName_;\n  this.active_ = $(element.find(`.${cls.ACTIVE}.${cls.SLIDE}`));\n  this.header_ = $(element.find('> header'));\n  this.backButton_ = $(element.find(`header > .${cls.GO_BACK}`));\n\n  // watch for clicks on \"slide-in\" elements\n  element.find('[data-toggle=slide-in]').on('click', (evt) => {\n\n    const cls = exports.Controller_.ClassName_;\n\n    // the element to slide out is the div.slide parent\n    const slideOut = $(evt.currentTarget).parents(`.${cls.SLIDE}`);\n    googAsserts.assert(slideOut.length === 1);\n\n    // push the item to the selected stack\n    this.slid_.push(slideOut);\n\n    // slide the \"old\" element out\n    slideOut.addClass(cls.SLIDE_OUT).removeClass(cls.ACTIVE);\n\n    // element to slide in\n    const slideIn = $($(evt.currentTarget).attr('data-target'));\n    googAsserts.assert(slideIn.length === 1);\n\n    // slide the \"new\" element in\n    slideIn.addClass(cls.ACTIVE);\n\n    // update the navigation header\n    this.updateNavigationHeader_(slideIn, false);\n\n    this.active_ = slideIn;\n  });\n\n  // watch for clicks on the header \"go-back\" link\n  this.backButton_.click(this.back.bind(this));\n};\n\n\n/**\n * @param {!jQuery} active The currently active sliding box.\n * @param {boolean} back Whether to move back.\n * @private\n */\nexports.Controller_.prototype.updateNavigationHeader_ = function(\n  active, back) {\n  const cls = exports.Controller_.ClassName_;\n  this.header_.toggleClass(cls.BACK, back);\n\n  // remove any inactive nav\n  this.header_.find(`nav:not(.${cls.ACTIVE} +)`).remove();\n\n  // deactivate the currently active nav\n  this.header_.find(`nav.${cls.ACTIVE}`).removeClass(cls.ACTIVE)\n    .addClass(cls.SLIDE_OUT);\n\n  // show the back button when relevant\n  this.backButton_.toggleClass(cls.ACTIVE, this.slid_.length > 0);\n\n  // create a new nav\n  const nav = $('<nav>');\n  nav.append($('<span>', {\n    text: active.attr('data-header-title')\n  }));\n  this.header_.append(nav);\n\n  // Delay the activation of the new navigation so that the previous\n  // one is properly deactivated. This prevents weird animation\n  // effects.\n  window.setTimeout(() => {\n    // fix for safari: the following 3 lines force that the position\n    // of the newly inserted element is calculated.\n    // see http://stackoverflow.com/a/3485654/119937\n    nav.css('display', 'none');\n    nav.offset();\n    nav.css('display', '');\n\n    window.setTimeout(() => {\n      // fix: calling `position()` makes sure that the animation\n      // is always run\n      nav.position();\n      nav.addClass(exports.Controller_.ClassName_.ACTIVE);\n    }, 0);\n  }, 0);\n};\n\n\n/**\n * Return to the previous slide.\n * @private\n */\nexports.Controller_.prototype.back_ = function() {\n  if (this.slid_.length <= 0) {\n    return;\n  }\n\n  const cls = exports.Controller_.ClassName_;\n\n  // slide active item to the right\n  this.active_.removeClass(cls.ACTIVE);\n\n  // get the previously active item\n  const slideBack = this.slid_.pop();\n\n  // slide previous item to the right\n  slideBack.addClass(cls.ACTIVE).removeClass(cls.SLIDE_OUT);\n\n  // update the navigation header\n  this.updateNavigationHeader_(slideBack, true);\n\n  this.active_ = slideBack;\n};\n\n\n/**\n * Return to the previous slide if the given element is active.\n *\n * @param {Element} element The element to check.\n */\nexports.Controller_.prototype.backIfActive = function(element) {\n  if (this.active_ !== null && this.active_.is(element)) {\n    this.back_();\n  }\n};\n\n\n/**\n * CSS class names toggled by the controller.\n * @enum {string}\n * @private\n */\n\nexports.Controller_.ClassName_ = {\n  ACTIVE: 'gmf-mobile-nav-active',\n  BACK: 'gmf-mobile-nav-back',\n  GO_BACK: 'gmf-mobile-nav-go-back',\n  SLIDE: 'gmf-mobile-nav-slide',\n  SLIDE_OUT: 'gmf-mobile-nav-slide-out'\n};\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}\n * with an expression. When the value of the expression changes and becomes\n * true, the navigation returns to the previous slide, if the slide is\n * currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-authentication class=\"gmf-mobile-nav-slide\"\n *         gmf-mobile-nav-back=\"authCtrl.gmfUser.username !== null\">\n *      </gmf-authentication>\n *\n * If `mainCtrl.gmfUser.username` becomes true and the login-slide is currently\n * active, the navigation will go back to the last slide.\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      scope.$watch(attrs['gmfMobileNavBack'], (newVal, oldVal) => {\n        if (newVal === true) {\n          navCtrl.backIfActive(element[0]);\n        }\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBack', exports.backDirective);\n\n\n/**\n * A directive to be used in conjunction with {@link gmf.mobile.navigation.component}.\n * The directive can be set on a slide element of {@link gmf.mobile.navigation.component}.\n * When the element is clicked, the navigation returns to the previous slide if\n * the slide is currently active.\n *\n * Example:\n *\n *    <nav class=\"gmf-mobile-nav-left\" gmf-mobile-nav>\n *      ...\n *      <gmf-themeselector\n *         gmf-mobile-nav-back-on-click\n *         gmf-themeselector-currenttheme=\"mainCtrl.theme\">\n *      </gmf-themeselector>\n *\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n */\nexports.backOnClickDirective = function() {\n  return {\n    require: '^^gmfMobileNav',\n    restrict: 'A',\n    scope: false,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.mobile.navigation.component.Controller_} navCtrl Controller.\n     */\n    link: (scope, element, attrs, navCtrl) => {\n      element.on('click', () => {\n        navCtrl.backIfActive(element[0]);\n      });\n    }\n  };\n};\n\nexports.directive('gmfMobileNavBackOnClick', exports.backOnClickDirective);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport 'jquery-ui-touch-punch';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery';\nimport 'jquery-ui';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $postLink() {\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable({\n      'handle': '.modal-header'\n    });\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-info-message=\"mainCtrl.loginInfoMessage\"\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n * @htmlAttribute {string} gmf-authentication-info-message Message to show above the authentication form.\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange',\n    'infoMessage': '=?gmfAuthenticationInfoMessage'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.infoMessage = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.userMustChangeItsPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n    this.userMustChangeItsPassword = (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd)\n          .then(() => {\n            this.changePasswordReset();\n            this.setError_(\n              [gettextCatalog.getString('Your password has successfully been changed.')],\n              ngeoMessageMessage.Type.INFORMATION\n            );\n          })\n          .catch((err) => {\n            this.setError_(gettextCatalog.getString('Incorrect old password.'));\n          });\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @param {ngeoMessageMessage.Type} [messageType] Type.\n   * @private\n   */\n  setError_(errors, messageType) {\n    if (messageType == undefined) {\n      messageType = ngeoMessageMessage.Type.ERROR;\n    }\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: messageType\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n  const previous = bgGroup.getLayers().remove(this.getOpacityBgLayer(map));\n  const ZIndex = -100;\n  layer.setOpacity(previous ? previous.getOpacity() : 0);\n  layer.setVisible(previous ? previous.getVisible() : true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <!-- With en-US localization -->\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *      <br/>\n *      <!-- With en-US localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\n/**\n * A filter used to remove the CDATA prefix and postfix.\n *\n * @return {function(string): string} Retult string\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nconst removeCDATA = function() {\n  return function(input) {\n    if (input) {\n      return input.replace(/<!\\[CDATA\\[(.*)\\]\\]>/, '$1');\n    }\n  };\n};\n\nexports.filter('removeCDATA', removeCDATA);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(null, [mainFilter, dimensionsFilter]);\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        endValue = beginValue;\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(expression)\n          .add(30, 'years')\n          .format('YYYY-MM-DD');\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(expression)\n          .format('YYYY-MM-DD');\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).utc().format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.utc().format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      if (options.bboxAsGETParam && bbox) {\n        params['bbox'] = bbox.join(',');\n      }\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensionsFilters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    if (dataSource.gmfLayer == undefined) {\n      return;\n    }\n    const id = olBase.getUid(dataSource.gmfLayer);\n    if (id == undefined) {\n      return;\n    }\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(source instanceof olSourceImageWMS ||\n          source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (const wmsLayerName of layersList) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layer.get('querySourceIds').indexOf(dataSource.id) >= 0 &&\n            dataSource.gmfLayer.layers.split(',').indexOf(wmsLayerName) >= 0)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer === undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bboxAsGETParam_ = options.bboxAsGETParam || false;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_,\n      bboxAsGETParam: this.bboxAsGETParam_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minDefValue = newVal || this.createDate_();\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minDefValue = newVal || this.createWeekAgoDate_();\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxDefValue = newVal || this.createDate_();\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_.bind(this));\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      this.updateContentTemplate_();\n    }\n\n    this.scope_.$watch(\n      () => this.contentTemplate,\n      () => this.updateContentTemplate_()\n    );\n  }\n\n  /**\n   *  @private\n   */\n  updateContentTemplate_() {\n    const scope = googAsserts.assert(this.contentScope || this.scope_);\n    const compiled = this.compile_(this.contentTemplate)(scope);\n    const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container .content-template-container');\n    displayWindow.empty();\n    displayWindow.append(/** @type {?} */ (compiled));\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '=?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * Url to redirect to after login success.\n   * @type {?string}\n   */\n  this.loginRedirectUrl = null;\n\n  /**\n   * Information message for the login form.\n   * @type {?string}\n   */\n  this.loginInfoMessage = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.userMustChangeItsPassword = false;\n\n  $scope.$on('authenticationrequired', (event, args) => {\n    /** @type {angularGettext.Catalog} */\n    const gettextCatalog = $injector.get('gettextCatalog');\n    this.loginInfoMessage = gettextCatalog.getString(\n      'Some layers in this link are not accessible to unauthenticated users. ' +\n      'Please log in to see whole data.');\n    this.loginRedirectUrl = args.url;\n    this.loginActive = true;\n\n    const unbind = $scope.$watch(() => this.loginActive, () => {\n      if (!this.loginActive) {\n        this.loginInfoMessage = null;\n        this.loginRedirectUrl = null;\n        unbind();\n      }\n    });\n  });\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    if (this.loginRedirectUrl) {\n      window.location = this.loginRedirectUrl;\n      return;\n    }\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    const functionalities = this.gmfUser.functionalities;\n\n    // Enable filter tool in toolbar\n    if (functionalities &&\n        'filterable_layers' in functionalities &&\n        functionalities['filterable_layers'].length > 0) {\n      this.filterSelectorEnabled = true;\n    }\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n\n    // Reload themes and background layer when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    this.setDefaultBackground_(null);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorEnabled = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n  $scope.$watch(\n    () => this.gmfUser.is_password_changed,\n    (value) => {\n      this.userMustChangeItsPassword = value === false;\n    }\n  );\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ngeox.DrawEvent\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      /** @type {ngeox.DrawEvent} */\n      const event = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n      this.dispatchEvent(event);\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, gettextCatalog, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, gettextCatalog, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/lengthComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/lengthComponent', require('./lengthComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter, gettextCatalog) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), this.gettextCatalog_, {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    'change:dirty',\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:drawing',\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    'change:valid',\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, coordFormat, options = /** @type {ngeox.interaction.MeasureOptions} */ ({})) {\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */(options));\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} The template url.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/measure/pointComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/measure/pointComponent', require('./pointComponent.html'));\n});\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ = function() {\n  if (this.measure.getActive()) {\n    const view = this.map.getView();\n    this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n      view,\n      'propertychange',\n      this.ngeoDebounce_(\n        this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n      this);\n    this.getMeasure_();\n  } else if (this.mapViewPropertyChangeEventKey_) {\n    olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n    this.mapViewPropertyChangeEventKey_ = null;\n  }\n};\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.measure.module\n */\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileMeasureModule', [\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.mobile.navigation.module\n */\nimport gmfMobileNavigationComponent from 'gmf/mobile/navigation/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMobileNavigationModule', [\n  gmfMobileNavigationComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.geolocation.mobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport * as olEasing from 'ol/easing.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeolocation from 'ol/Geolocation.js';\nimport olMap from 'ol/Map.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMobileGeolocation', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n]);\n\n/**\n * @enum {string}\n */\nexports.GeolocationEventType = {\n  /**\n   * Triggered when an error occurs.\n   */\n  ERROR: 'mobile-geolocation-error'\n};\n\n/**\n * Provide a \"mobile geolocation\" directive.\n *\n * Example:\n *\n *      <button ngeo-mobile-geolocation\n *        ngeo-mobile-geolocation-map=\"ctrl.map\"\n *        ngeo-mobile-geolocation-options=\"ctrl.mobileGeolocationOptions\">\n *      </button>\n *\n * See our live example: [../examples/mobilegeolocation.html](../examples/mobilegeolocation.html)\n *\n * @htmlAttribute {ol.Map} ngeo-mobile-geolocation-map The map.\n * @htmlAttribute {ngeox.MobileGeolocationDirectiveOptions} ngeo-mobile-geolocation-options The options.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMobileGeolocation\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: {\n      'getMobileMapFn': '&ngeoMobileGeolocationMap',\n      'getMobileGeolocationOptionsFn': '&ngeoMobileGeolocationOptions'\n    },\n    controller: 'ngeoGeolocationMobileController'\n  };\n};\n\n\nexports.directive('ngeoMobileGeolocation', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope The directive's scope.\n * @param {angular.JQLite} $element Element.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoMobileGeolocationController\n */\nexports.Controller_ = function($scope, $element,\n  gettextCatalog, ngeoFeatureOverlayMgr, ngeoNotification) {\n\n  $element.on('click', this.toggleTracking.bind(this));\n\n  const map = $scope['getMobileMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!ol.Map}\n   * @private\n   */\n  this.map_ = map;\n\n  const options = $scope['getMobileGeolocationOptionsFn']() || {};\n  googAsserts.assertObject(options);\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.notification_ = ngeoNotification;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {ol.Geolocation}\n   * @private\n   */\n  this.geolocation_ = new olGeolocation({\n    projection: map.getView().getProjection(),\n    trackingOptions: /** @type {GeolocationPositionOptions} */ ({\n      enableHighAccuracy: true\n    })\n  });\n\n  if (options.autorotate) {\n    this.autorotateListener();\n  }\n\n  // handle geolocation error.\n  this.geolocation_.on('error', (error) => {\n    this.untrack_();\n    let msg;\n    switch (error.code) {\n      case 1:\n        msg = gettextCatalog.getString('User denied the request for Geolocation.');\n        break;\n      case 2:\n        msg = gettextCatalog.getString('Location information is unavailable.');\n        break;\n      case 3:\n        msg = gettextCatalog.getString('The request to get user location timed out.');\n        break;\n      default:\n        msg = gettextCatalog.getString('Geolocation: An unknown error occurred.');\n        break;\n    }\n    this.notification_.error(msg);\n    $scope.$emit(exports.GeolocationEventType.ERROR, error);\n  });\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.positionFeature_ = new olFeature();\n\n  if (options.positionFeatureStyle) {\n    this.positionFeature_.setStyle(options.positionFeatureStyle);\n  }\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.accuracyFeature_ = new olFeature();\n\n  if (options.accuracyFeatureStyle) {\n    this.accuracyFeature_.setStyle(options.accuracyFeatureStyle);\n  }\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.zoom_ = options.zoom;\n\n  /**\n   * Whether to recenter the map at the position it gets updated\n   * @type {boolean}\n   * @private\n   */\n  this.follow_ = false;\n\n  /**\n   * A flag used to determine whether the view was changed by me or something\n   * else. In the latter case, stop following.\n   * @type {boolean}\n   * @private\n   */\n  this.viewChangedByMe_ = false;\n\n  olEvents.listen(this.geolocation_, 'change:accuracyGeometry', () => {\n    this.accuracyFeature_.setGeometry(this.geolocation_.getAccuracyGeometry());\n    this.setPosition_();\n  });\n\n  olEvents.listen(this.geolocation_, 'change:position', () => {\n    this.setPosition_();\n  });\n\n  const view = map.getView();\n\n  olEvents.listen(view, 'change:center', this.handleViewChange_, this);\n\n  olEvents.listen(view, 'change:resolution', this.handleViewChange_, this);\n\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.toggleTracking = function() {\n  if (this.geolocation_.getTracking()) {\n    // if map center is different than geolocation position, then track again\n    const currentPosition = this.geolocation_.getPosition();\n    // if user is using Firefox and selects the \"not now\" option, OL geolocation\n    // doesn't return an error\n    if (currentPosition === undefined) {\n      this.untrack_();\n      this.$scope_.$emit(exports.GeolocationEventType.ERROR, null);\n      return;\n    }\n    googAsserts.assert(currentPosition !== undefined);\n    // stop tracking if the position is close to the center of the map.\n    const center = this.map_.getView().getCenter();\n    const diff = Math.abs(currentPosition[0] - center[0]) + Math.abs(currentPosition[1] - center[1]);\n    if (diff < 2) {\n      this.untrack_();\n    } else {\n      this.untrack_();\n      this.track_();\n    }\n  } else {\n    this.track_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.track_ = function() {\n  this.featureOverlay_.addFeature(this.positionFeature_);\n  this.featureOverlay_.addFeature(this.accuracyFeature_);\n  this.follow_ = true;\n  this.geolocation_.setTracking(true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.untrack_ = function() {\n  this.featureOverlay_.clear();\n  this.follow_ = false;\n  this.geolocation_.setTracking(false);\n  this.notification_.clear();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.setPosition_ = function() {\n  const position = /** @type {ol.Coordinate} */ (this.geolocation_.getPosition());\n  const point = new olGeomPoint(position);\n\n  this.positionFeature_.setGeometry(point);\n  const accuracy = this.accuracyFeature_.getGeometry();\n\n  if (this.follow_) {\n    this.viewChangedByMe_ = true;\n    if (this.zoom_ !== undefined) {\n      this.map_.getView().setCenter(position);\n      this.map_.getView().setZoom(this.zoom_);\n    } else if (accuracy) {\n      const size = /** @type {!ol.Size} */ (this.map_.getSize());\n      this.map_.getView().fit(/** @type {!ol.geom.Polygon} */ (accuracy), size);\n    }\n    this.viewChangedByMe_ = false;\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleViewChange_ = function(event) {\n  if (this.follow_ && !this.viewChangedByMe_) {\n    this.follow_ = false;\n  }\n};\n\n\n// Orientation control events\nexports.Controller_.prototype.autorotateListener = function() {\n  let currentAlpha = 0;\n  if (window.hasOwnProperty('ondeviceorientationabsolute')) {\n    window.addEventListener('deviceorientationabsolute', (evt) => {\n      currentAlpha = this.handleRotate_(evt.alpha, currentAlpha);\n    }, true);\n  } else if (window.hasOwnProperty('ondeviceorientation')) {\n    window.addEventListener('deviceorientation', (evt) => {\n      if (evt.webkitCompassHeading) { // check for iOS property\n        currentAlpha = this.handleRotate_(-evt.webkitCompassHeading, currentAlpha);\n      } else { // non iOS\n        currentAlpha = this.handleRotate_(evt.alpha - 270, currentAlpha);\n      }\n    }, true);\n  } else {\n    console.error('Orientation is not supported on this device');\n  }\n};\n\n/**\n * Handle rotation.\n * @param {number} eventAlpha .\n * @param {number} currentAlpha .\n * @return {number} .\n * @private\n */\nexports.Controller_.prototype.handleRotate_ = function(eventAlpha, currentAlpha) {\n  if (this.geolocation_.getTracking() && Math.abs(eventAlpha - currentAlpha) > 0.2) {\n    currentAlpha = eventAlpha;\n    const radAlpha = currentAlpha * Math.PI / 180;\n    this.map_.getView().animate({\n      rotation: radAlpha,\n      duration: 350,\n      easing: olEasing.linear\n    });\n  }\n  return currentAlpha;\n};\n\n\nexports.controller('ngeoGeolocationMobileController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractMobileController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfMobileMeasureModule from 'gmf/mobile/measure/module.js';\nimport gmfMobileNavigationModule from 'gmf/mobile/navigation/module.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\nimport ngeoGeolocationMobile from 'ngeo/geolocation/mobile.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Mobile application abstract controller.\n *\n * This file includes `goog.require`'s mobile components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.searchOverlayVisible = false;\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.searchListeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    open: function() {\n      this.searchOverlayVisible = true;\n    }.bind(this),\n    close: function() {\n      this.searchOverlayVisible = false;\n    }.bind(this)\n  });\n\n  const positionFeatureStyle = config.positionFeatureStyle || new olStyleStyle({\n    image: new olStyleCircle({\n      radius: 6,\n      fill: new olStyleFill({color: 'rgba(230, 100, 100, 1)'}),\n      stroke: new olStyleStroke({color: 'rgba(230, 40, 40, 1)', width: 2})\n    })\n  });\n\n  const accuracyFeatureStyle = config.accuracyFeatureStyle || new olStyleStyle({\n    fill: new olStyleFill({color: 'rgba(100, 100, 230, 0.3)'}),\n    stroke: new olStyleStroke({color: 'rgba(40, 40, 230, 1)', width: 2})\n  });\n\n  /**\n   * @type {ngeox.MobileGeolocationDirectiveOptions}\n   * @export\n   */\n  this.mobileGeolocationOptions = {\n    positionFeatureStyle: positionFeatureStyle,\n    accuracyFeatureStyle: accuracyFeatureStyle,\n    zoom: config.geolocationZoom,\n    autorotate: config.autorotate\n  };\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine(),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions:\n        config.mapInteractions ||\n        olInteraction.defaults({pinchRotate: true})\n  });\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  this.manageResize = true;\n  this.resizeTransition = 500;\n\n  // Close right nave on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.navIsVisible()) {\n      this.rightNavVisible = false;\n    }\n  });\n\n  /**\n   * @const {string}\n   * @export\n   */\n  this.redirectUrl = $injector.get('redirectUrl');\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\n\n/**\n * @export\n */\nexports.prototype.toggleLeftNavVisibility = function() {\n  this.leftNavVisible = !this.leftNavVisible;\n};\n\n\n/**\n * @export\n */\nexports.prototype.toggleRightNavVisibility = function() {\n  this.rightNavVisible = !this.rightNavVisible;\n};\n\n\n/**\n * Hide both navigation menus.\n * @export\n */\nexports.prototype.hideNav = function() {\n  this.leftNavVisible = this.rightNavVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if one of the navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.navIsVisible = function() {\n  return this.leftNavVisible || this.rightNavVisible;\n};\n\n\n/**\n * Hide search overlay.\n * @export\n */\nexports.prototype.hideSearchOverlay = function() {\n  this.searchOverlayVisible = false;\n};\n\n\n/**\n * @return {boolean} Return true if the left navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.leftNavIsVisible = function() {\n  return this.leftNavVisible;\n};\n\n\n/**\n * @return {boolean} Return true if the right navigation menus is visible,\n * otherwise false.\n * @export\n */\nexports.prototype.rightNavIsVisible = function() {\n  return this.rightNavVisible;\n};\n\n\n/**\n * Open the menu with corresponding to the data-target attribute value.\n * @param {string} target the data-target value.\n * @export\n */\nexports.prototype.openNavMenu = function(target) {\n  const navElements = document.getElementsByClassName('gmf-mobile-nav-button');\n  for (let i = 0; i < navElements.length; i++) {\n    const element = navElements[i];\n    if (element.dataset && element.dataset.target === target) {\n      element.click();\n    }\n  }\n};\n\n\nexports.module = angular.module('GmfAbstractMobileControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfMobileMeasureModule.name,\n  gmfMobileNavigationModule.name,\n  gmfQueryWindowComponent.name,\n  ngeoGeolocationMobile.name,\n]);\n\nexports.module.controller('AbstractMobileController', exports);\n\nexports.module.value('isMobile', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'tolerance': 10\n});\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.mobile.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractMobileController from 'gmf/controllers/AbstractMobileController.js';\nimport 'gmf/controllers/mobile.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractMobileController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractMobileController.call(this, {\n    autorotate: false,\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = [\n    {name: 'aster', unit: 'm'},\n    {name: 'srtm', unit: 'm'}\n  ];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractMobileController);\n\nexports.module = angular.module('Appmobile', [\n  appBase.module.name,\n  gmfControllersAbstractMobileController.module.name,\n]);\n\nexports.module.controller('MobileController', exports);\n\nexport default exports;\n","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && (!ctrl.valid)\\\" ng-click=ctrl.addPoint()> <span class=\\\"fa fa-check\\\"></span> {{'Set as starting point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.dirty ng-click=ctrl.addPoint()> <span class=\\\"fa fa-plus\\\"></span> {{'Add new point' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=\\\"ctrl.drawing && ctrl.valid && !ctrl.dirty\\\" ng-click=ctrl.finish()> <span class=\\\"fa fa-check\\\"></span> {{'Terminate' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.valid ng-click=ctrl.clear()> <span class=\\\"fa fa-repeat\\\"></span> {{'Clear' | translate}} </a> <a class=\\\"btn btn-default\\\" ng-if=ctrl.active ng-click=ctrl.deactivate()> <span class=\\\"fa fa-times\\\"></span> {{'Close' | translate}} </a> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style title=\\\"\\\"> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> <div class=content-template-container></div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open> <button class=collapse-button type=button ng-show=::!ctrl.desktop ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr ng-if=::$ctrl.enableEmail> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <div> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </div> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children> <span ng-switch=\\\"layertreeCtrl.node.children && !layertreeCtrl.layer.loading\\\"> <i ng-switch-when=true class=\\\"fa fa-fw gmf-layertree-state\\\"></i> <i ng-switch-when=false class=\\\"fa fa-fw fa-refresh fa-spin\\\"></i> </span> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = __webpack_public_path__ + \"crosshair.3aa99e.svg\";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> </div> <div ng-if=!$ctrl.gmfUser.username> <div class=\\\"alert alert-warning\\\" ng-show=$ctrl.infoMessage> <span>{{ $ctrl.infoMessage }}</span> </div> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}